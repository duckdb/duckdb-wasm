{
  "version": 3,
  "sources": ["../../js-sha256/src/sha256.js", "../src/bindings/duckdb-mvp.js", "../src/bindings/duckdb-eh.js", "../../web-worker/cjs/browser.js", "../../apache-arrow/node_modules/tslib/tslib.es6.mjs", "../../apache-arrow/util/util/buffer.ts", "../../apache-arrow/util/util/utf8.ts", "../../apache-arrow/util/util/compat.ts", "../../apache-arrow/io/io/adapters.ts", "../../apache-arrow/enum.ts", "../../apache-arrow/util/util/vector.ts", "../../apache-arrow/util/util/pretty.ts", "../../apache-arrow/util/util/bn.ts", "../../apache-arrow/util/util/bigint.ts", "../../apache-arrow/type.ts", "../../apache-arrow/visitor.ts", "../../apache-arrow/util/util/math.ts", "../../apache-arrow/visitor/visitor/set.ts", "../../apache-arrow/row/row/struct.ts", "../../apache-arrow/visitor/visitor/get.ts", "../../apache-arrow/row/row/map.ts", "../../apache-arrow/util/util/bit.ts", "../../apache-arrow/data.ts", "../../apache-arrow/util/util/chunk.ts", "../../apache-arrow/visitor/visitor/indexof.ts", "../../apache-arrow/visitor/visitor/iterator.ts", "../../apache-arrow/visitor/visitor/bytelength.ts", "../../apache-arrow/vector.ts", "../../apache-arrow/builder/builder/valid.ts", "../../apache-arrow/builder/builder/buffer.ts", "../../apache-arrow/builder.ts", "../../apache-arrow/fb/fb/block.ts", "../../flatbuffers/mjs/constants.js", "../../flatbuffers/mjs/utils.js", "../../flatbuffers/mjs/encoding.js", "../../flatbuffers/mjs/byte-buffer.js", "../../flatbuffers/mjs/builder.js", "../../apache-arrow/fb/fb/key-value.ts", "../../apache-arrow/fb/fb/metadata-version.ts", "../../apache-arrow/fb/fb/endianness.ts", "../../apache-arrow/fb/fb/dictionary-kind.ts", "../../apache-arrow/fb/fb/int.ts", "../../apache-arrow/fb/fb/dictionary-encoding.ts", "../../apache-arrow/fb/fb/binary.ts", "../../apache-arrow/fb/fb/bool.ts", "../../apache-arrow/fb/fb/date-unit.ts", "../../apache-arrow/fb/fb/date.ts", "../../apache-arrow/fb/fb/decimal.ts", "../../apache-arrow/fb/fb/time-unit.ts", "../../apache-arrow/fb/fb/fixed-size-binary.ts", "../../apache-arrow/fb/fb/fixed-size-list.ts", "../../apache-arrow/fb/fb/precision.ts", "../../apache-arrow/fb/fb/floating-point.ts", "../../apache-arrow/fb/fb/interval-unit.ts", "../../apache-arrow/fb/fb/interval.ts", "../../apache-arrow/fb/fb/list.ts", "../../apache-arrow/fb/fb/map.ts", "../../apache-arrow/fb/fb/null.ts", "../../apache-arrow/fb/fb/struct-.ts", "../../apache-arrow/fb/fb/time.ts", "../../apache-arrow/fb/fb/timestamp.ts", "../../apache-arrow/fb/fb/union-mode.ts", "../../apache-arrow/fb/fb/union.ts", "../../apache-arrow/fb/fb/utf8.ts", "../../apache-arrow/fb/fb/type.ts", "../../apache-arrow/fb/fb/field.ts", "../../apache-arrow/fb/fb/schema.ts", "../../apache-arrow/fb/fb/footer.ts", "../../apache-arrow/schema.ts", "../../apache-arrow/ipc/metadata/ipc/metadata/file.ts", "../../apache-arrow/io/io/interfaces.ts", "../../apache-arrow/io/io/stream.ts", "../../apache-arrow/io/io/file.ts", "../../apache-arrow/util/util/int.ts", "../../apache-arrow/visitor/visitor/vectorloader.ts", "../../apache-arrow/builder/builder/binary.ts", "../../apache-arrow/builder/builder/bool.ts", "../../apache-arrow/builder/builder/date.ts", "../../apache-arrow/builder/builder/decimal.ts", "../../apache-arrow/builder/builder/dictionary.ts", "../../apache-arrow/builder/builder/fixedsizebinary.ts", "../../apache-arrow/builder/builder/fixedsizelist.ts", "../../apache-arrow/builder/builder/float.ts", "../../apache-arrow/builder/builder/interval.ts", "../../apache-arrow/builder/builder/int.ts", "../../apache-arrow/builder/builder/list.ts", "../../apache-arrow/builder/builder/map.ts", "../../apache-arrow/builder/builder/null.ts", "../../apache-arrow/builder/builder/struct.ts", "../../apache-arrow/builder/builder/timestamp.ts", "../../apache-arrow/builder/builder/time.ts", "../../apache-arrow/builder/builder/union.ts", "../../apache-arrow/builder/builder/utf8.ts", "../../apache-arrow/visitor/visitor/builderctor.ts", "../../apache-arrow/visitor/visitor/typecomparator.ts", "../../apache-arrow/factories.ts", "../../apache-arrow/util/util/recordbatch.ts", "../../apache-arrow/table.ts", "../../apache-arrow/recordbatch.ts", "../../apache-arrow/fb/fb/body-compression-method.ts", "../../apache-arrow/fb/fb/compression-type.ts", "../../apache-arrow/fb/fb/body-compression.ts", "../../apache-arrow/fb/fb/buffer.ts", "../../apache-arrow/fb/fb/field-node.ts", "../../apache-arrow/fb/fb/record-batch.ts", "../../apache-arrow/fb/fb/dictionary-batch.ts", "../../apache-arrow/fb/fb/message-header.ts", "../../apache-arrow/fb/fb/message.ts", "../../apache-arrow/visitor/visitor/typeassembler.ts", "../../apache-arrow/ipc/metadata/ipc/metadata/json.ts", "../../apache-arrow/ipc/metadata/ipc/metadata/message.ts", "../../apache-arrow/ipc/ipc/message.ts", "../../apache-arrow/ipc/ipc/reader.ts", "../../apache-arrow/visitor/visitor/vectorassembler.ts", "../../apache-arrow/ipc/ipc/writer.ts", "../../apache-arrow/io/whatwg/io/whatwg/iterable.ts", "../../apache-arrow/io/whatwg/io/whatwg/builder.ts", "../../apache-arrow/io/whatwg/io/whatwg/reader.ts", "../../apache-arrow/io/whatwg/io/whatwg/writer.ts", "../../apache-arrow/ipc/ipc/serialization.ts", "../../apache-arrow/Arrow.ts", "../../apache-arrow/Arrow.dom.ts", "../src/bindings/connection.ts", "../src/bindings/udf_runtime.ts", "../src/bindings/runtime.ts", "../src/bindings/file_stats.ts", "../src/json_typedef.ts", "../src/bindings/bindings_base.ts", "../src/log.ts", "../../wasm-feature-detect/dist/esm/index.js", "../src/platform.ts", "../src/utils/s3_helper.ts", "../src/bindings/runtime_browser.ts", "../src/bindings/bindings_browser_mvp.ts", "../src/bindings/bindings_browser_base.ts", "../src/bindings/bindings_browser_eh.ts", "../src/targets/duckdb-browser-blocking.ts", "../src/parallel/async_connection.ts", "../src/parallel/worker_request.ts", "../src/parallel/async_bindings.ts", "../src/worker.ts", "../test/all_types.test.ts", "../test/httpfs_test.ts", "../test/bindings.test.ts", "../test/batch_stream.test.ts", "../test/batch_stream_async.test.ts", "../test/filesystem.test.ts", "../test/table_test.ts", "../test/insert_arrow.test.ts", "../test/insert_json.test.ts", "../test/insert_csv.test.ts", "../test/tokenizer.test.ts", "../test/tablenames.test.ts", "../test/regression/github_332.test.ts", "../test/regression/github_334.test.ts", "../test/regression/github_393.test.ts", "../test/regression/github_448.test.ts", "../test/regression/github_470.test.ts", "../test/regression/github_477.test.ts", "../test/regression/index.ts", "../test/udf.test.ts", "../test/index_browser.ts"],
  "sourcesContent": ["/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "\nvar DuckDB = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module[\"inspect\"]=()=>\"[Emscripten Module object]\"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith(\"file://\");var wasmBinaryFile;wasmBinaryFile=\"./duckdb-mvp.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmExports=applySignatureConversions(wasmExports);wasmMemory=wasmExports[\"yf\"];updateMemoryViews();wasmTable=wasmExports[\"Bf\"];addOnInit(wasmExports[\"zf\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${status})`;this.status=status}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var exceptionCaught=[];var uncaughtExceptionCount=0;var convertI32PairToI53Checked=(lo,hi)=>hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN;function ___cxa_begin_catch(ptr){ptr>>>=0;var info=new ExceptionInfo(ptr);if(!info.get_caught()){info.set_caught(true);uncaughtExceptionCount--}info.set_rethrown(false);exceptionCaught.push(info);___cxa_increment_exception_refcount(info.excPtr);return info.get_exception_ptr()}var exceptionLast=0;var ___cxa_end_catch=()=>{_setThrew(0,0);var info=exceptionCaught.pop();___cxa_decrement_exception_refcount(info.excPtr);exceptionLast=0};function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>>2>>>0]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>>2>>>0]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2>>>0]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2>>>0]};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>>0>>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>>0>>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>>0>>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>>0>>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2>>>0]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2>>>0]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>>2>>>0]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}function ___resumeException(ptr){ptr>>>=0;if(!exceptionLast){exceptionLast=ptr}throw exceptionLast}var findMatchingCatch=args=>{var thrown=exceptionLast;if(!thrown){setTempRet0(0);return 0}var info=new ExceptionInfo(thrown);info.set_adjusted_ptr(thrown);var thrownType=info.get_type();if(!thrownType){setTempRet0(0);return thrown}for(var arg in args){var caughtType=args[arg];if(caughtType===0||caughtType===thrownType){break}var adjusted_ptr_addr=info.ptr+16;if(___cxa_can_catch(caughtType,thrownType,adjusted_ptr_addr)){setTempRet0(caughtType);return thrown}}setTempRet0(thrownType);return thrown};function ___cxa_find_matching_catch_2(){return findMatchingCatch([])}function ___cxa_find_matching_catch_3(arg0){arg0>>>=0;return findMatchingCatch([arg0])}function ___cxa_find_matching_catch_4(arg0,arg1){arg0>>>=0;arg1>>>=0;return findMatchingCatch([arg0,arg1])}function ___cxa_find_matching_catch_5(arg0,arg1,arg2){arg0>>>=0;arg1>>>=0;arg2>>>=0;return findMatchingCatch([arg0,arg1,arg2])}function ___cxa_find_matching_catch_6(arg0,arg1,arg2,arg3){arg0>>>=0;arg1>>>=0;arg2>>>=0;arg3>>>=0;return findMatchingCatch([arg0,arg1,arg2,arg3])}function ___cxa_find_matching_catch_7(arg0,arg1,arg2,arg3,arg4){arg0>>>=0;arg1>>>=0;arg2>>>=0;arg3>>>=0;arg4>>>=0;return findMatchingCatch([arg0,arg1,arg2,arg3,arg4])}var ___cxa_rethrow=()=>{var info=exceptionCaught.pop();if(!info){abort(\"no exception to throw\")}var ptr=info.excPtr;if(!info.get_rethrown()){exceptionCaught.push(info);info.set_rethrown(true);info.set_caught(false);uncaughtExceptionCount++}exceptionLast=ptr;throw exceptionLast};function ___cxa_throw(ptr,type,destructor){ptr>>>=0;type>>>=0;destructor>>>=0;var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast}var ___cxa_uncaught_exceptions=()=>uncaughtExceptionCount;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>{ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"};var SYSCALLS={varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>>2>>>0];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret}};function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){readfds>>>=0;writefds>>>=0;exceptfds>>>=0;timeout>>>=0;var total=0;var srcReadLow=readfds?HEAP32[readfds>>>2>>>0]:0,srcReadHigh=readfds?HEAP32[readfds+4>>>2>>>0]:0;var srcWriteLow=writefds?HEAP32[writefds>>>2>>>0]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>>2>>>0]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>>2>>>0]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>>2>>>0]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>>2>>>0]:0)|(writefds?HEAP32[writefds>>>2>>>0]:0)|(exceptfds?HEAP32[exceptfds>>>2>>>0]:0);var allHigh=(readfds?HEAP32[readfds+4>>>2>>>0]:0)|(writefds?HEAP32[writefds+4>>>2>>>0]:0)|(exceptfds?HEAP32[exceptfds+4>>>2>>>0]:0);var check=function(fd,low,high,val){return fd<32?low&val:high&val};for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=SYSCALLS.getStreamFromFD(fd);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){var timeoutInMillis=-1;if(timeout){var tv_sec=readfds?HEAP32[timeout>>>2>>>0]:0,tv_usec=readfds?HEAP32[timeout+4>>>2>>>0]:0;timeoutInMillis=(tv_sec+tv_usec/1e6)*1e3}flags=stream.stream_ops.poll(stream,timeoutInMillis)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>>2>>>0]=dstReadLow;HEAP32[readfds+4>>>2>>>0]=dstReadHigh}if(writefds){HEAP32[writefds>>>2>>>0]=dstWriteLow;HEAP32[writefds+4>>>2>>>0]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>>2>>>0]=dstExceptLow;HEAP32[exceptfds+4>>>2>>>0]=dstExceptHigh}return total}function SOCKFS(){abort(\"missing function: $SOCKFS\")}SOCKFS.stub=true;function FS(){abort(\"missing function: $FS\")}FS.stub=true;var getSocketFromFD=fd=>{var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket};var inetNtop4=addr=>(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255);var inetNtop6=ints=>{var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str};var readSockaddr=(sa,salen)=>{var family=HEAP16[sa>>>1>>>0];var port=_ntohs(HEAPU16[sa+2>>>1>>>0]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>>2>>>0];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>>2>>>0],HEAP32[sa+12>>>2>>>0],HEAP32[sa+16>>>2>>>0],HEAP32[sa+20>>>2>>>0]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}};var inetPton4=str=>{var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0};var jstoi_q=str=>parseInt(str);var inetPton6=str=>{var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]==\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]};var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};var getSocketAddress=(addrp,addrlen,allowNull)=>{if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info};function ___syscall_bind(fd,addr,addrlen,d1,d2,d3){addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.bind(sock,info.addr,info.port);return 0}function ___syscall_connect(fd,addr,addrlen,d1,d2,d3){addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}function ___syscall_faccessat(dirfd,path,amode,flags){path>>>=0}function ___syscall_fcntl64(fd,cmd,varargs){varargs>>>=0;SYSCALLS.varargs=varargs;return 0}function ___syscall_fstat64(fd,buf){buf>>>=0}function ___syscall_ftruncate64(fd,length_low,length_high){var length=convertI32PairToI53Checked(length_low,length_high)}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);function ___syscall_getdents64(fd,dirp,count){dirp>>>=0;count>>>=0}var zeroMemory=(address,size)=>{HEAPU8.fill(0,address,address+size);return address};var writeSockaddr=(sa,family,addr,port,addrlen)=>{switch(family){case 2:addr=inetPton4(addr);zeroMemory(sa,16);if(addrlen){HEAP32[addrlen>>>2>>>0]=16}HEAP16[sa>>>1>>>0]=family;HEAP32[sa+4>>>2>>>0]=addr;HEAP16[sa+2>>>1>>>0]=_htons(port);break;case 10:addr=inetPton6(addr);zeroMemory(sa,28);if(addrlen){HEAP32[addrlen>>>2>>>0]=28}HEAP32[sa>>>2>>>0]=family;HEAP32[sa+8>>>2>>>0]=addr[0];HEAP32[sa+12>>>2>>>0]=addr[1];HEAP32[sa+16>>>2>>>0]=addr[2];HEAP32[sa+20>>>2>>>0]=addr[3];HEAP16[sa+2>>>1>>>0]=_htons(port);break;default:return 5}return 0};function ___syscall_getpeername(fd,addr,addrlen,d1,d2,d3){addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);if(!sock.daddr){return-53}var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport,addrlen);return 0}function ___syscall_getsockopt(fd,level,optname,optval,optlen,d1){optval>>>=0;optlen>>>=0;var sock=getSocketFromFD(fd);if(level===1){if(optname===4){HEAP32[optval>>>2>>>0]=sock.error;HEAP32[optlen>>>2>>>0]=4;sock.error=null;return 0}}return-50}function ___syscall_ioctl(fd,op,varargs){varargs>>>=0;SYSCALLS.varargs=varargs;return 0}function ___syscall_lstat64(path,buf){path>>>=0;buf>>>=0}function ___syscall_mkdirat(dirfd,path,mode){path>>>=0}function ___syscall_newfstatat(dirfd,path,buf,flags){path>>>=0;buf>>>=0}function ___syscall_openat(dirfd,path,flags,varargs){path>>>=0;varargs>>>=0;SYSCALLS.varargs=varargs}function ___syscall_recvfrom(fd,buf,len,flags,addr,addrlen){buf>>>=0;len>>>=0;addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port,addrlen)}HEAPU8.set(msg.buffer,buf>>>0);return msg.buffer.byteLength}function ___syscall_renameat(olddirfd,oldpath,newdirfd,newpath){oldpath>>>=0;newpath>>>=0}function ___syscall_rmdir(path){path>>>=0}function ___syscall_sendto(fd,message,length,flags,addr,addr_len){message>>>=0;length>>>=0;addr>>>=0;addr_len>>>=0}var ___syscall_socket=(domain,type,protocol)=>{};function ___syscall_stat64(path,buf){path>>>=0;buf>>>=0}function ___syscall_unlinkat(dirfd,path,flags){path>>>=0}var nowIsMonotonic=1;var __emscripten_get_now_is_monotonic=()=>nowIsMonotonic;var _abort=()=>{abort(\"\")};function _duckdb_web_fs_directory_create(path,pathLen){return globalThis.DUCKDB_RUNTIME.createDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_list_files(path,pathLen){return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module,path,pathLen)}function _duckdb_web_fs_directory_remove(path,pathLen){return globalThis.DUCKDB_RUNTIME.removeDirectory(Module,path,pathLen)}function _duckdb_web_fs_file_close(fileId){return globalThis.DUCKDB_RUNTIME.closeFile(Module,fileId)}function _duckdb_web_fs_file_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkFile(Module,path,pathLen)}function _duckdb_web_fs_file_get_last_modified_time(fileId){return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module,fileId)}function _duckdb_web_fs_file_move(from,fromLen,to,toLen){return globalThis.DUCKDB_RUNTIME.moveFile(Module,from,fromLen,to,toLen)}function _duckdb_web_fs_file_open(fileId,flags){return globalThis.DUCKDB_RUNTIME.openFile(Module,fileId,flags)}function _duckdb_web_fs_file_read(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.readFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_file_truncate(fileId,newSize){return globalThis.DUCKDB_RUNTIME.truncateFile(Module,fileId,newSize)}function _duckdb_web_fs_file_write(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.writeFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_get_default_data_protocol(Module){return globalThis.DUCKDB_RUNTIME.getDefaultDataProtocol(Module)}function _duckdb_web_fs_glob(path,pathLen){return globalThis.DUCKDB_RUNTIME.glob(Module,path,pathLen)}function _duckdb_web_test_platform_feature(feature){return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module,feature)}function _duckdb_web_udf_scalar_call(funcId,descPtr,descSize,ptrsPtr,ptrsSize,response){return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module,funcId,descPtr,descSize,ptrsPtr,ptrsSize,response)}var _emscripten_date_now=()=>Date.now();var getHeapMax=()=>4294901760;function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;_emscripten_get_now=()=>performance.now();function _emscripten_memcpy_js(dest,src,num){dest>>>=0;src>>>=0;num>>>=0;return HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false}var ENV={};var getExecutableName=()=>thisProgram||\"./this.program\";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++>>>0>>>0]=str.charCodeAt(i)}HEAP8[buffer>>>0>>>0]=0};var _environ_get=function(__environ,environ_buf){__environ>>>=0;environ_buf>>>=0;var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>>2>>>0]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=function(penviron_count,penviron_buf_size){penviron_count>>>=0;penviron_buf_size>>>=0;var strings=getEnvStrings();HEAPU32[penviron_count>>>2>>>0]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>>2>>>0]=bufSize;return 0};var _fd_close=fd=>52;function _fd_fdstat_get(fd,pbuf){pbuf>>>=0;var rightsBase=0;var rightsInheriting=0;var flags=0;{var type=2;if(fd==0){rightsBase=2}else if(fd==1||fd==2){rightsBase=64}flags=1}HEAP8[pbuf>>>0>>>0]=type;HEAP16[pbuf+2>>>1>>>0]=flags;tempI64=[rightsBase>>>0,(tempDouble=rightsBase,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+8>>>2>>>0]=tempI64[0],HEAP32[pbuf+12>>>2>>>0]=tempI64[1];tempI64=[rightsInheriting>>>0,(tempDouble=rightsInheriting,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+16>>>2>>>0]=tempI64[0],HEAP32[pbuf+20>>>2>>>0]=tempI64[1];return 0}function _fd_pread(fd,iov,iovcnt,offset_low,offset_high,pnum){iov>>>=0;iovcnt>>>=0;var offset=convertI32PairToI53Checked(offset_low,offset_high);pnum>>>=0;return 52}function _fd_pwrite(fd,iov,iovcnt,offset_low,offset_high,pnum){iov>>>=0;iovcnt>>>=0;var offset=convertI32PairToI53Checked(offset_low,offset_high);pnum>>>=0;return 52}function _fd_read(fd,iov,iovcnt,pnum){iov>>>=0;iovcnt>>>=0;pnum>>>=0;return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);newOffset>>>=0;return 70}var _fd_sync=fd=>52;var printCharBuffers=[null,[],[]];var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}};function _fd_write(fd,iov,iovcnt,pnum){iov>>>=0;iovcnt>>>=0;pnum>>>=0;var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2>>>0];var len=HEAPU32[iov+4>>>2>>>0];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j>>>0])}num+=len}HEAPU32[pnum>>>2>>>0]=num;return 0}function _getaddrinfo(node,service,hint,out){node>>>=0;service>>>=0;hint>>>=0;out>>>=0;var addr=0;var port=0;var flags=0;var family=0;var type=0;var proto=0;var ai;function allocaddrinfo(family,type,proto,canon,addr,port){var sa,salen,ai;var errno;salen=family===10?28:16;addr=family===10?inetNtop6(addr):inetNtop4(addr);sa=_malloc(salen);errno=writeSockaddr(sa,family,addr,port);assert(!errno);ai=_malloc(32);HEAP32[ai+4>>>2>>>0]=family;HEAP32[ai+8>>>2>>>0]=type;HEAP32[ai+12>>>2>>>0]=proto;HEAPU32[ai+24>>>2>>>0]=canon;HEAPU32[ai+20>>>2>>>0]=sa;if(family===10){HEAP32[ai+16>>>2>>>0]=28}else{HEAP32[ai+16>>>2>>>0]=16}HEAP32[ai+28>>>2>>>0]=0;return ai}if(hint){flags=HEAP32[hint>>>2>>>0];family=HEAP32[hint+4>>>2>>>0];type=HEAP32[hint+8>>>2>>>0];proto=HEAP32[hint+12>>>2>>>0]}if(type&&!proto){proto=type===2?17:6}if(!type&&proto){type=proto===17?2:1}if(proto===0){proto=6}if(type===0){type=1}if(!node&&!service){return-2}if(flags&~(1|2|4|1024|8|16|32)){return-1}if(hint!==0&&HEAP32[hint>>>2>>>0]&2&&!node){return-1}if(flags&32){return-2}if(type!==0&&type!==1&&type!==2){return-7}if(family!==0&&family!==2&&family!==10){return-6}if(service){service=UTF8ToString(service);port=parseInt(service,10);if(isNaN(port)){if(flags&1024){return-2}return-8}}if(!node){if(family===0){family=2}if((flags&1)===0){if(family===2){addr=_htonl(2130706433)}else{addr=[0,0,0,1]}}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2>>>0]=ai;return 0}node=UTF8ToString(node);addr=inetPton4(node);if(addr!==null){if(family===0||family===2){family=2}else if(family===10&&flags&8){addr=[0,0,_htonl(65535),addr];family=10}else{return-2}}else{addr=inetPton6(node);if(addr!==null){if(family===0||family===10){family=10}else{return-2}}}if(addr!=null){ai=allocaddrinfo(family,type,proto,node,addr,port);HEAPU32[out>>>2>>>0]=ai;return 0}if(flags&4){return-2}node=DNS.lookup_name(node);addr=inetPton4(node);if(family===0){family=2}else if(family===10){addr=[0,0,_htonl(65535),addr]}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2>>>0]=ai;return 0}var initRandomFill=()=>{if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){return view=>crypto.getRandomValues(view)}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");var randomFillSync=crypto_module[\"randomFillSync\"];if(randomFillSync){return view=>crypto_module[\"randomFillSync\"](view)}var randomBytes=crypto_module[\"randomBytes\"];return view=>(view.set(randomBytes(view.byteLength)),view)}catch(e){}}abort(\"initRandomDevice\")};var randomFill=view=>(randomFill=initRandomFill())(view);function _getentropy(buffer,size){buffer>>>=0;size>>>=0;randomFill(HEAPU8.subarray(buffer>>>0,buffer+size>>>0));return 0}function _getnameinfo(sa,salen,node,nodelen,serv,servlen,flags){sa>>>=0;node>>>=0;serv>>>=0;var info=readSockaddr(sa,salen);if(info.errno){return-6}var port=info.port;var addr=info.addr;var overflowed=false;if(node&&nodelen){var lookup;if(flags&1||!(lookup=DNS.lookup_addr(addr))){if(flags&8){return-2}}else{addr=lookup}var numBytesWrittenExclNull=stringToUTF8(addr,node,nodelen);if(numBytesWrittenExclNull+1>=nodelen){overflowed=true}}if(serv&&servlen){port=\"\"+port;var numBytesWrittenExclNull=stringToUTF8(port,serv,servlen);if(numBytesWrittenExclNull+1>=servlen){overflowed=true}}if(overflowed){return-12}return 0}function _llvm_eh_typeid_for(type){type>>>=0;return type}var isLeapYear=year=>year%4===0&&(year%100!==0||year%400===0);var arraySum=(array,index)=>{var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=(date,days)=>{var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer>>>0)};function _strftime(s,maxsize,format,tm){s>>>=0;maxsize>>>=0;format>>>=0;tm>>>=0;var tm_zone=HEAPU32[tm+40>>>2>>>0];var date={tm_sec:HEAP32[tm>>>2>>>0],tm_min:HEAP32[tm+4>>>2>>>0],tm_hour:HEAP32[tm+8>>>2>>>0],tm_mday:HEAP32[tm+12>>>2>>>0],tm_mon:HEAP32[tm+16>>>2>>>0],tm_year:HEAP32[tm+20>>>2>>>0],tm_wday:HEAP32[tm+24>>>2>>>0],tm_yday:HEAP32[tm+28>>>2>>>0],tm_isdst:HEAP32[tm+32>>>2>>>0],tm_gmtoff:HEAP32[tm+36>>>2>>>0],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":date=>WEEKDAYS[date.tm_wday].substring(0,3),\"%A\":date=>WEEKDAYS[date.tm_wday],\"%b\":date=>MONTHS[date.tm_mon].substring(0,3),\"%B\":date=>MONTHS[date.tm_mon],\"%C\":date=>{var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":date=>leadingNulls(date.tm_mday,2),\"%e\":date=>leadingSomething(date.tm_mday,2,\" \"),\"%g\":date=>getWeekBasedYear(date).toString().substring(2),\"%G\":date=>getWeekBasedYear(date),\"%H\":date=>leadingNulls(date.tm_hour,2),\"%I\":date=>{var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),\"%m\":date=>leadingNulls(date.tm_mon+1,2),\"%M\":date=>leadingNulls(date.tm_min,2),\"%n\":()=>\"\\n\",\"%p\":date=>{if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":date=>leadingNulls(date.tm_sec,2),\"%t\":()=>\"\\t\",\"%u\":date=>date.tm_wday||7,\"%U\":date=>{var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":date=>{var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":date=>date.tm_wday,\"%W\":date=>{var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":date=>(date.tm_year+1900).toString().substring(2),\"%Y\":date=>date.tm_year+1900,\"%z\":date=>{var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":date=>date.tm_zone,\"%%\":()=>\"%\"};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){s>>>=0;maxsize>>>=0;format>>>=0;tm>>>=0;loc>>>=0;return _strftime(s,maxsize,format,tm)}var runtimeKeepaliveCounter=0;var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module[\"onExit\"]?.(code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;_proc_exit(status)};var handleException=e=>{if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var getCFunc=ident=>{var func=Module[\"_\"+ident];return func};var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var wasmImports={v:___cxa_begin_catch,D:___cxa_end_catch,a:___cxa_find_matching_catch_2,k:___cxa_find_matching_catch_3,B:___cxa_find_matching_catch_4,O:___cxa_find_matching_catch_5,Q:___cxa_find_matching_catch_6,va:___cxa_find_matching_catch_7,pa:___cxa_rethrow,s:___cxa_throw,E:___cxa_uncaught_exceptions,c:___resumeException,La:___syscall__newselect,Pa:___syscall_bind,Oa:___syscall_connect,Ca:___syscall_faccessat,P:___syscall_fcntl64,Ba:___syscall_fstat64,yb:___syscall_ftruncate64,wa:___syscall_getdents64,Ja:___syscall_getpeername,Ka:___syscall_getsockopt,ma:___syscall_ioctl,ya:___syscall_lstat64,xa:___syscall_mkdirat,za:___syscall_newfstatat,na:___syscall_openat,Ma:___syscall_recvfrom,uf:___syscall_renameat,ea:___syscall_rmdir,Na:___syscall_sendto,ia:___syscall_socket,Aa:___syscall_stat64,fa:___syscall_unlinkat,Sa:__emscripten_get_now_is_monotonic,aa:_abort,jf:_duckdb_web_fs_directory_create,kf:_duckdb_web_fs_directory_exists,gf:_duckdb_web_fs_directory_list_files,hf:_duckdb_web_fs_directory_remove,ta:_duckdb_web_fs_file_close,ef:_duckdb_web_fs_file_exists,cb:_duckdb_web_fs_file_get_last_modified_time,ff:_duckdb_web_fs_file_move,mf:_duckdb_web_fs_file_open,ba:_duckdb_web_fs_file_read,lf:_duckdb_web_fs_file_truncate,ua:_duckdb_web_fs_file_write,nf:_duckdb_web_fs_get_default_data_protocol,df:_duckdb_web_fs_glob,ra:_duckdb_web_test_platform_feature,of:_duckdb_web_udf_scalar_call,Ta:_emscripten_date_now,Ua:_emscripten_get_heap_max,sa:_emscripten_get_now,wf:_emscripten_memcpy_js,xf:_emscripten_resize_heap,Fb:_environ_get,Qb:_environ_sizes_get,Y:_fd_close,Ra:_fd_fdstat_get,Ab:_fd_pread,zb:_fd_pwrite,la:_fd_read,Ue:_fd_seek,vf:_fd_sync,ca:_fd_write,Qa:_getaddrinfo,tf:_getentropy,Ia:_getnameinfo,x:invoke_di,W:invoke_dii,da:invoke_diii,J:invoke_diiii,N:invoke_diiiiid,Wb:invoke_diijii,S:invoke_fi,qa:invoke_fiii,L:invoke_fiiii,Xb:invoke_fiijii,p:invoke_i,ja:invoke_id,rf:invoke_idd,_:invoke_idiii,ka:invoke_if,sf:invoke_iff,d:invoke_ii,U:invoke_iid,R:invoke_iidii,b:invoke_iii,M:invoke_iiid,gc:invoke_iiidj,g:invoke_iiii,Ea:invoke_iiiid,cc:invoke_iiiidjj,j:invoke_iiiii,oa:invoke_iiiiid,o:invoke_iiiiii,Da:invoke_iiiiiid,t:invoke_iiiiiii,u:invoke_iiiiiiii,H:invoke_iiiiiiiii,X:invoke_iiiiiiiiii,V:invoke_iiiiiiiiiii,q:invoke_iiiiiiiiiiii,y:invoke_iiiiiiiiiiiii,Fa:invoke_iiiiiiiiiiiiiiii,F:invoke_iiiiiiiiiiiiiiiii,r:invoke_iiiiiiiiiiiiiiiiii,_b:invoke_iiiiiiiiiiiij,oc:invoke_iiiiiiiiiiji,fc:invoke_iiiiiiiiijiiiiiii,se:invoke_iiiiiiiij,bc:invoke_iiiiiiiiji,Ad:invoke_iiiiiiij,hc:invoke_iiiiiiiji,ye:invoke_iiiiiiijii,zd:invoke_iiiiiiijj,bb:invoke_iiiiiiijji,te:invoke_iiiiiij,Dd:invoke_iiiiiiji,Xa:invoke_iiiiiijii,Xc:invoke_iiiiiijjiijjj,We:invoke_iiiiij,vd:invoke_iiiiiji,ze:invoke_iiiiijii,sc:invoke_iiiiijiii,tc:invoke_iiiiijij,Ve:invoke_iiiiijj,_a:invoke_iiiiijjj,Ya:invoke_iiiiijjji,qe:invoke_iiiij,wd:invoke_iiiiji,Bd:invoke_iiiijii,Cd:invoke_iiiijiii,Id:invoke_iiiijj,Yc:invoke_iiiijji,Zc:invoke_iiiijjii,ue:invoke_iiiijjiii,zc:invoke_iiiijjj,$e:invoke_iiij,De:invoke_iiiji,xe:invoke_iiijii,sd:invoke_iiijiii,ac:invoke_iiijiiiij,nb:invoke_iiijiiiijj,$b:invoke_iiijiiij,hb:invoke_iiijiiijj,yc:invoke_iiijiij,xb:invoke_iiijiiji,mb:invoke_iiijiijj,Ge:invoke_iiijij,af:invoke_iiijj,Hd:invoke_iiijji,Wc:invoke_iiijjii,Nb:invoke_iiijjiii,dc:invoke_iiijjiij,ec:invoke_iiijjiiji,_c:invoke_iiijjijjii,od:invoke_iiijjj,gb:invoke_iiijjji,Gc:invoke_iiijjjj,Ke:invoke_iij,Ie:invoke_iiji,Be:invoke_iijii,ub:invoke_iijiii,Ub:invoke_iijiiii,ib:invoke_iijiiijj,wb:invoke_iijiij,jb:invoke_iijiijj,nd:invoke_iijiji,ud:invoke_iijj,He:invoke_iijji,Tb:invoke_iijjii,Vb:invoke_iijjiii,Wa:invoke_iijjij,Cb:invoke_iijjijj,ee:invoke_iijjj,Za:invoke_iijjjii,ld:invoke_ij,$d:invoke_iji,Kc:invoke_ijii,Ec:invoke_ijji,we:invoke_ijjiii,Kb:invoke_ijjj,ve:invoke_j,Fd:invoke_jd,Ed:invoke_jf,Ze:invoke_ji,Ye:invoke_jii,pe:invoke_jiii,cf:invoke_jiiii,yd:invoke_jiiiii,rc:invoke_jiiiiii,kc:invoke_jiiiiiii,qc:invoke_jiiiiiijii,he:invoke_jiiiiijiiii,Bc:invoke_jiiiij,ce:invoke_jiiiiji,le:invoke_jiiiijii,fd:invoke_jiiij,ad:invoke_jiiiji,ke:invoke_jiiijii,ge:invoke_jiiijiii,ic:invoke_jiiijj,nc:invoke_jiiijjj,pd:invoke_jiij,cd:invoke_jiiji,je:invoke_jiijii,ie:invoke_jiijiii,jc:invoke_jiijj,pc:invoke_jiijjjii,td:invoke_jij,Rc:invoke_jijiii,$a:invoke_jijiiii,Oc:invoke_jijij,tb:invoke_jijj,Dc:invoke_jijji,Qc:invoke_jijjij,uc:invoke_jijjjjii,Jd:invoke_jj,Gb:invoke_jji,Mc:invoke_jjiji,Hc:invoke_jjj,Lc:invoke_jjjd,Hb:invoke_jjjii,Ib:invoke_jjjji,l:invoke_v,Ga:invoke_vdii,Ha:invoke_vfii,h:invoke_vi,z:invoke_vid,ga:invoke_viddddi,G:invoke_vif,e:invoke_vii,Z:invoke_viid,T:invoke_viidii,f:invoke_viii,i:invoke_viiii,qf:invoke_viiiidiiii,n:invoke_viiiii,m:invoke_viiiiii,ha:invoke_viiiiiidiii,A:invoke_viiiiiii,C:invoke_viiiiiiii,I:invoke_viiiiiiiii,K:invoke_viiiiiiiiii,pf:invoke_viiiiiiiiiii,$:invoke_viiiiiiiiiiiiiii,Oe:invoke_viiiiiiijjjji,Re:invoke_viiiiiij,xc:invoke_viiiiiiji,Pe:invoke_viiiiiijii,Qd:invoke_viiiiiijiij,Pd:invoke_viiiiiijj,Ld:invoke_viiiiij,$c:invoke_viiiiiji,Lb:invoke_viiiiijii,Ic:invoke_viiiiijiii,fe:invoke_viiiiijiiii,vb:invoke_viiiiijj,Qe:invoke_viiiiijjii,qb:invoke_viiiiijjji,Me:invoke_viiiij,me:invoke_viiiiji,vc:invoke_viiiijii,wc:invoke_viiiijiii,Db:invoke_viiiijiiii,Eb:invoke_viiiijiiiii,md:invoke_viiiijiiiiiiii,Od:invoke_viiiijijji,Se:invoke_viiiijj,Zb:invoke_viiiijji,Nd:invoke_viiiijjij,Je:invoke_viiij,Ce:invoke_viiiji,Ae:invoke_viiijii,Ac:invoke_viiijiii,Md:invoke_viiijiiii,Ud:invoke_viiijiiiijjj,Kd:invoke_viiijiiijii,qd:invoke_viiijij,ab:invoke_viiijiji,rd:invoke_viiijijij,mc:invoke_viiijijj,lb:invoke_viiijijjj,_e:invoke_viiijj,hd:invoke_viiijji,xd:invoke_viiijjii,Sd:invoke_viiijjiij,Yd:invoke_viiijjij,ae:invoke_viiijjj,Fc:invoke_viiijjjj,fb:invoke_viiijjjji,Ne:invoke_viij,Fe:invoke_viiji,Xe:invoke_viijii,Xd:invoke_viijiii,Ob:invoke_viijiiii,ne:invoke_viijiiiii,Jb:invoke_viijiiiiii,Vd:invoke_viijiiiij,Tc:invoke_viijiiij,Pc:invoke_viijiij,bd:invoke_viijiiji,pb:invoke_viijiijj,oe:invoke_viijij,eb:invoke_viijiji,Rd:invoke_viijijiiii,Td:invoke_viijijiiiijjj,rb:invoke_viijijj,bf:invoke_viijj,Ee:invoke_viijji,lc:invoke_viijjii,de:invoke_viijjj,_d:invoke_viijjji,Te:invoke_vij,Le:invoke_viji,Vc:invoke_vijii,Sb:invoke_vijiii,Pb:invoke_vijiiii,Mb:invoke_vijiiiii,Rb:invoke_vijiiiiii,Sc:invoke_vijiiiji,ob:invoke_vijiij,Nc:invoke_vijij,jd:invoke_vijiji,Gd:invoke_vijijiiiijjj,be:invoke_vijijj,Wd:invoke_vijijjiij,sb:invoke_vijijjji,Zd:invoke_vijj,Cc:invoke_vijji,Va:invoke_vijjii,db:invoke_vijjiii,id:invoke_vijjij,Uc:invoke_vijjj,ed:invoke_vijjji,Bb:invoke_vj,Jc:invoke_vjii,re:invoke_vjiii,kd:invoke_vjiiii,Yb:invoke_vjiiiji,gd:invoke_vjjii,dd:invoke_vjjijij,w:_llvm_eh_typeid_for,kb:_strftime_l};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"zf\"])();var _main=Module[\"_main\"]=(a0,a1)=>(_main=Module[\"_main\"]=wasmExports[\"Af\"])(a0,a1);var _duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=a0=>(_duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=wasmExports[\"Cf\"])(a0);var _duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=()=>(_duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=wasmExports[\"Df\"])();var _duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=a0=>(_duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=wasmExports[\"Ef\"])(a0);var _duckdb_web_reset=Module[\"_duckdb_web_reset\"]=a0=>(_duckdb_web_reset=Module[\"_duckdb_web_reset\"]=wasmExports[\"Ff\"])(a0);var _duckdb_web_connect=Module[\"_duckdb_web_connect\"]=()=>(_duckdb_web_connect=Module[\"_duckdb_web_connect\"]=wasmExports[\"Gf\"])();var _duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=a0=>(_duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=wasmExports[\"Hf\"])(a0);var _duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=()=>(_duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=wasmExports[\"If\"])();var _duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=a0=>(_duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=wasmExports[\"Jf\"])(a0);var _duckdb_web_open=Module[\"_duckdb_web_open\"]=(a0,a1)=>(_duckdb_web_open=Module[\"_duckdb_web_open\"]=wasmExports[\"Kf\"])(a0,a1);var _duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=(a0,a1)=>(_duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=wasmExports[\"Lf\"])(a0,a1);var _duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=(a0,a1,a2)=>(_duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=wasmExports[\"Mf\"])(a0,a1,a2);var _duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=(a0,a1)=>(_duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=wasmExports[\"Nf\"])(a0,a1);var _duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=(a0,a1)=>(_duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=wasmExports[\"Of\"])(a0,a1);var _duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=a0=>(_duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=wasmExports[\"Pf\"])(a0);var _duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=(a0,a1)=>(_duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=wasmExports[\"Qf\"])(a0,a1);var _duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=(a0,a1,a2)=>(_duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=wasmExports[\"Rf\"])(a0,a1,a2);var _duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=(a0,a1,a2)=>(_duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=wasmExports[\"Sf\"])(a0,a1,a2);var _duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=(a0,a1,a2,a3,a4)=>(_duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=wasmExports[\"Tf\"])(a0,a1,a2,a3,a4);var _duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=(a0,a1,a2,a3)=>(_duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=wasmExports[\"Uf\"])(a0,a1,a2,a3);var _duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=(a0,a1)=>(_duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=wasmExports[\"Vf\"])(a0,a1);var _duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=(a0,a1,a2)=>(_duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=wasmExports[\"Wf\"])(a0,a1,a2);var _duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=a0=>(_duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=wasmExports[\"Xf\"])(a0);var _duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=()=>(_duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=wasmExports[\"Yf\"])();var _duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=(a0,a1)=>(_duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=wasmExports[\"Zf\"])(a0,a1);var _duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=(a0,a1,a2)=>(_duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=wasmExports[\"_f\"])(a0,a1,a2);var _duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=(a0,a1,a2)=>(_duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=wasmExports[\"$f\"])(a0,a1,a2);var _duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=(a0,a1,a2)=>(_duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=wasmExports[\"ag\"])(a0,a1,a2);var _duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=(a0,a1,a2,a3)=>(_duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=wasmExports[\"bg\"])(a0,a1,a2,a3);var _duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=(a0,a1,a2,a3)=>(_duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=wasmExports[\"cg\"])(a0,a1,a2,a3);var _duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=(a0,a1,a2)=>(_duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=wasmExports[\"dg\"])(a0,a1,a2);var _duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=(a0,a1,a2)=>(_duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=wasmExports[\"eg\"])(a0,a1,a2);var _duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=(a0,a1,a2)=>(_duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=wasmExports[\"fg\"])(a0,a1,a2);var _duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=(a0,a1)=>(_duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=wasmExports[\"gg\"])(a0,a1);var _duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=(a0,a1)=>(_duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=wasmExports[\"hg\"])(a0,a1);var _duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=(a0,a1,a2)=>(_duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=wasmExports[\"ig\"])(a0,a1,a2);var _duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=(a0,a1,a2,a3,a4)=>(_duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=wasmExports[\"jg\"])(a0,a1,a2,a3,a4);var _duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=(a0,a1,a2,a3)=>(_duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=wasmExports[\"kg\"])(a0,a1,a2,a3);var _duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=(a0,a1,a2,a3)=>(_duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=wasmExports[\"lg\"])(a0,a1,a2,a3);var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _htonl=a0=>(_htonl=wasmExports[\"mg\"])(a0);var _htons=a0=>(_htons=wasmExports[\"ng\"])(a0);var _ntohs=a0=>(_ntohs=wasmExports[\"og\"])(a0);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"pg\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"qg\"])(a0);var _setThrew=(a0,a1)=>(_setThrew=wasmExports[\"rg\"])(a0,a1);var setTempRet0=a0=>(setTempRet0=wasmExports[\"sg\"])(a0);var stackSave=()=>(stackSave=wasmExports[\"tg\"])();var stackRestore=a0=>(stackRestore=wasmExports[\"ug\"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports[\"vg\"])(a0);var ___cxa_free_exception=a0=>(___cxa_free_exception=wasmExports[\"__cxa_free_exception\"])(a0);var ___cxa_increment_exception_refcount=a0=>(___cxa_increment_exception_refcount=wasmExports[\"wg\"])(a0);var ___cxa_decrement_exception_refcount=a0=>(___cxa_decrement_exception_refcount=wasmExports[\"xg\"])(a0);var ___cxa_can_catch=(a0,a1,a2)=>(___cxa_can_catch=wasmExports[\"yg\"])(a0,a1,a2);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"zg\"])(a0);var dynCall_jiiii=Module[\"dynCall_jiiii\"]=(a0,a1,a2,a3,a4)=>(dynCall_jiiii=Module[\"dynCall_jiiii\"]=wasmExports[\"Ag\"])(a0,a1,a2,a3,a4);var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=wasmExports[\"Bg\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=wasmExports[\"Cg\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viijii=Module[\"dynCall_viijii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_viijii=Module[\"dynCall_viijii\"]=wasmExports[\"Dg\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiiij=Module[\"dynCall_viiiij\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_viiiij=Module[\"dynCall_viiiij\"]=wasmExports[\"Eg\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iij=Module[\"dynCall_iij\"]=(a0,a1,a2,a3)=>(dynCall_iij=Module[\"dynCall_iij\"]=wasmExports[\"Fg\"])(a0,a1,a2,a3);var dynCall_iiji=Module[\"dynCall_iiji\"]=(a0,a1,a2,a3,a4)=>(dynCall_iiji=Module[\"dynCall_iiji\"]=wasmExports[\"Gg\"])(a0,a1,a2,a3,a4);var dynCall_ji=Module[\"dynCall_ji\"]=(a0,a1)=>(dynCall_ji=Module[\"dynCall_ji\"]=wasmExports[\"Hg\"])(a0,a1);var dynCall_iiij=Module[\"dynCall_iiij\"]=(a0,a1,a2,a3,a4)=>(dynCall_iiij=Module[\"dynCall_iiij\"]=wasmExports[\"Ig\"])(a0,a1,a2,a3,a4);var dynCall_iiijij=Module[\"dynCall_iiijij\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iiijij=Module[\"dynCall_iiijij\"]=wasmExports[\"Jg\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viiji=Module[\"dynCall_viiji\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_viiji=Module[\"dynCall_viiji\"]=wasmExports[\"Kg\"])(a0,a1,a2,a3,a4,a5);var dynCall_vij=Module[\"dynCall_vij\"]=(a0,a1,a2,a3)=>(dynCall_vij=Module[\"dynCall_vij\"]=wasmExports[\"Lg\"])(a0,a1,a2,a3);var dynCall_viij=Module[\"dynCall_viij\"]=(a0,a1,a2,a3,a4)=>(dynCall_viij=Module[\"dynCall_viij\"]=wasmExports[\"Mg\"])(a0,a1,a2,a3,a4);var dynCall_viji=Module[\"dynCall_viji\"]=(a0,a1,a2,a3,a4)=>(dynCall_viji=Module[\"dynCall_viji\"]=wasmExports[\"Ng\"])(a0,a1,a2,a3,a4);var dynCall_iiiji=Module[\"dynCall_iiiji\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_iiiji=Module[\"dynCall_iiiji\"]=wasmExports[\"Og\"])(a0,a1,a2,a3,a4,a5);var dynCall_viiiji=Module[\"dynCall_viiiji\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_viiiji=Module[\"dynCall_viiiji\"]=wasmExports[\"Pg\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viijji=Module[\"dynCall_viijji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_viijji=Module[\"dynCall_viijji\"]=wasmExports[\"Qg\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viiij=Module[\"dynCall_viiij\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_viiij=Module[\"dynCall_viiij\"]=wasmExports[\"Rg\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiiij=Module[\"dynCall_iiiij\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_iiiij=Module[\"dynCall_iiiij\"]=wasmExports[\"Sg\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiijj=Module[\"dynCall_iiijj\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iiijj=Module[\"dynCall_iiijj\"]=wasmExports[\"Tg\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viijiiiii=Module[\"dynCall_viijiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viijiiiii=Module[\"dynCall_viijiiiii\"]=wasmExports[\"Ug\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_jiiijii=Module[\"dynCall_jiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_jiiijii=Module[\"dynCall_jiiijii\"]=wasmExports[\"Vg\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_jiijiii=Module[\"dynCall_jiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_jiijiii=Module[\"dynCall_jiijiii\"]=wasmExports[\"Wg\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_jiijii=Module[\"dynCall_jiijii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jiijii=Module[\"dynCall_jiijii\"]=wasmExports[\"Xg\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_j=Module[\"dynCall_j\"]=a0=>(dynCall_j=Module[\"dynCall_j\"]=wasmExports[\"Yg\"])(a0);var dynCall_viiiiji=Module[\"dynCall_viiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_viiiiji=Module[\"dynCall_viiiiji\"]=wasmExports[\"Zg\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_jiiiijii=Module[\"dynCall_jiiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_jiiiijii=Module[\"dynCall_jiiiijii\"]=wasmExports[\"_g\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_jiiiiijiiii=Module[\"dynCall_jiiiiijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_jiiiiijiiii=Module[\"dynCall_jiiiiijiiii\"]=wasmExports[\"$g\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_jiiijiii=Module[\"dynCall_jiiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_jiiijiii=Module[\"dynCall_jiiijiii\"]=wasmExports[\"ah\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viiiiijiiii=Module[\"dynCall_viiiiijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viiiiijiiii=Module[\"dynCall_viiiiijiiii\"]=wasmExports[\"bh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_vijijj=Module[\"dynCall_vijijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_vijijj=Module[\"dynCall_vijijj\"]=wasmExports[\"ch\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viiijjj=Module[\"dynCall_viiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiijjj=Module[\"dynCall_viiijjj\"]=wasmExports[\"dh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iji=Module[\"dynCall_iji\"]=(a0,a1,a2,a3)=>(dynCall_iji=Module[\"dynCall_iji\"]=wasmExports[\"eh\"])(a0,a1,a2,a3);var dynCall_viijjji=Module[\"dynCall_viijjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viijjji=Module[\"dynCall_viijjji\"]=wasmExports[\"fh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_viijj=Module[\"dynCall_viijj\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_viijj=Module[\"dynCall_viijj\"]=wasmExports[\"gh\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiijj=Module[\"dynCall_viiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_viiijj=Module[\"dynCall_viiijj\"]=wasmExports[\"hh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viijjj=Module[\"dynCall_viijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viijjj=Module[\"dynCall_viijjj\"]=wasmExports[\"ih\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_vijj=Module[\"dynCall_vijj\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_vijj=Module[\"dynCall_vijj\"]=wasmExports[\"jh\"])(a0,a1,a2,a3,a4,a5);var dynCall_viiijjij=Module[\"dynCall_viiijjij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viiijjij=Module[\"dynCall_viiijjij\"]=wasmExports[\"kh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viijiii=Module[\"dynCall_viijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_viijiii=Module[\"dynCall_viijiii\"]=wasmExports[\"lh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_vijijjiij=Module[\"dynCall_vijijjiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_vijijjiij=Module[\"dynCall_vijijjiij\"]=wasmExports[\"mh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_viiijjiij=Module[\"dynCall_viiijjiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viiijjiij=Module[\"dynCall_viiijjiij\"]=wasmExports[\"nh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_viiiiiijiij=Module[\"dynCall_viiiiiijiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_viiiiiijiij=Module[\"dynCall_viiiiiijiij\"]=wasmExports[\"oh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_viiiiiijj=Module[\"dynCall_viiiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viiiiiijj=Module[\"dynCall_viiiiiijj\"]=wasmExports[\"ph\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viijiiiij=Module[\"dynCall_viijiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viijiiiij=Module[\"dynCall_viijiiiij\"]=wasmExports[\"qh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viiijiiiijjj=Module[\"dynCall_viiijiiiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)=>(dynCall_viiijiiiijjj=Module[\"dynCall_viiijiiiijjj\"]=wasmExports[\"rh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);var dynCall_viijijiiiijjj=Module[\"dynCall_viijijiiiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)=>(dynCall_viijijiiiijjj=Module[\"dynCall_viijijiiiijjj\"]=wasmExports[\"sh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);var dynCall_viiiijjij=Module[\"dynCall_viiiijjij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viiiijjij=Module[\"dynCall_viiiijjij\"]=wasmExports[\"th\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_viiijiiii=Module[\"dynCall_viiijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiijiiii=Module[\"dynCall_viiijiiii\"]=wasmExports[\"uh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_jiiiiji=Module[\"dynCall_jiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_jiiiiji=Module[\"dynCall_jiiiiji\"]=wasmExports[\"vh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viiiijijji=Module[\"dynCall_viiiijijji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_viiiijijji=Module[\"dynCall_viiiijijji\"]=wasmExports[\"wh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_viiijiiijii=Module[\"dynCall_viiijiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_viiijiiijii=Module[\"dynCall_viiijiiijii\"]=wasmExports[\"xh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_viijijiiii=Module[\"dynCall_viijijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viijijiiii=Module[\"dynCall_viijijiiii\"]=wasmExports[\"yh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_jj=Module[\"dynCall_jj\"]=(a0,a1,a2)=>(dynCall_jj=Module[\"dynCall_jj\"]=wasmExports[\"zh\"])(a0,a1,a2);var dynCall_jd=Module[\"dynCall_jd\"]=(a0,a1)=>(dynCall_jd=Module[\"dynCall_jd\"]=wasmExports[\"Ah\"])(a0,a1);var dynCall_jf=Module[\"dynCall_jf\"]=(a0,a1)=>(dynCall_jf=Module[\"dynCall_jf\"]=wasmExports[\"Bh\"])(a0,a1);var dynCall_iijjj=Module[\"dynCall_iijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iijjj=Module[\"dynCall_iijjj\"]=wasmExports[\"Ch\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iiiijj=Module[\"dynCall_iiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iiiijj=Module[\"dynCall_iiiijj\"]=wasmExports[\"Dh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iiijji=Module[\"dynCall_iiijji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iiijji=Module[\"dynCall_iiijji\"]=wasmExports[\"Eh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_vijijiiiijjj=Module[\"dynCall_vijijiiiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16)=>(dynCall_vijijiiiijjj=Module[\"dynCall_vijijiiiijjj\"]=wasmExports[\"Fh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);var dynCall_viiiiiij=Module[\"dynCall_viiiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viiiiiij=Module[\"dynCall_viiiiiij\"]=wasmExports[\"Gh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_jii=Module[\"dynCall_jii\"]=(a0,a1,a2)=>(dynCall_jii=Module[\"dynCall_jii\"]=wasmExports[\"Hh\"])(a0,a1,a2);var dynCall_iiiijjiii=Module[\"dynCall_iiiijjiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiiijjiii=Module[\"dynCall_iiiijjiii\"]=wasmExports[\"Ih\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_iiiiiij=Module[\"dynCall_iiiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iiiiiij=Module[\"dynCall_iiiiiij\"]=wasmExports[\"Jh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iiiiiiiij=Module[\"dynCall_iiiiiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiiiiiij=Module[\"dynCall_iiiiiiiij\"]=wasmExports[\"Kh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_jiii=Module[\"dynCall_jiii\"]=(a0,a1,a2,a3)=>(dynCall_jiii=Module[\"dynCall_jiii\"]=wasmExports[\"Lh\"])(a0,a1,a2,a3);var dynCall_iiiiiiij=Module[\"dynCall_iiiiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiiiiij=Module[\"dynCall_iiiiiiij\"]=wasmExports[\"Mh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiiiiji=Module[\"dynCall_iiiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiiiiji=Module[\"dynCall_iiiiiiji\"]=wasmExports[\"Nh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiijiii=Module[\"dynCall_iiiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiijiii=Module[\"dynCall_iiiijiii\"]=wasmExports[\"Oh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiijii=Module[\"dynCall_iiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iiiijii=Module[\"dynCall_iiiijii\"]=wasmExports[\"Ph\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_jiiiii=Module[\"dynCall_jiiiii\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_jiiiii=Module[\"dynCall_jiiiii\"]=wasmExports[\"Qh\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiiiji=Module[\"dynCall_iiiiji\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iiiiji=Module[\"dynCall_iiiiji\"]=wasmExports[\"Rh\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiiiiji=Module[\"dynCall_iiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iiiiiji=Module[\"dynCall_iiiiiji\"]=wasmExports[\"Sh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iiijii=Module[\"dynCall_iiijii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iiijii=Module[\"dynCall_iiijii\"]=wasmExports[\"Th\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iijj=Module[\"dynCall_iijj\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_iijj=Module[\"dynCall_iijj\"]=wasmExports[\"Uh\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiijjj=Module[\"dynCall_iiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiijjj=Module[\"dynCall_iiijjj\"]=wasmExports[\"Vh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viiiiij=Module[\"dynCall_viiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_viiiiij=Module[\"dynCall_viiiiij\"]=wasmExports[\"Wh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iijiji=Module[\"dynCall_iijiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iijiji=Module[\"dynCall_iijiji\"]=wasmExports[\"Xh\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viiiijiiiiiiii=Module[\"dynCall_viiiijiiiiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14)=>(dynCall_viiiijiiiiiiii=Module[\"dynCall_viiiijiiiiiiii\"]=wasmExports[\"Yh\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);var dynCall_jiij=Module[\"dynCall_jiij\"]=(a0,a1,a2,a3,a4)=>(dynCall_jiij=Module[\"dynCall_jiij\"]=wasmExports[\"Zh\"])(a0,a1,a2,a3,a4);var dynCall_jiiij=Module[\"dynCall_jiiij\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_jiiij=Module[\"dynCall_jiiij\"]=wasmExports[\"_h\"])(a0,a1,a2,a3,a4,a5);var dynCall_viijiiji=Module[\"dynCall_viijiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viijiiji=Module[\"dynCall_viijiiji\"]=wasmExports[\"$h\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iiiiiijjiijjj=Module[\"dynCall_iiiiiijjiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)=>(dynCall_iiiiiijjiijjj=Module[\"dynCall_iiiiiijjiijjj\"]=wasmExports[\"ai\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);var dynCall_iiijjijjii=Module[\"dynCall_iiijjijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)=>(dynCall_iiijjijjii=Module[\"dynCall_iiijjijjii\"]=wasmExports[\"bi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13);var dynCall_iiiijjii=Module[\"dynCall_iiiijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiijjii=Module[\"dynCall_iiiijjii\"]=wasmExports[\"ci\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iiiijji=Module[\"dynCall_iiiijji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiijji=Module[\"dynCall_iiiijji\"]=wasmExports[\"di\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiijjii=Module[\"dynCall_iiijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiijjii=Module[\"dynCall_iiijjii\"]=wasmExports[\"ei\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_vijii=Module[\"dynCall_vijii\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_vijii=Module[\"dynCall_vijii\"]=wasmExports[\"fi\"])(a0,a1,a2,a3,a4,a5);var dynCall_vjjijij=Module[\"dynCall_vjjijij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_vjjijij=Module[\"dynCall_vjjijij\"]=wasmExports[\"gi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_vijjji=Module[\"dynCall_vijjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_vijjji=Module[\"dynCall_vijjji\"]=wasmExports[\"hi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_vjjii=Module[\"dynCall_vjjii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_vjjii=Module[\"dynCall_vjjii\"]=wasmExports[\"ii\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiiiiji=Module[\"dynCall_viiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viiiiiji=Module[\"dynCall_viiiiiji\"]=wasmExports[\"ji\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_jiiiji=Module[\"dynCall_jiiiji\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jiiiji=Module[\"dynCall_jiiiji\"]=wasmExports[\"ki\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiijjii=Module[\"dynCall_viiijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiijjii=Module[\"dynCall_viiijjii\"]=wasmExports[\"li\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_vijjj=Module[\"dynCall_vijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_vijjj=Module[\"dynCall_vijjj\"]=wasmExports[\"mi\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_jijij=Module[\"dynCall_jijij\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jijij=Module[\"dynCall_jijij\"]=wasmExports[\"ni\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiiijj=Module[\"dynCall_viiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viiiijj=Module[\"dynCall_viiiijj\"]=wasmExports[\"oi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_jijjij=Module[\"dynCall_jijjij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_jijjij=Module[\"dynCall_jijjij\"]=wasmExports[\"pi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_jij=Module[\"dynCall_jij\"]=(a0,a1,a2,a3)=>(dynCall_jij=Module[\"dynCall_jij\"]=wasmExports[\"qi\"])(a0,a1,a2,a3);var dynCall_jijiii=Module[\"dynCall_jijiii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jijiii=Module[\"dynCall_jijiii\"]=wasmExports[\"ri\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viijiiij=Module[\"dynCall_viijiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viijiiij=Module[\"dynCall_viijiiij\"]=wasmExports[\"si\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_vijiiiji=Module[\"dynCall_vijiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_vijiiiji=Module[\"dynCall_vijiiiji\"]=wasmExports[\"ti\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_jiiji=Module[\"dynCall_jiiji\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_jiiji=Module[\"dynCall_jiiji\"]=wasmExports[\"ui\"])(a0,a1,a2,a3,a4,a5);var dynCall_viiijij=Module[\"dynCall_viiijij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viiijij=Module[\"dynCall_viiijij\"]=wasmExports[\"vi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viijiij=Module[\"dynCall_viijiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viijiij=Module[\"dynCall_viijiij\"]=wasmExports[\"wi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viiiiijj=Module[\"dynCall_viiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiiiijj=Module[\"dynCall_viiiiijj\"]=wasmExports[\"xi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_viiijji=Module[\"dynCall_viiijji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viiijji=Module[\"dynCall_viiijji\"]=wasmExports[\"yi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_vijij=Module[\"dynCall_vijij\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_vijij=Module[\"dynCall_vijij\"]=wasmExports[\"zi\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_vijiji=Module[\"dynCall_vijiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_vijiji=Module[\"dynCall_vijiji\"]=wasmExports[\"Ai\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_vijjij=Module[\"dynCall_vijjij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_vijjij=Module[\"dynCall_vijjij\"]=wasmExports[\"Bi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_jiiiij=Module[\"dynCall_jiiiij\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jiiiij=Module[\"dynCall_jiiiij\"]=wasmExports[\"Ci\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_ij=Module[\"dynCall_ij\"]=(a0,a1,a2)=>(dynCall_ij=Module[\"dynCall_ij\"]=wasmExports[\"Di\"])(a0,a1,a2);var dynCall_jjj=Module[\"dynCall_jjj\"]=(a0,a1,a2,a3,a4)=>(dynCall_jjj=Module[\"dynCall_jjj\"]=wasmExports[\"Ei\"])(a0,a1,a2,a3,a4);var dynCall_jjiji=Module[\"dynCall_jjiji\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jjiji=Module[\"dynCall_jjiji\"]=wasmExports[\"Fi\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_ijjj=Module[\"dynCall_ijjj\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_ijjj=Module[\"dynCall_ijjj\"]=wasmExports[\"Gi\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_jjjd=Module[\"dynCall_jjjd\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_jjjd=Module[\"dynCall_jjjd\"]=wasmExports[\"Hi\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiijjjj=Module[\"dynCall_iiijjjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiijjjj=Module[\"dynCall_iiijjjj\"]=wasmExports[\"Ii\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_jijj=Module[\"dynCall_jijj\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_jijj=Module[\"dynCall_jijj\"]=wasmExports[\"Ji\"])(a0,a1,a2,a3,a4,a5);var dynCall_ijii=Module[\"dynCall_ijii\"]=(a0,a1,a2,a3,a4)=>(dynCall_ijii=Module[\"dynCall_ijii\"]=wasmExports[\"Ki\"])(a0,a1,a2,a3,a4);var dynCall_vjii=Module[\"dynCall_vjii\"]=(a0,a1,a2,a3,a4)=>(dynCall_vjii=Module[\"dynCall_vjii\"]=wasmExports[\"Li\"])(a0,a1,a2,a3,a4);var dynCall_vjiiii=Module[\"dynCall_vjiiii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_vjiiii=Module[\"dynCall_vjiiii\"]=wasmExports[\"Mi\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiiiijiii=Module[\"dynCall_viiiiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viiiiijiii=Module[\"dynCall_viiiiijiii\"]=wasmExports[\"Ni\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viiijjjj=Module[\"dynCall_viiijjjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viiijjjj=Module[\"dynCall_viiijjjj\"]=wasmExports[\"Oi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_ijji=Module[\"dynCall_ijji\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_ijji=Module[\"dynCall_ijji\"]=wasmExports[\"Pi\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiiiijii=Module[\"dynCall_iiiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiiijii=Module[\"dynCall_iiiiijii\"]=wasmExports[\"Qi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_vijji=Module[\"dynCall_vijji\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_vijji=Module[\"dynCall_vijji\"]=wasmExports[\"Ri\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiijiii=Module[\"dynCall_viiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viiijiii=Module[\"dynCall_viiijiii\"]=wasmExports[\"Si\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viijij=Module[\"dynCall_viijij\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_viijij=Module[\"dynCall_viijij\"]=wasmExports[\"Ti\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viiiiiiji=Module[\"dynCall_viiiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiiiiiji=Module[\"dynCall_viiiiiiji\"]=wasmExports[\"Ui\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_viiijii=Module[\"dynCall_viiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_viiijii=Module[\"dynCall_viiijii\"]=wasmExports[\"Vi\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viiiijiii=Module[\"dynCall_viiiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiiijiii=Module[\"dynCall_viiiijiii\"]=wasmExports[\"Wi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_viiiijii=Module[\"dynCall_viiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viiiijii=Module[\"dynCall_viiiijii\"]=wasmExports[\"Xi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiijiij=Module[\"dynCall_iiijiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiijiij=Module[\"dynCall_iiijiij\"]=wasmExports[\"Yi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiijjj=Module[\"dynCall_iiiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiijjj=Module[\"dynCall_iiiijjj\"]=wasmExports[\"Zi\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_jijji=Module[\"dynCall_jijji\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jijji=Module[\"dynCall_jijji\"]=wasmExports[\"_i\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_viiijijij=Module[\"dynCall_viiijijij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viiijijij=Module[\"dynCall_viiijijij\"]=wasmExports[\"$i\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_jijjjjii=Module[\"dynCall_jijjjjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_jijjjjii=Module[\"dynCall_jijjjjii\"]=wasmExports[\"aj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_iiiiijij=Module[\"dynCall_iiiiijij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiiijij=Module[\"dynCall_iiiiijij\"]=wasmExports[\"bj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iiiiijiii=Module[\"dynCall_iiiiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiiijiii=Module[\"dynCall_iiiiijiii\"]=wasmExports[\"cj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_viijjii=Module[\"dynCall_viijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viijjii=Module[\"dynCall_viijjii\"]=wasmExports[\"dj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiiiiiiiiji=Module[\"dynCall_iiiiiiiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_iiiiiiiiiiji=Module[\"dynCall_iiiiiiiiiiji\"]=wasmExports[\"ej\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_iiiiiiijj=Module[\"dynCall_iiiiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiiiiiijj=Module[\"dynCall_iiiiiiijj\"]=wasmExports[\"fj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_jiiijjj=Module[\"dynCall_jiiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_jiiijjj=Module[\"dynCall_jiiijjj\"]=wasmExports[\"gj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_viiijijj=Module[\"dynCall_viiijijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viiijijj=Module[\"dynCall_viiijijj\"]=wasmExports[\"hj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_jiiiiiii=Module[\"dynCall_jiiiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_jiiiiiii=Module[\"dynCall_jiiiiiii\"]=wasmExports[\"ij\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_jiijj=Module[\"dynCall_jiijj\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jiijj=Module[\"dynCall_jiijj\"]=wasmExports[\"jj\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_jiiijj=Module[\"dynCall_jiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_jiiijj=Module[\"dynCall_jiiijj\"]=wasmExports[\"kj\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iijii=Module[\"dynCall_iijii\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_iijii=Module[\"dynCall_iijii\"]=wasmExports[\"lj\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiidj=Module[\"dynCall_iiidj\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_iiidj=Module[\"dynCall_iiidj\"]=wasmExports[\"mj\"])(a0,a1,a2,a3,a4,a5);var dynCall_iiiiiiiji=Module[\"dynCall_iiiiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiiiiiji=Module[\"dynCall_iiiiiiiji\"]=wasmExports[\"nj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iiiiiiiiijiiiiiii=Module[\"dynCall_iiiiiiiiijiiiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)=>(dynCall_iiiiiiiiijiiiiiii=Module[\"dynCall_iiiiiiiiijiiiiiii\"]=wasmExports[\"oj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);var dynCall_iiijjiiji=Module[\"dynCall_iiijjiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_iiijjiiji=Module[\"dynCall_iiijjiiji\"]=wasmExports[\"pj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_iiijjiij=Module[\"dynCall_iiijjiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiijjiij=Module[\"dynCall_iiijjiij\"]=wasmExports[\"qj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_iiiidjj=Module[\"dynCall_iiiidjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iiiidjj=Module[\"dynCall_iiiidjj\"]=wasmExports[\"rj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiiiiiiji=Module[\"dynCall_iiiiiiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiiiiiiiji=Module[\"dynCall_iiiiiiiiji\"]=wasmExports[\"sj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_iiijiiiij=Module[\"dynCall_iiijiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiijiiiij=Module[\"dynCall_iiijiiiij\"]=wasmExports[\"tj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_iiijiiij=Module[\"dynCall_iiijiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiijiiij=Module[\"dynCall_iiijiiij\"]=wasmExports[\"uj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iiiiiiiiiiiij=Module[\"dynCall_iiiiiiiiiiiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)=>(dynCall_iiiiiiiiiiiij=Module[\"dynCall_iiiiiiiiiiiij\"]=wasmExports[\"vj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13);var dynCall_viiiijji=Module[\"dynCall_viiiijji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiiijji=Module[\"dynCall_viiiijji\"]=wasmExports[\"wj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_jiiiiii=Module[\"dynCall_jiiiiii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jiiiiii=Module[\"dynCall_jiiiiii\"]=wasmExports[\"xj\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_jiiiiiijii=Module[\"dynCall_jiiiiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_jiiiiiijii=Module[\"dynCall_jiiiiiijii\"]=wasmExports[\"yj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_jiijjjii=Module[\"dynCall_jiijjjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_jiijjjii=Module[\"dynCall_jiijjjii\"]=wasmExports[\"zj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_vjiiiji=Module[\"dynCall_vjiiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_vjiiiji=Module[\"dynCall_vjiiiji\"]=wasmExports[\"Aj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_fiijii=Module[\"dynCall_fiijii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_fiijii=Module[\"dynCall_fiijii\"]=wasmExports[\"Bj\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_diijii=Module[\"dynCall_diijii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_diijii=Module[\"dynCall_diijii\"]=wasmExports[\"Cj\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiiiiiijii=Module[\"dynCall_iiiiiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiiiiiijii=Module[\"dynCall_iiiiiiijii\"]=wasmExports[\"Dj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_iijji=Module[\"dynCall_iijji\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iijji=Module[\"dynCall_iijji\"]=wasmExports[\"Ej\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iijjiii=Module[\"dynCall_iijjiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iijjiii=Module[\"dynCall_iijjiii\"]=wasmExports[\"Fj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iijiiii=Module[\"dynCall_iijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iijiiii=Module[\"dynCall_iijiiii\"]=wasmExports[\"Gj\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iijjii=Module[\"dynCall_iijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iijjii=Module[\"dynCall_iijjii\"]=wasmExports[\"Hj\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iiijiii=Module[\"dynCall_iiijiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iiijiii=Module[\"dynCall_iiijiii\"]=wasmExports[\"Ij\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viijiiii=Module[\"dynCall_viijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viijiiii=Module[\"dynCall_viijiiii\"]=wasmExports[\"Jj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_vijiii=Module[\"dynCall_vijiii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_vijiii=Module[\"dynCall_vijiii\"]=wasmExports[\"Kj\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_iiijjiii=Module[\"dynCall_iiijjiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiijjiii=Module[\"dynCall_iiijjiii\"]=wasmExports[\"Lj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_vijiiiiii=Module[\"dynCall_vijiiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_vijiiiiii=Module[\"dynCall_vijiiiiii\"]=wasmExports[\"Mj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_vijiiii=Module[\"dynCall_vijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_vijiiii=Module[\"dynCall_vijiiii\"]=wasmExports[\"Nj\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_vijiiiii=Module[\"dynCall_vijiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_vijiiiii=Module[\"dynCall_vijiiiii\"]=wasmExports[\"Oj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_viiiiijii=Module[\"dynCall_viiiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiiiijii=Module[\"dynCall_viiiiijii\"]=wasmExports[\"Pj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_viijiiiiii=Module[\"dynCall_viijiiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viijiiiiii=Module[\"dynCall_viijiiiiii\"]=wasmExports[\"Qj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_jjjji=Module[\"dynCall_jjjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_jjjji=Module[\"dynCall_jjjji\"]=wasmExports[\"Rj\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_jjjii=Module[\"dynCall_jjjii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_jjjii=Module[\"dynCall_jjjii\"]=wasmExports[\"Sj\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_jji=Module[\"dynCall_jji\"]=(a0,a1,a2,a3)=>(dynCall_jji=Module[\"dynCall_jji\"]=wasmExports[\"Tj\"])(a0,a1,a2,a3);var dynCall_viiiijiiiii=Module[\"dynCall_viiiijiiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viiiijiiiii=Module[\"dynCall_viiiijiiiii\"]=wasmExports[\"Uj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_viiiijiiii=Module[\"dynCall_viiiijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viiiijiiii=Module[\"dynCall_viiiijiiii\"]=wasmExports[\"Vj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_iijjijj=Module[\"dynCall_iijjijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iijjijj=Module[\"dynCall_iijjijj\"]=wasmExports[\"Wj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_vj=Module[\"dynCall_vj\"]=(a0,a1,a2)=>(dynCall_vj=Module[\"dynCall_vj\"]=wasmExports[\"Xj\"])(a0,a1,a2);var dynCall_viiiiijjii=Module[\"dynCall_viiiiijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_viiiiijjii=Module[\"dynCall_viiiiijjii\"]=wasmExports[\"Yj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_viiiiiijii=Module[\"dynCall_viiiiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viiiiiijii=Module[\"dynCall_viiiiiijii\"]=wasmExports[\"Zj\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viiiiiiijjjji=Module[\"dynCall_viiiiiiijjjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16)=>(dynCall_viiiiiiijjjji=Module[\"dynCall_viiiiiiijjjji\"]=wasmExports[\"_j\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);var dynCall_vjiii=Module[\"dynCall_vjiii\"]=(a0,a1,a2,a3,a4,a5)=>(dynCall_vjiii=Module[\"dynCall_vjiii\"]=wasmExports[\"$j\"])(a0,a1,a2,a3,a4,a5);var dynCall_ijjiii=Module[\"dynCall_ijjiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_ijjiii=Module[\"dynCall_ijjiii\"]=wasmExports[\"ak\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iiijiiji=Module[\"dynCall_iiijiiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiijiiji=Module[\"dynCall_iiijiiji\"]=wasmExports[\"bk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iijiij=Module[\"dynCall_iijiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_iijiij=Module[\"dynCall_iijiij\"]=wasmExports[\"ck\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_iijiii=Module[\"dynCall_iijiii\"]=(a0,a1,a2,a3,a4,a5,a6)=>(dynCall_iijiii=Module[\"dynCall_iijiii\"]=wasmExports[\"dk\"])(a0,a1,a2,a3,a4,a5,a6);var dynCall_vijijjji=Module[\"dynCall_vijijjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_vijijjji=Module[\"dynCall_vijijjji\"]=wasmExports[\"ek\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_viijiijj=Module[\"dynCall_viijiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_viijiijj=Module[\"dynCall_viijiijj\"]=wasmExports[\"fk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viijijj=Module[\"dynCall_viijijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viijijj=Module[\"dynCall_viijijj\"]=wasmExports[\"gk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_vijiij=Module[\"dynCall_vijiij\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_vijiij=Module[\"dynCall_vijiij\"]=wasmExports[\"hk\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viiiiijjji=Module[\"dynCall_viiiiijjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_viiiiijjji=Module[\"dynCall_viiiiijjji\"]=wasmExports[\"ik\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_iiijiijj=Module[\"dynCall_iiijiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiijiijj=Module[\"dynCall_iiijiijj\"]=wasmExports[\"jk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viiijijjj=Module[\"dynCall_viiijijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_viiijijjj=Module[\"dynCall_viiijijjj\"]=wasmExports[\"kk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_iijiijj=Module[\"dynCall_iijiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iijiijj=Module[\"dynCall_iijiijj\"]=wasmExports[\"lk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iijiiijj=Module[\"dynCall_iijiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iijiiijj=Module[\"dynCall_iijiiijj\"]=wasmExports[\"mk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_iiijiiijj=Module[\"dynCall_iiijiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_iiijiiijj=Module[\"dynCall_iiijiiijj\"]=wasmExports[\"nk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_iiijiiiijj=Module[\"dynCall_iiijiiiijj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_iiijiiiijj=Module[\"dynCall_iiijiiiijj\"]=wasmExports[\"ok\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_viiijjjji=Module[\"dynCall_viiijjjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)=>(dynCall_viiijjjji=Module[\"dynCall_viiijjjji\"]=wasmExports[\"pk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);var dynCall_vijjiii=Module[\"dynCall_vijjiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_vijjiii=Module[\"dynCall_vijjiii\"]=wasmExports[\"qk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiijjji=Module[\"dynCall_iiijjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiijjji=Module[\"dynCall_iiijjji\"]=wasmExports[\"rk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iiiiiiijji=Module[\"dynCall_iiiiiiijji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_iiiiiiijji=Module[\"dynCall_iiiiiiijji\"]=wasmExports[\"sk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_iijjjii=Module[\"dynCall_iijjjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iijjjii=Module[\"dynCall_iijjjii\"]=wasmExports[\"tk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iiiiijjji=Module[\"dynCall_iiiiijjji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)=>(dynCall_iiiiijjji=Module[\"dynCall_iiiiijjji\"]=wasmExports[\"uk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);var dynCall_iiiiijjj=Module[\"dynCall_iiiiijjj\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)=>(dynCall_iiiiijjj=Module[\"dynCall_iiiiijjj\"]=wasmExports[\"vk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);var dynCall_viiijiji=Module[\"dynCall_viiijiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_viiijiji=Module[\"dynCall_viiijiji\"]=wasmExports[\"wk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_jijiiii=Module[\"dynCall_jijiiii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_jijiiii=Module[\"dynCall_jijiiii\"]=wasmExports[\"xk\"])(a0,a1,a2,a3,a4,a5,a6,a7);var dynCall_viijiji=Module[\"dynCall_viijiji\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_viijiji=Module[\"dynCall_viijiji\"]=wasmExports[\"yk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_iiiiiijii=Module[\"dynCall_iiiiiijii\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9)=>(dynCall_iiiiiijii=Module[\"dynCall_iiiiiijii\"]=wasmExports[\"zk\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);var dynCall_iijjij=Module[\"dynCall_iijjij\"]=(a0,a1,a2,a3,a4,a5,a6,a7,a8)=>(dynCall_iijjij=Module[\"dynCall_iijjij\"]=wasmExports[\"Ak\"])(a0,a1,a2,a3,a4,a5,a6,a7,a8);var dynCall_vijjii=Module[\"dynCall_vijjii\"]=(a0,a1,a2,a3,a4,a5,a6,a7)=>(dynCall_vijjii=Module[\"dynCall_vijjii\"]=wasmExports[\"Bk\"])(a0,a1,a2,a3,a4,a5,a6,a7);function invoke_v(index){var sp=stackSave();try{getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_fiii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_diii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiii(index,a1,a2,a3,a4){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viid(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_i(index){var sp=stackSave();try{return getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiid(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_idiii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vid(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_if(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_id(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iid(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiidiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vfii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vdii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_di(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_fi(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiid(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iidii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viidii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vif(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_fiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_diiii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viddddi(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_dii(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_diiiiid(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiid(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iff(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_idd(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiidiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_jiiii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijj(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viijj(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijj(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiijj(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiij(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiij(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiijj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ji(index,a1){var sp=stackSave();try{return dynCall_ji(index,a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jii(index,a1,a2){var sp=stackSave();try{return dynCall_jii(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiiiij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vij(index,a1,a2,a3){var sp=stackSave();try{dynCall_vij(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiiijjjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16){var sp=stackSave();try{dynCall_viiiiiiijjjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viij(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viij(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiiij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viji(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viji(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iij(index,a1,a2,a3){var sp=stackSave();try{return dynCall_iij(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiij(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiij(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiji(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_iiji(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iijji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiijij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_viiji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viijji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiiji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_viiiji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iijii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiijii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ijjiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_ijjiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_j(index){var sp=stackSave();try{return dynCall_j(index)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiiiij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vjiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_vjiii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiij(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiiij(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiii(index,a1,a2,a3){var sp=stackSave();try{return dynCall_jiii(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viijij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiiiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_jiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiijii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiijii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiijiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiijiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_jiiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_jiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijjj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijjj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijjj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijjj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiiiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijijj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijijj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iji(index,a1,a2,a3){var sp=stackSave();try{return dynCall_iji(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijj(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_vijj(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viijiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_vijijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viijiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15){var sp=stackSave();try{dynCall_viiijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17){var sp=stackSave();try{dynCall_viijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viijijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiijiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiiiiijiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiiijijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiijjij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_viiiiij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiijiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jj(index,a1,a2){var sp=stackSave();try{return dynCall_jj(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiijj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiijj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiijji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16){var sp=stackSave();try{dynCall_vijijiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jd(index,a1){var sp=stackSave();try{return dynCall_jd(index,a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jf(index,a1){var sp=stackSave();try{return dynCall_jf(index,a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiijii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiijii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jiiiii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iiiiji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiiiiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijj(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iijj(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jij(index,a1,a2,a3){var sp=stackSave();try{return dynCall_jij(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iiijiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiijijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiijij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiij(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_jiij(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14){var sp=stackSave();try{dynCall_viiiijiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ij(index,a1,a2){var sp=stackSave();try{return dynCall_ij(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vjiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vjiiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijiji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vijiji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijjij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijjij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiijji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vjjii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vjjii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiij(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jiiij(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijjji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijjji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vjjijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_vjjijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jiiji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiiiji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13){var sp=stackSave();try{return dynCall_iiijjijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiijjiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17){var sp=stackSave();try{return dynCall_iiiiiijjiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiijjii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{dynCall_vijii(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijjj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vijjj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_vijiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jijiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jijiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jijjij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_jijjij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jijij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jijij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vijij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jjiji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jjiji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jjjd(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jjjd(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ijii(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_ijii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vjii(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_vjii(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jjj(index,a1,a2,a3,a4){var sp=stackSave();try{return dynCall_jjj(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiijjjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijjjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiijjjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ijji(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_ijji(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jijji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jijji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijji(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vijji(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiij(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiiiij(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiijiij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jijjjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_jijjjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiijij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiijiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiiiiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_jiiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiijjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_jiijjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{return dynCall_iiiiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_jiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiijijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijjii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijjii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiiiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiijj(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jiijj(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jiiijj(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jiiijj(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiidj(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_iiidj(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiijiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17){var sp=stackSave();try{return dynCall_iiiiiiiiijiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_iiijjiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiijjiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiidjj(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iiiidjj(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiiiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiijiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiijiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13){var sp=stackSave();try{return dynCall_iiiiiiiiiiiij(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vjiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vjiiiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_fiijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_fiijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_diijii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_diijii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijjii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijjii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{dynCall_vijiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_vijiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vijiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ijjj(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_ijjj(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viijiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jjjji(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jjjji(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jjjii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_jjjii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jji(index,a1,a2,a3){var sp=stackSave();try{return dynCall_jji(index,a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_viiiijiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viiiijiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijjijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iijjijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vj(index,a1,a2){var sp=stackSave();try{dynCall_vj(index,a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiijiiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijiij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_iijiij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return dynCall_iijiii(index,a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jijj(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return dynCall_jijj(index,a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{dynCall_vijijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viijijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{dynCall_viijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijiij(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vijiij(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{return dynCall_iiijiiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiijijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iijiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iijiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_iiijiiijj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijjjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12){var sp=stackSave();try{dynCall_viiijjjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viijiji(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_viijiji(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{dynCall_vijjiii(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_iiiiiiijji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viiijiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{dynCall_viiijiji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_jijiiii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{return dynCall_jijiiii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10){var sp=stackSave();try{return dynCall_iiiiijjj(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iijjjii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11){var sp=stackSave();try{return dynCall_iiiiijjji(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){var sp=stackSave();try{return dynCall_iiiiiijii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iijjij(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return dynCall_iijjij(index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vijjii(index,a1,a2,a3,a4,a5,a6,a7){var sp=stackSave();try{dynCall_vijjii(index,a1,a2,a3,a4,a5,a6,a7)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function applySignatureConversions(wasmExports){wasmExports=Object.assign({},wasmExports);var makeWrapper_p=f=>()=>f()>>>0;var makeWrapper_pp=f=>a0=>f(a0)>>>0;wasmExports[\"__errno_location\"]=makeWrapper_p(wasmExports[\"__errno_location\"]);wasmExports[\"pg\"]=makeWrapper_pp(wasmExports[\"pg\"]);wasmExports[\"tg\"]=makeWrapper_p(wasmExports[\"tg\"]);wasmExports[\"vg\"]=makeWrapper_pp(wasmExports[\"vg\"]);return wasmExports}Module[\"stackAlloc\"]=stackAlloc;Module[\"stackSave\"]=stackSave;Module[\"stackRestore\"]=stackRestore;Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(){var entryFunction=_main;var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = DuckDB;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => DuckDB);\n", "\nvar DuckDB = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module[\"inspect\"]=()=>\"[Emscripten Module object]\"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";if(runtimeInitialized){___trap()}var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith(\"file://\");var wasmBinaryFile;wasmBinaryFile=\"./duckdb-eh.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmExports=applySignatureConversions(wasmExports);wasmMemory=wasmExports[\"fa\"];updateMemoryViews();addOnInit(wasmExports[\"ga\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${status})`;this.status=status}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>{ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"};var SYSCALLS={varargs:undefined,get(){var ret=HEAP32[+SYSCALLS.varargs>>>2>>>0];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret}};var convertI32PairToI53Checked=(lo,hi)=>hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN;function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){readfds>>>=0;writefds>>>=0;exceptfds>>>=0;timeout>>>=0;var total=0;var srcReadLow=readfds?HEAP32[readfds>>>2>>>0]:0,srcReadHigh=readfds?HEAP32[readfds+4>>>2>>>0]:0;var srcWriteLow=writefds?HEAP32[writefds>>>2>>>0]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>>2>>>0]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>>2>>>0]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>>2>>>0]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>>2>>>0]:0)|(writefds?HEAP32[writefds>>>2>>>0]:0)|(exceptfds?HEAP32[exceptfds>>>2>>>0]:0);var allHigh=(readfds?HEAP32[readfds+4>>>2>>>0]:0)|(writefds?HEAP32[writefds+4>>>2>>>0]:0)|(exceptfds?HEAP32[exceptfds+4>>>2>>>0]:0);var check=function(fd,low,high,val){return fd<32?low&val:high&val};for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=SYSCALLS.getStreamFromFD(fd);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){var timeoutInMillis=-1;if(timeout){var tv_sec=readfds?HEAP32[timeout>>>2>>>0]:0,tv_usec=readfds?HEAP32[timeout+4>>>2>>>0]:0;timeoutInMillis=(tv_sec+tv_usec/1e6)*1e3}flags=stream.stream_ops.poll(stream,timeoutInMillis)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>>2>>>0]=dstReadLow;HEAP32[readfds+4>>>2>>>0]=dstReadHigh}if(writefds){HEAP32[writefds>>>2>>>0]=dstWriteLow;HEAP32[writefds+4>>>2>>>0]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>>2>>>0]=dstExceptLow;HEAP32[exceptfds+4>>>2>>>0]=dstExceptHigh}return total}function SOCKFS(){abort(\"missing function: $SOCKFS\")}SOCKFS.stub=true;function FS(){abort(\"missing function: $FS\")}FS.stub=true;var getSocketFromFD=fd=>{var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket};var inetNtop4=addr=>(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255);var inetNtop6=ints=>{var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str};var readSockaddr=(sa,salen)=>{var family=HEAP16[sa>>>1>>>0];var port=_ntohs(HEAPU16[sa+2>>>1>>>0]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>>2>>>0];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>>2>>>0],HEAP32[sa+12>>>2>>>0],HEAP32[sa+16>>>2>>>0],HEAP32[sa+20>>>2>>>0]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}};var inetPton4=str=>{var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0};var jstoi_q=str=>parseInt(str);var inetPton6=str=>{var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]==\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]};var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};var getSocketAddress=(addrp,addrlen,allowNull)=>{if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info};function ___syscall_bind(fd,addr,addrlen,d1,d2,d3){addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.bind(sock,info.addr,info.port);return 0}function ___syscall_connect(fd,addr,addrlen,d1,d2,d3){addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}function ___syscall_faccessat(dirfd,path,amode,flags){path>>>=0}function ___syscall_fcntl64(fd,cmd,varargs){varargs>>>=0;SYSCALLS.varargs=varargs;return 0}function ___syscall_fstat64(fd,buf){buf>>>=0}function ___syscall_ftruncate64(fd,length_low,length_high){var length=convertI32PairToI53Checked(length_low,length_high)}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);function ___syscall_getdents64(fd,dirp,count){dirp>>>=0;count>>>=0}var zeroMemory=(address,size)=>{HEAPU8.fill(0,address,address+size);return address};var writeSockaddr=(sa,family,addr,port,addrlen)=>{switch(family){case 2:addr=inetPton4(addr);zeroMemory(sa,16);if(addrlen){HEAP32[addrlen>>>2>>>0]=16}HEAP16[sa>>>1>>>0]=family;HEAP32[sa+4>>>2>>>0]=addr;HEAP16[sa+2>>>1>>>0]=_htons(port);break;case 10:addr=inetPton6(addr);zeroMemory(sa,28);if(addrlen){HEAP32[addrlen>>>2>>>0]=28}HEAP32[sa>>>2>>>0]=family;HEAP32[sa+8>>>2>>>0]=addr[0];HEAP32[sa+12>>>2>>>0]=addr[1];HEAP32[sa+16>>>2>>>0]=addr[2];HEAP32[sa+20>>>2>>>0]=addr[3];HEAP16[sa+2>>>1>>>0]=_htons(port);break;default:return 5}return 0};function ___syscall_getpeername(fd,addr,addrlen,d1,d2,d3){addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);if(!sock.daddr){return-53}var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport,addrlen);return 0}function ___syscall_getsockopt(fd,level,optname,optval,optlen,d1){optval>>>=0;optlen>>>=0;var sock=getSocketFromFD(fd);if(level===1){if(optname===4){HEAP32[optval>>>2>>>0]=sock.error;HEAP32[optlen>>>2>>>0]=4;sock.error=null;return 0}}return-50}function ___syscall_ioctl(fd,op,varargs){varargs>>>=0;SYSCALLS.varargs=varargs;return 0}function ___syscall_lstat64(path,buf){path>>>=0;buf>>>=0}function ___syscall_mkdirat(dirfd,path,mode){path>>>=0}function ___syscall_newfstatat(dirfd,path,buf,flags){path>>>=0;buf>>>=0}function ___syscall_openat(dirfd,path,flags,varargs){path>>>=0;varargs>>>=0;SYSCALLS.varargs=varargs}function ___syscall_recvfrom(fd,buf,len,flags,addr,addrlen){buf>>>=0;len>>>=0;addr>>>=0;addrlen>>>=0;var sock=getSocketFromFD(fd);var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var errno=writeSockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port,addrlen)}HEAPU8.set(msg.buffer,buf>>>0);return msg.buffer.byteLength}function ___syscall_renameat(olddirfd,oldpath,newdirfd,newpath){oldpath>>>=0;newpath>>>=0}function ___syscall_rmdir(path){path>>>=0}function ___syscall_sendto(fd,message,length,flags,addr,addr_len){message>>>=0;length>>>=0;addr>>>=0;addr_len>>>=0}var ___syscall_socket=(domain,type,protocol)=>{};function ___syscall_stat64(path,buf){path>>>=0;buf>>>=0}function ___syscall_unlinkat(dirfd,path,flags){path>>>=0}var nowIsMonotonic=1;var __emscripten_get_now_is_monotonic=()=>nowIsMonotonic;var _abort=()=>{abort(\"\")};function _duckdb_web_fs_directory_create(path,pathLen){return globalThis.DUCKDB_RUNTIME.createDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkDirectory(Module,path,pathLen)}function _duckdb_web_fs_directory_list_files(path,pathLen){return globalThis.DUCKDB_RUNTIME.listDirectoryEntries(Module,path,pathLen)}function _duckdb_web_fs_directory_remove(path,pathLen){return globalThis.DUCKDB_RUNTIME.removeDirectory(Module,path,pathLen)}function _duckdb_web_fs_file_close(fileId){return globalThis.DUCKDB_RUNTIME.closeFile(Module,fileId)}function _duckdb_web_fs_file_exists(path,pathLen){return globalThis.DUCKDB_RUNTIME.checkFile(Module,path,pathLen)}function _duckdb_web_fs_file_get_last_modified_time(fileId){return globalThis.DUCKDB_RUNTIME.getLastFileModificationTime(Module,fileId)}function _duckdb_web_fs_file_move(from,fromLen,to,toLen){return globalThis.DUCKDB_RUNTIME.moveFile(Module,from,fromLen,to,toLen)}function _duckdb_web_fs_file_open(fileId,flags){return globalThis.DUCKDB_RUNTIME.openFile(Module,fileId,flags)}function _duckdb_web_fs_file_read(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.readFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_file_truncate(fileId,newSize){return globalThis.DUCKDB_RUNTIME.truncateFile(Module,fileId,newSize)}function _duckdb_web_fs_file_write(fileId,buf,size,location){return globalThis.DUCKDB_RUNTIME.writeFile(Module,fileId,buf,size,location)}function _duckdb_web_fs_get_default_data_protocol(Module){return globalThis.DUCKDB_RUNTIME.getDefaultDataProtocol(Module)}function _duckdb_web_fs_glob(path,pathLen){return globalThis.DUCKDB_RUNTIME.glob(Module,path,pathLen)}function _duckdb_web_test_platform_feature(feature){return globalThis.DUCKDB_RUNTIME.testPlatformFeature(Module,feature)}function _duckdb_web_udf_scalar_call(funcId,descPtr,descSize,ptrsPtr,ptrsSize,response){return globalThis.DUCKDB_RUNTIME.callScalarUDF(Module,funcId,descPtr,descSize,ptrsPtr,ptrsSize,response)}var _emscripten_date_now=()=>Date.now();var getHeapMax=()=>4294901760;function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;_emscripten_get_now=()=>performance.now();function _emscripten_memcpy_js(dest,src,num){dest>>>=0;src>>>=0;num>>>=0;return HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false}var ENV={};var getExecutableName=()=>thisProgram||\"./this.program\";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++>>>0>>>0]=str.charCodeAt(i)}HEAP8[buffer>>>0>>>0]=0};var _environ_get=function(__environ,environ_buf){__environ>>>=0;environ_buf>>>=0;var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>>2>>>0]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=function(penviron_count,penviron_buf_size){penviron_count>>>=0;penviron_buf_size>>>=0;var strings=getEnvStrings();HEAPU32[penviron_count>>>2>>>0]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>>2>>>0]=bufSize;return 0};var _fd_close=fd=>52;function _fd_fdstat_get(fd,pbuf){pbuf>>>=0;var rightsBase=0;var rightsInheriting=0;var flags=0;{var type=2;if(fd==0){rightsBase=2}else if(fd==1||fd==2){rightsBase=64}flags=1}HEAP8[pbuf>>>0>>>0]=type;HEAP16[pbuf+2>>>1>>>0]=flags;tempI64=[rightsBase>>>0,(tempDouble=rightsBase,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+8>>>2>>>0]=tempI64[0],HEAP32[pbuf+12>>>2>>>0]=tempI64[1];tempI64=[rightsInheriting>>>0,(tempDouble=rightsInheriting,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[pbuf+16>>>2>>>0]=tempI64[0],HEAP32[pbuf+20>>>2>>>0]=tempI64[1];return 0}function _fd_pread(fd,iov,iovcnt,offset_low,offset_high,pnum){iov>>>=0;iovcnt>>>=0;var offset=convertI32PairToI53Checked(offset_low,offset_high);pnum>>>=0;return 52}function _fd_pwrite(fd,iov,iovcnt,offset_low,offset_high,pnum){iov>>>=0;iovcnt>>>=0;var offset=convertI32PairToI53Checked(offset_low,offset_high);pnum>>>=0;return 52}function _fd_read(fd,iov,iovcnt,pnum){iov>>>=0;iovcnt>>>=0;pnum>>>=0;return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);newOffset>>>=0;return 70}var _fd_sync=fd=>52;var printCharBuffers=[null,[],[]];var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}};function _fd_write(fd,iov,iovcnt,pnum){iov>>>=0;iovcnt>>>=0;pnum>>>=0;var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>>2>>>0];var len=HEAPU32[iov+4>>>2>>>0];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j>>>0])}num+=len}HEAPU32[pnum>>>2>>>0]=num;return 0}function _getaddrinfo(node,service,hint,out){node>>>=0;service>>>=0;hint>>>=0;out>>>=0;var addr=0;var port=0;var flags=0;var family=0;var type=0;var proto=0;var ai;function allocaddrinfo(family,type,proto,canon,addr,port){var sa,salen,ai;var errno;salen=family===10?28:16;addr=family===10?inetNtop6(addr):inetNtop4(addr);sa=_malloc(salen);errno=writeSockaddr(sa,family,addr,port);assert(!errno);ai=_malloc(32);HEAP32[ai+4>>>2>>>0]=family;HEAP32[ai+8>>>2>>>0]=type;HEAP32[ai+12>>>2>>>0]=proto;HEAPU32[ai+24>>>2>>>0]=canon;HEAPU32[ai+20>>>2>>>0]=sa;if(family===10){HEAP32[ai+16>>>2>>>0]=28}else{HEAP32[ai+16>>>2>>>0]=16}HEAP32[ai+28>>>2>>>0]=0;return ai}if(hint){flags=HEAP32[hint>>>2>>>0];family=HEAP32[hint+4>>>2>>>0];type=HEAP32[hint+8>>>2>>>0];proto=HEAP32[hint+12>>>2>>>0]}if(type&&!proto){proto=type===2?17:6}if(!type&&proto){type=proto===17?2:1}if(proto===0){proto=6}if(type===0){type=1}if(!node&&!service){return-2}if(flags&~(1|2|4|1024|8|16|32)){return-1}if(hint!==0&&HEAP32[hint>>>2>>>0]&2&&!node){return-1}if(flags&32){return-2}if(type!==0&&type!==1&&type!==2){return-7}if(family!==0&&family!==2&&family!==10){return-6}if(service){service=UTF8ToString(service);port=parseInt(service,10);if(isNaN(port)){if(flags&1024){return-2}return-8}}if(!node){if(family===0){family=2}if((flags&1)===0){if(family===2){addr=_htonl(2130706433)}else{addr=[0,0,0,1]}}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2>>>0]=ai;return 0}node=UTF8ToString(node);addr=inetPton4(node);if(addr!==null){if(family===0||family===2){family=2}else if(family===10&&flags&8){addr=[0,0,_htonl(65535),addr];family=10}else{return-2}}else{addr=inetPton6(node);if(addr!==null){if(family===0||family===10){family=10}else{return-2}}}if(addr!=null){ai=allocaddrinfo(family,type,proto,node,addr,port);HEAPU32[out>>>2>>>0]=ai;return 0}if(flags&4){return-2}node=DNS.lookup_name(node);addr=inetPton4(node);if(family===0){family=2}else if(family===10){addr=[0,0,_htonl(65535),addr]}ai=allocaddrinfo(family,type,proto,null,addr,port);HEAPU32[out>>>2>>>0]=ai;return 0}var initRandomFill=()=>{if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){return view=>crypto.getRandomValues(view)}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");var randomFillSync=crypto_module[\"randomFillSync\"];if(randomFillSync){return view=>crypto_module[\"randomFillSync\"](view)}var randomBytes=crypto_module[\"randomBytes\"];return view=>(view.set(randomBytes(view.byteLength)),view)}catch(e){}}abort(\"initRandomDevice\")};var randomFill=view=>(randomFill=initRandomFill())(view);function _getentropy(buffer,size){buffer>>>=0;size>>>=0;randomFill(HEAPU8.subarray(buffer>>>0,buffer+size>>>0));return 0}function _getnameinfo(sa,salen,node,nodelen,serv,servlen,flags){sa>>>=0;node>>>=0;serv>>>=0;var info=readSockaddr(sa,salen);if(info.errno){return-6}var port=info.port;var addr=info.addr;var overflowed=false;if(node&&nodelen){var lookup;if(flags&1||!(lookup=DNS.lookup_addr(addr))){if(flags&8){return-2}}else{addr=lookup}var numBytesWrittenExclNull=stringToUTF8(addr,node,nodelen);if(numBytesWrittenExclNull+1>=nodelen){overflowed=true}}if(serv&&servlen){port=\"\"+port;var numBytesWrittenExclNull=stringToUTF8(port,serv,servlen);if(numBytesWrittenExclNull+1>=servlen){overflowed=true}}if(overflowed){return-12}return 0}var isLeapYear=year=>year%4===0&&(year%100!==0||year%400===0);var arraySum=(array,index)=>{var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=(date,days)=>{var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer>>>0)};function _strftime(s,maxsize,format,tm){s>>>=0;maxsize>>>=0;format>>>=0;tm>>>=0;var tm_zone=HEAPU32[tm+40>>>2>>>0];var date={tm_sec:HEAP32[tm>>>2>>>0],tm_min:HEAP32[tm+4>>>2>>>0],tm_hour:HEAP32[tm+8>>>2>>>0],tm_mday:HEAP32[tm+12>>>2>>>0],tm_mon:HEAP32[tm+16>>>2>>>0],tm_year:HEAP32[tm+20>>>2>>>0],tm_wday:HEAP32[tm+24>>>2>>>0],tm_yday:HEAP32[tm+28>>>2>>>0],tm_isdst:HEAP32[tm+32>>>2>>>0],tm_gmtoff:HEAP32[tm+36>>>2>>>0],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":date=>WEEKDAYS[date.tm_wday].substring(0,3),\"%A\":date=>WEEKDAYS[date.tm_wday],\"%b\":date=>MONTHS[date.tm_mon].substring(0,3),\"%B\":date=>MONTHS[date.tm_mon],\"%C\":date=>{var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":date=>leadingNulls(date.tm_mday,2),\"%e\":date=>leadingSomething(date.tm_mday,2,\" \"),\"%g\":date=>getWeekBasedYear(date).toString().substring(2),\"%G\":date=>getWeekBasedYear(date),\"%H\":date=>leadingNulls(date.tm_hour,2),\"%I\":date=>{var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),\"%m\":date=>leadingNulls(date.tm_mon+1,2),\"%M\":date=>leadingNulls(date.tm_min,2),\"%n\":()=>\"\\n\",\"%p\":date=>{if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":date=>leadingNulls(date.tm_sec,2),\"%t\":()=>\"\\t\",\"%u\":date=>date.tm_wday||7,\"%U\":date=>{var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":date=>{var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":date=>date.tm_wday,\"%W\":date=>{var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":date=>(date.tm_year+1900).toString().substring(2),\"%Y\":date=>date.tm_year+1900,\"%z\":date=>{var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":date=>date.tm_zone,\"%%\":()=>\"%\"};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){s>>>=0;maxsize>>>=0;format>>>=0;tm>>>=0;loc>>>=0;return _strftime(s,maxsize,format,tm)}var runtimeKeepaliveCounter=0;var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module[\"onExit\"]?.(code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;_proc_exit(status)};var handleException=e=>{if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)};var getCFunc=ident=>{var func=Module[\"_\"+ident];return func};var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var wasmImports={Z:___syscall__newselect,ba:___syscall_bind,aa:___syscall_connect,V:___syscall_faccessat,a:___syscall_fcntl64,U:___syscall_fstat64,v:___syscall_ftruncate64,P:___syscall_getdents64,X:___syscall_getpeername,Y:___syscall_getsockopt,o:___syscall_ioctl,R:___syscall_lstat64,Q:___syscall_mkdirat,S:___syscall_newfstatat,p:___syscall_openat,_:___syscall_recvfrom,N:___syscall_renameat,j:___syscall_rmdir,$:___syscall_sendto,l:___syscall_socket,T:___syscall_stat64,k:___syscall_unlinkat,q:__emscripten_get_now_is_monotonic,d:_abort,F:_duckdb_web_fs_directory_create,G:_duckdb_web_fs_directory_exists,D:_duckdb_web_fs_directory_list_files,E:_duckdb_web_fs_directory_remove,h:_duckdb_web_fs_file_close,A:_duckdb_web_fs_file_exists,u:_duckdb_web_fs_file_get_last_modified_time,B:_duckdb_web_fs_file_move,I:_duckdb_web_fs_file_open,e:_duckdb_web_fs_file_read,H:_duckdb_web_fs_file_truncate,i:_duckdb_web_fs_file_write,J:_duckdb_web_fs_get_default_data_protocol,z:_duckdb_web_fs_glob,g:_duckdb_web_test_platform_feature,L:_duckdb_web_udf_scalar_call,r:_emscripten_date_now,s:_emscripten_get_heap_max,c:_emscripten_get_now,da:_emscripten_memcpy_js,ea:_emscripten_resize_heap,C:_environ_get,K:_environ_sizes_get,b:_fd_close,ca:_fd_fdstat_get,x:_fd_pread,w:_fd_pwrite,n:_fd_read,y:_fd_seek,O:_fd_sync,f:_fd_write,m:_getaddrinfo,M:_getentropy,W:_getnameinfo,t:_strftime_l};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"ga\"])();var _main=Module[\"_main\"]=(a0,a1)=>(_main=Module[\"_main\"]=wasmExports[\"ha\"])(a0,a1);var _duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=a0=>(_duckdb_web_fs_glob_add_path=Module[\"_duckdb_web_fs_glob_add_path\"]=wasmExports[\"ja\"])(a0);var _duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=()=>(_duckdb_web_clear_response=Module[\"_duckdb_web_clear_response\"]=wasmExports[\"ka\"])();var _duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=a0=>(_duckdb_web_fail_with=Module[\"_duckdb_web_fail_with\"]=wasmExports[\"la\"])(a0);var _duckdb_web_reset=Module[\"_duckdb_web_reset\"]=a0=>(_duckdb_web_reset=Module[\"_duckdb_web_reset\"]=wasmExports[\"ma\"])(a0);var _duckdb_web_connect=Module[\"_duckdb_web_connect\"]=()=>(_duckdb_web_connect=Module[\"_duckdb_web_connect\"]=wasmExports[\"na\"])();var _duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=a0=>(_duckdb_web_disconnect=Module[\"_duckdb_web_disconnect\"]=wasmExports[\"oa\"])(a0);var _duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=()=>(_duckdb_web_flush_files=Module[\"_duckdb_web_flush_files\"]=wasmExports[\"pa\"])();var _duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=a0=>(_duckdb_web_flush_file=Module[\"_duckdb_web_flush_file\"]=wasmExports[\"qa\"])(a0);var _duckdb_web_open=Module[\"_duckdb_web_open\"]=(a0,a1)=>(_duckdb_web_open=Module[\"_duckdb_web_open\"]=wasmExports[\"ra\"])(a0,a1);var _duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=(a0,a1)=>(_duckdb_web_get_global_file_info=Module[\"_duckdb_web_get_global_file_info\"]=wasmExports[\"sa\"])(a0,a1);var _duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=(a0,a1,a2)=>(_duckdb_web_collect_file_stats=Module[\"_duckdb_web_collect_file_stats\"]=wasmExports[\"ta\"])(a0,a1,a2);var _duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=(a0,a1)=>(_duckdb_web_export_file_stats=Module[\"_duckdb_web_export_file_stats\"]=wasmExports[\"ua\"])(a0,a1);var _duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=(a0,a1)=>(_duckdb_web_fs_drop_file=Module[\"_duckdb_web_fs_drop_file\"]=wasmExports[\"va\"])(a0,a1);var _duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=a0=>(_duckdb_web_fs_drop_files=Module[\"_duckdb_web_fs_drop_files\"]=wasmExports[\"wa\"])(a0);var _duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=(a0,a1)=>(_duckdb_web_fs_glob_file_infos=Module[\"_duckdb_web_fs_glob_file_infos\"]=wasmExports[\"xa\"])(a0,a1);var _duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=(a0,a1,a2)=>(_duckdb_web_fs_get_file_info_by_id=Module[\"_duckdb_web_fs_get_file_info_by_id\"]=wasmExports[\"ya\"])(a0,a1,a2);var _duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=(a0,a1,a2)=>(_duckdb_web_fs_get_file_info_by_name=Module[\"_duckdb_web_fs_get_file_info_by_name\"]=wasmExports[\"za\"])(a0,a1,a2);var _duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=(a0,a1,a2,a3,a4)=>(_duckdb_web_fs_register_file_url=Module[\"_duckdb_web_fs_register_file_url\"]=wasmExports[\"Aa\"])(a0,a1,a2,a3,a4);var _duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=(a0,a1,a2,a3)=>(_duckdb_web_fs_register_file_buffer=Module[\"_duckdb_web_fs_register_file_buffer\"]=wasmExports[\"Ba\"])(a0,a1,a2,a3);var _duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=(a0,a1)=>(_duckdb_web_copy_file_to_buffer=Module[\"_duckdb_web_copy_file_to_buffer\"]=wasmExports[\"Ca\"])(a0,a1);var _duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=(a0,a1,a2)=>(_duckdb_web_copy_file_to_path=Module[\"_duckdb_web_copy_file_to_path\"]=wasmExports[\"Da\"])(a0,a1,a2);var _duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=a0=>(_duckdb_web_get_version=Module[\"_duckdb_web_get_version\"]=wasmExports[\"Ea\"])(a0);var _duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=()=>(_duckdb_web_get_feature_flags=Module[\"_duckdb_web_get_feature_flags\"]=wasmExports[\"Fa\"])();var _duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=(a0,a1)=>(_duckdb_web_tokenize=Module[\"_duckdb_web_tokenize\"]=wasmExports[\"Ga\"])(a0,a1);var _duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=(a0,a1,a2)=>(_duckdb_web_udf_scalar_create=Module[\"_duckdb_web_udf_scalar_create\"]=wasmExports[\"Ha\"])(a0,a1,a2);var _duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=(a0,a1,a2)=>(_duckdb_web_prepared_create=Module[\"_duckdb_web_prepared_create\"]=wasmExports[\"Ia\"])(a0,a1,a2);var _duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=(a0,a1,a2)=>(_duckdb_web_prepared_close=Module[\"_duckdb_web_prepared_close\"]=wasmExports[\"Ja\"])(a0,a1,a2);var _duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=(a0,a1,a2,a3)=>(_duckdb_web_prepared_run=Module[\"_duckdb_web_prepared_run\"]=wasmExports[\"Ka\"])(a0,a1,a2,a3);var _duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=(a0,a1,a2,a3)=>(_duckdb_web_prepared_send=Module[\"_duckdb_web_prepared_send\"]=wasmExports[\"La\"])(a0,a1,a2,a3);var _duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=(a0,a1,a2)=>(_duckdb_web_query_run=Module[\"_duckdb_web_query_run\"]=wasmExports[\"Ma\"])(a0,a1,a2);var _duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=(a0,a1,a2)=>(_duckdb_web_pending_query_start=Module[\"_duckdb_web_pending_query_start\"]=wasmExports[\"Na\"])(a0,a1,a2);var _duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=(a0,a1,a2)=>(_duckdb_web_pending_query_poll=Module[\"_duckdb_web_pending_query_poll\"]=wasmExports[\"Oa\"])(a0,a1,a2);var _duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=(a0,a1)=>(_duckdb_web_pending_query_cancel=Module[\"_duckdb_web_pending_query_cancel\"]=wasmExports[\"Pa\"])(a0,a1);var _duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=(a0,a1)=>(_duckdb_web_query_fetch_results=Module[\"_duckdb_web_query_fetch_results\"]=wasmExports[\"Qa\"])(a0,a1);var _duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=(a0,a1,a2)=>(_duckdb_web_get_tablenames=Module[\"_duckdb_web_get_tablenames\"]=wasmExports[\"Ra\"])(a0,a1,a2);var _duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=(a0,a1,a2,a3,a4)=>(_duckdb_web_insert_arrow_from_ipc_stream=Module[\"_duckdb_web_insert_arrow_from_ipc_stream\"]=wasmExports[\"Sa\"])(a0,a1,a2,a3,a4);var _duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=(a0,a1,a2,a3)=>(_duckdb_web_insert_csv_from_path=Module[\"_duckdb_web_insert_csv_from_path\"]=wasmExports[\"Ta\"])(a0,a1,a2,a3);var _duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=(a0,a1,a2,a3)=>(_duckdb_web_insert_json_from_path=Module[\"_duckdb_web_insert_json_from_path\"]=wasmExports[\"Ua\"])(a0,a1,a2,a3);var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _htonl=a0=>(_htonl=wasmExports[\"Va\"])(a0);var _htons=a0=>(_htons=wasmExports[\"Wa\"])(a0);var _ntohs=a0=>(_ntohs=wasmExports[\"Xa\"])(a0);var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"Ya\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"Za\"])(a0);var ___trap=()=>(___trap=wasmExports[\"_a\"])();var stackSave=()=>(stackSave=wasmExports[\"$a\"])();var stackRestore=a0=>(stackRestore=wasmExports[\"ab\"])(a0);var stackAlloc=a0=>(stackAlloc=wasmExports[\"bb\"])(a0);function applySignatureConversions(wasmExports){wasmExports=Object.assign({},wasmExports);var makeWrapper_p=f=>()=>f()>>>0;var makeWrapper_pp=f=>a0=>f(a0)>>>0;wasmExports[\"__errno_location\"]=makeWrapper_p(wasmExports[\"__errno_location\"]);wasmExports[\"Ya\"]=makeWrapper_pp(wasmExports[\"Ya\"]);wasmExports[\"$a\"]=makeWrapper_p(wasmExports[\"$a\"]);wasmExports[\"bb\"]=makeWrapper_pp(wasmExports[\"bb\"]);return wasmExports}Module[\"stackAlloc\"]=stackAlloc;Module[\"stackSave\"]=stackSave;Module[\"stackRestore\"]=stackRestore;Module[\"ccall\"]=ccall;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function callMain(){var entryFunction=_main;var argc=0;var argv=0;try{var ret=entryFunction(argc,argv);exitJS(ret,true);return ret}catch(e){return handleException(e)}}function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();preMain();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(shouldRunNow)callMain();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"])shouldRunNow=false;run();\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = DuckDB;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => DuckDB);\n", "/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export const SIZEOF_SHORT = 2;\nexport const SIZEOF_INT = 4;\nexport const FILE_IDENTIFIER_LENGTH = 4;\nexport const SIZE_PREFIX_LENGTH = 4;\n", "export const int32 = new Int32Array(2);\nexport const float32 = new Float32Array(int32.buffer);\nexport const float64 = new Float64Array(int32.buffer);\nexport const isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n", "export var Encoding;\n(function (Encoding) {\n    Encoding[Encoding[\"UTF8_BYTES\"] = 1] = \"UTF8_BYTES\";\n    Encoding[Encoding[\"UTF16_STRING\"] = 2] = \"UTF16_STRING\";\n})(Encoding || (Encoding = {}));\n", "import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants.js\";\nimport { int32, isLittleEndian, float32, float64 } from \"./utils.js\";\nimport { Encoding } from \"./encoding.js\";\nexport class ByteBuffer {\n    /**\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\n     */\n    constructor(bytes_) {\n        this.bytes_ = bytes_;\n        this.position_ = 0;\n        this.text_decoder_ = new TextDecoder();\n    }\n    /**\n     * Create and allocate a new ByteBuffer with a given size.\n     */\n    static allocate(byte_size) {\n        return new ByteBuffer(new Uint8Array(byte_size));\n    }\n    clear() {\n        this.position_ = 0;\n    }\n    /**\n     * Get the underlying `Uint8Array`.\n     */\n    bytes() {\n        return this.bytes_;\n    }\n    /**\n     * Get the buffer's position.\n     */\n    position() {\n        return this.position_;\n    }\n    /**\n     * Set the buffer's position.\n     */\n    setPosition(position) {\n        this.position_ = position;\n    }\n    /**\n     * Get the buffer's capacity.\n     */\n    capacity() {\n        return this.bytes_.length;\n    }\n    readInt8(offset) {\n        return this.readUint8(offset) << 24 >> 24;\n    }\n    readUint8(offset) {\n        return this.bytes_[offset];\n    }\n    readInt16(offset) {\n        return this.readUint16(offset) << 16 >> 16;\n    }\n    readUint16(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n    }\n    readInt32(offset) {\n        return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n    }\n    readUint32(offset) {\n        return this.readInt32(offset) >>> 0;\n    }\n    readInt64(offset) {\n        return BigInt.asIntN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readUint64(offset) {\n        return BigInt.asUintN(64, BigInt(this.readUint32(offset)) + (BigInt(this.readUint32(offset + 4)) << BigInt(32)));\n    }\n    readFloat32(offset) {\n        int32[0] = this.readInt32(offset);\n        return float32[0];\n    }\n    readFloat64(offset) {\n        int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\n        int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n        return float64[0];\n    }\n    writeInt8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeUint8(offset, value) {\n        this.bytes_[offset] = value;\n    }\n    writeInt16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeUint16(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n    }\n    writeInt32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeUint32(offset, value) {\n        this.bytes_[offset] = value;\n        this.bytes_[offset + 1] = value >> 8;\n        this.bytes_[offset + 2] = value >> 16;\n        this.bytes_[offset + 3] = value >> 24;\n    }\n    writeInt64(offset, value) {\n        this.writeInt32(offset, Number(BigInt.asIntN(32, value)));\n        this.writeInt32(offset + 4, Number(BigInt.asIntN(32, value >> BigInt(32))));\n    }\n    writeUint64(offset, value) {\n        this.writeUint32(offset, Number(BigInt.asUintN(32, value)));\n        this.writeUint32(offset + 4, Number(BigInt.asUintN(32, value >> BigInt(32))));\n    }\n    writeFloat32(offset, value) {\n        float32[0] = value;\n        this.writeInt32(offset, int32[0]);\n    }\n    writeFloat64(offset, value) {\n        float64[0] = value;\n        this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\n        this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\n    }\n    /**\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n     * schema does not include a file_identifier (likely points at padding or the\n     * start of a the root vtable).\n     */\n    getBufferIdentifier() {\n        if (this.bytes_.length < this.position_ + SIZEOF_INT +\n            FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: ByteBuffer is too short to contain an identifier.');\n        }\n        let result = \"\";\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            result += String.fromCharCode(this.readInt8(this.position_ + SIZEOF_INT + i));\n        }\n        return result;\n    }\n    /**\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\n     * field is not present.\n     */\n    __offset(bb_pos, vtable_offset) {\n        const vtable = bb_pos - this.readInt32(bb_pos);\n        return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n    }\n    /**\n     * Initialize any Table-derived type to point to the union at the given offset.\n     */\n    __union(t, offset) {\n        t.bb_pos = offset + this.readInt32(offset);\n        t.bb = this;\n        return t;\n    }\n    /**\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n     * This allocates a new string and converts to wide chars upon each access.\n     *\n     * To avoid the conversion to string, pass Encoding.UTF8_BYTES as the\n     * \"optionalEncoding\" argument. This is useful for avoiding conversion when\n     * the data will just be packaged back up in another FlatBuffer later on.\n     *\n     * @param offset\n     * @param opt_encoding Defaults to UTF16_STRING\n     */\n    __string(offset, opt_encoding) {\n        offset += this.readInt32(offset);\n        const length = this.readInt32(offset);\n        offset += SIZEOF_INT;\n        const utf8bytes = this.bytes_.subarray(offset, offset + length);\n        if (opt_encoding === Encoding.UTF8_BYTES)\n            return utf8bytes;\n        else\n            return this.text_decoder_.decode(utf8bytes);\n    }\n    /**\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it,\n     * if a string then return a new one\n     *\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this\n     * makes the behaviour of __union_with_string different compared to __union\n     */\n    __union_with_string(o, offset) {\n        if (typeof o === 'string') {\n            return this.__string(offset);\n        }\n        return this.__union(o, offset);\n    }\n    /**\n     * Retrieve the relative offset stored at \"offset\"\n     */\n    __indirect(offset) {\n        return offset + this.readInt32(offset);\n    }\n    /**\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector(offset) {\n        return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\n    }\n    /**\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\n     */\n    __vector_len(offset) {\n        return this.readInt32(offset + this.readInt32(offset));\n    }\n    __has_identifier(ident) {\n        if (ident.length != FILE_IDENTIFIER_LENGTH) {\n            throw new Error('FlatBuffers: file identifier must be length ' +\n                FILE_IDENTIFIER_LENGTH);\n        }\n        for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\n            if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * A helper function for generating list for obj api\n     */\n    createScalarList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val);\n            }\n        }\n        return ret;\n    }\n    /**\n     * A helper function for generating list for obj api\n     * @param listAccessor function that accepts an index and return data at that index\n     * @param listLength listLength\n     * @param res result list\n     */\n    createObjList(listAccessor, listLength) {\n        const ret = [];\n        for (let i = 0; i < listLength; ++i) {\n            const val = listAccessor(i);\n            if (val !== null) {\n                ret.push(val.unpack());\n            }\n        }\n        return ret;\n    }\n}\n", "import { ByteBuffer } from \"./byte-buffer.js\";\nimport { SIZEOF_SHORT, SIZE_PREFIX_LENGTH, SIZEOF_INT, FILE_IDENTIFIER_LENGTH } from \"./constants.js\";\nexport class Builder {\n    /**\n     * Create a FlatBufferBuilder.\n     */\n    constructor(opt_initial_size) {\n        /** Minimum alignment encountered so far. */\n        this.minalign = 1;\n        /** The vtable for the current table. */\n        this.vtable = null;\n        /** The amount of fields we're actually using. */\n        this.vtable_in_use = 0;\n        /** Whether we are currently serializing a table. */\n        this.isNested = false;\n        /** Starting offset of the current struct/table. */\n        this.object_start = 0;\n        /** List of offsets of all vtables. */\n        this.vtables = [];\n        /** For the current vector being built. */\n        this.vector_num_elems = 0;\n        /** False omits default values from the serialized data */\n        this.force_defaults = false;\n        this.string_maps = null;\n        this.text_encoder = new TextEncoder();\n        let initial_size;\n        if (!opt_initial_size) {\n            initial_size = 1024;\n        }\n        else {\n            initial_size = opt_initial_size;\n        }\n        /**\n         * @type {ByteBuffer}\n         * @private\n         */\n        this.bb = ByteBuffer.allocate(initial_size);\n        this.space = initial_size;\n    }\n    clear() {\n        this.bb.clear();\n        this.space = this.bb.capacity();\n        this.minalign = 1;\n        this.vtable = null;\n        this.vtable_in_use = 0;\n        this.isNested = false;\n        this.object_start = 0;\n        this.vtables = [];\n        this.vector_num_elems = 0;\n        this.force_defaults = false;\n        this.string_maps = null;\n    }\n    /**\n     * In order to save space, fields that are set to their default value\n     * don't get serialized into the buffer. Forcing defaults provides a\n     * way to manually disable this optimization.\n     *\n     * @param forceDefaults true always serializes default values\n     */\n    forceDefaults(forceDefaults) {\n        this.force_defaults = forceDefaults;\n    }\n    /**\n     * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n     * called finish(). The actual data starts at the ByteBuffer's current position,\n     * not necessarily at 0.\n     */\n    dataBuffer() {\n        return this.bb;\n    }\n    /**\n     * Get the bytes representing the FlatBuffer. Only call this after you've\n     * called finish().\n     */\n    asUint8Array() {\n        return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n    }\n    /**\n     * Prepare to write an element of `size` after `additional_bytes` have been\n     * written, e.g. if you write a string, you need to align such the int length\n     * field is aligned to 4 bytes, and the string data follows it directly. If all\n     * you need to do is alignment, `additional_bytes` will be 0.\n     *\n     * @param size This is the of the new element to write\n     * @param additional_bytes The padding size\n     */\n    prep(size, additional_bytes) {\n        // Track the biggest thing we've ever aligned to.\n        if (size > this.minalign) {\n            this.minalign = size;\n        }\n        // Find the amount of alignment needed such that `size` is properly\n        // aligned after `additional_bytes`\n        const align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n        // Reallocate the buffer if needed.\n        while (this.space < align_size + size + additional_bytes) {\n            const old_buf_size = this.bb.capacity();\n            this.bb = Builder.growByteBuffer(this.bb);\n            this.space += this.bb.capacity() - old_buf_size;\n        }\n        this.pad(align_size);\n    }\n    pad(byte_size) {\n        for (let i = 0; i < byte_size; i++) {\n            this.bb.writeInt8(--this.space, 0);\n        }\n    }\n    writeInt8(value) {\n        this.bb.writeInt8(this.space -= 1, value);\n    }\n    writeInt16(value) {\n        this.bb.writeInt16(this.space -= 2, value);\n    }\n    writeInt32(value) {\n        this.bb.writeInt32(this.space -= 4, value);\n    }\n    writeInt64(value) {\n        this.bb.writeInt64(this.space -= 8, value);\n    }\n    writeFloat32(value) {\n        this.bb.writeFloat32(this.space -= 4, value);\n    }\n    writeFloat64(value) {\n        this.bb.writeFloat64(this.space -= 8, value);\n    }\n    /**\n     * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int8` to add the buffer.\n     */\n    addInt8(value) {\n        this.prep(1, 0);\n        this.writeInt8(value);\n    }\n    /**\n     * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int16` to add the buffer.\n     */\n    addInt16(value) {\n        this.prep(2, 0);\n        this.writeInt16(value);\n    }\n    /**\n     * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int32` to add the buffer.\n     */\n    addInt32(value) {\n        this.prep(4, 0);\n        this.writeInt32(value);\n    }\n    /**\n     * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `int64` to add the buffer.\n     */\n    addInt64(value) {\n        this.prep(8, 0);\n        this.writeInt64(value);\n    }\n    /**\n     * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float32` to add the buffer.\n     */\n    addFloat32(value) {\n        this.prep(4, 0);\n        this.writeFloat32(value);\n    }\n    /**\n     * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n     * @param value The `float64` to add the buffer.\n     */\n    addFloat64(value) {\n        this.prep(8, 0);\n        this.writeFloat64(value);\n    }\n    addFieldInt8(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt8(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt16(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt16(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addInt32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldInt64(voffset, value, defaultValue) {\n        if (this.force_defaults || value !== defaultValue) {\n            this.addInt64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat32(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat32(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldFloat64(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addFloat64(value);\n            this.slot(voffset);\n        }\n    }\n    addFieldOffset(voffset, value, defaultValue) {\n        if (this.force_defaults || value != defaultValue) {\n            this.addOffset(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n     */\n    addFieldStruct(voffset, value, defaultValue) {\n        if (value != defaultValue) {\n            this.nested(value);\n            this.slot(voffset);\n        }\n    }\n    /**\n     * Structures are always stored inline, they need to be created right\n     * where they're used.  You'll get this assertion failure if you\n     * created it elsewhere.\n     */\n    nested(obj) {\n        if (obj != this.offset()) {\n            throw new TypeError('FlatBuffers: struct must be serialized inline.');\n        }\n    }\n    /**\n     * Should not be creating any other object, string or vector\n     * while an object is being constructed\n     */\n    notNested() {\n        if (this.isNested) {\n            throw new TypeError('FlatBuffers: object serialization must not be nested.');\n        }\n    }\n    /**\n     * Set the current vtable at `voffset` to the current location in the buffer.\n     */\n    slot(voffset) {\n        if (this.vtable !== null)\n            this.vtable[voffset] = this.offset();\n    }\n    /**\n     * @returns Offset relative to the end of the buffer.\n     */\n    offset() {\n        return this.bb.capacity() - this.space;\n    }\n    /**\n     * Doubles the size of the backing ByteBuffer and copies the old data towards\n     * the end of the new buffer (since we build the buffer backwards).\n     *\n     * @param bb The current buffer with the existing data\n     * @returns A new byte buffer with the old data copied\n     * to it. The data is located at the end of the buffer.\n     *\n     * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n     * it a uint8Array we need to suppress the type check:\n     * @suppress {checkTypes}\n     */\n    static growByteBuffer(bb) {\n        const old_buf_size = bb.capacity();\n        // Ensure we don't grow beyond what fits in an int.\n        if (old_buf_size & 0xC0000000) {\n            throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n        }\n        const new_buf_size = old_buf_size << 1;\n        const nbb = ByteBuffer.allocate(new_buf_size);\n        nbb.setPosition(new_buf_size - old_buf_size);\n        nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n        return nbb;\n    }\n    /**\n     * Adds on offset, relative to where it will be written.\n     *\n     * @param offset The offset to add.\n     */\n    addOffset(offset) {\n        this.prep(SIZEOF_INT, 0); // Ensure alignment is already done.\n        this.writeInt32(this.offset() - offset + SIZEOF_INT);\n    }\n    /**\n     * Start encoding a new object in the buffer.  Users will not usually need to\n     * call this directly. The FlatBuffers compiler will generate helper methods\n     * that call this method internally.\n     */\n    startObject(numfields) {\n        this.notNested();\n        if (this.vtable == null) {\n            this.vtable = [];\n        }\n        this.vtable_in_use = numfields;\n        for (let i = 0; i < numfields; i++) {\n            this.vtable[i] = 0; // This will push additional elements as needed\n        }\n        this.isNested = true;\n        this.object_start = this.offset();\n    }\n    /**\n     * Finish off writing the object that is under construction.\n     *\n     * @returns The offset to the object inside `dataBuffer`\n     */\n    endObject() {\n        if (this.vtable == null || !this.isNested) {\n            throw new Error('FlatBuffers: endObject called without startObject');\n        }\n        this.addInt32(0);\n        const vtableloc = this.offset();\n        // Trim trailing zeroes.\n        let i = this.vtable_in_use - 1;\n        // eslint-disable-next-line no-empty\n        for (; i >= 0 && this.vtable[i] == 0; i--) { }\n        const trimmed_size = i + 1;\n        // Write out the current vtable.\n        for (; i >= 0; i--) {\n            // Offset relative to the start of the table.\n            this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n        }\n        const standard_fields = 2; // The fields below:\n        this.addInt16(vtableloc - this.object_start);\n        const len = (trimmed_size + standard_fields) * SIZEOF_SHORT;\n        this.addInt16(len);\n        // Search for an existing vtable that matches the current one.\n        let existing_vtable = 0;\n        const vt1 = this.space;\n        outer_loop: for (i = 0; i < this.vtables.length; i++) {\n            const vt2 = this.bb.capacity() - this.vtables[i];\n            if (len == this.bb.readInt16(vt2)) {\n                for (let j = SIZEOF_SHORT; j < len; j += SIZEOF_SHORT) {\n                    if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n                        continue outer_loop;\n                    }\n                }\n                existing_vtable = this.vtables[i];\n                break;\n            }\n        }\n        if (existing_vtable) {\n            // Found a match:\n            // Remove the current vtable.\n            this.space = this.bb.capacity() - vtableloc;\n            // Point table to existing vtable.\n            this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n        }\n        else {\n            // No match:\n            // Add the location of the current vtable to the list of vtables.\n            this.vtables.push(this.offset());\n            // Point table to current vtable.\n            this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n        }\n        this.isNested = false;\n        return vtableloc;\n    }\n    /**\n     * Finalize a buffer, poiting to the given `root_table`.\n     */\n    finish(root_table, opt_file_identifier, opt_size_prefix) {\n        const size_prefix = opt_size_prefix ? SIZE_PREFIX_LENGTH : 0;\n        if (opt_file_identifier) {\n            const file_identifier = opt_file_identifier;\n            this.prep(this.minalign, SIZEOF_INT +\n                FILE_IDENTIFIER_LENGTH + size_prefix);\n            if (file_identifier.length != FILE_IDENTIFIER_LENGTH) {\n                throw new TypeError('FlatBuffers: file identifier must be length ' +\n                    FILE_IDENTIFIER_LENGTH);\n            }\n            for (let i = FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n                this.writeInt8(file_identifier.charCodeAt(i));\n            }\n        }\n        this.prep(this.minalign, SIZEOF_INT + size_prefix);\n        this.addOffset(root_table);\n        if (size_prefix) {\n            this.addInt32(this.bb.capacity() - this.space);\n        }\n        this.bb.setPosition(this.space);\n    }\n    /**\n     * Finalize a size prefixed buffer, pointing to the given `root_table`.\n     */\n    finishSizePrefixed(root_table, opt_file_identifier) {\n        this.finish(root_table, opt_file_identifier, true);\n    }\n    /**\n     * This checks a required field has been set in a given table that has\n     * just been constructed.\n     */\n    requiredField(table, field) {\n        const table_start = this.bb.capacity() - table;\n        const vtable_start = table_start - this.bb.readInt32(table_start);\n        const ok = field < this.bb.readInt16(vtable_start) &&\n            this.bb.readInt16(vtable_start + field) != 0;\n        // If this fails, the caller will show what field needs to be set.\n        if (!ok) {\n            throw new TypeError('FlatBuffers: field ' + field + ' must be set');\n        }\n    }\n    /**\n     * Start a new array/vector of objects.  Users usually will not call\n     * this directly. The FlatBuffers compiler will create a start/end\n     * method for vector types in generated code.\n     *\n     * @param elem_size The size of each element in the array\n     * @param num_elems The number of elements in the array\n     * @param alignment The alignment of the array\n     */\n    startVector(elem_size, num_elems, alignment) {\n        this.notNested();\n        this.vector_num_elems = num_elems;\n        this.prep(SIZEOF_INT, elem_size * num_elems);\n        this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n    }\n    /**\n     * Finish off the creation of an array and all its elements. The array must be\n     * created with `startVector`.\n     *\n     * @returns The offset at which the newly created array\n     * starts.\n     */\n    endVector() {\n        this.writeInt32(this.vector_num_elems);\n        return this.offset();\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If the string passed has\n     * already been seen, we return the offset of the already written string\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createSharedString(s) {\n        if (!s) {\n            return 0;\n        }\n        if (!this.string_maps) {\n            this.string_maps = new Map();\n        }\n        if (this.string_maps.has(s)) {\n            return this.string_maps.get(s);\n        }\n        const offset = this.createString(s);\n        this.string_maps.set(s, offset);\n        return offset;\n    }\n    /**\n     * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n     * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n     *\n     * @param s The string to encode\n     * @return The offset in the buffer where the encoded string starts\n     */\n    createString(s) {\n        if (s === null || s === undefined) {\n            return 0;\n        }\n        let utf8;\n        if (s instanceof Uint8Array) {\n            utf8 = s;\n        }\n        else {\n            utf8 = this.text_encoder.encode(s);\n        }\n        this.addInt8(0);\n        this.startVector(1, utf8.length, 1);\n        this.bb.setPosition(this.space -= utf8.length);\n        for (let i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n            bytes[offset++] = utf8[i];\n        }\n        return this.endVector();\n    }\n    /**\n     * A helper function to pack an object\n     *\n     * @returns offset of obj\n     */\n    createObjectOffset(obj) {\n        if (obj === null) {\n            return 0;\n        }\n        if (typeof obj === 'string') {\n            return this.createString(obj);\n        }\n        else {\n            return obj.pack(this);\n        }\n    }\n    /**\n     * A helper function to pack a list of object\n     *\n     * @returns list of offsets of each non null object\n     */\n    createObjectOffsetList(list) {\n        const ret = [];\n        for (let i = 0; i < list.length; ++i) {\n            const val = list[i];\n            if (val !== null) {\n                ret.push(this.createObjectOffset(val));\n            }\n            else {\n                throw new TypeError('FlatBuffers: Argument for createObjectOffsetList cannot contain null.');\n            }\n        }\n        return ret;\n    }\n    createStructOffsetList(list, startFunc) {\n        startFunc(this, list.length);\n        this.createObjectOffsetList(list.slice().reverse());\n        return this.endVector();\n    }\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import * as arrow from 'apache-arrow';\nimport { DuckDBBindings } from './bindings_interface';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\n\n/** A thin helper to bind the connection id and talk record batches */\nexport class DuckDBConnection {\n    /** The bindings */\n    protected _bindings: DuckDBBindings;\n    /** The connection handle */\n    protected _conn: number;\n\n    /** Constructor */\n    constructor(bindings: DuckDBBindings, conn: number) {\n        this._bindings = bindings;\n        this._conn = conn;\n    }\n\n    /** Close a connection */\n    public close(): void {\n        this._bindings.disconnect(this._conn);\n    }\n\n    /** Brave souls may use this function to consume the underlying connection id */\n    public useUnsafe<R>(callback: (bindings: DuckDBBindings, conn: number) => R) {\n        return callback(this._bindings, this._conn);\n    }\n\n    /** Run a query */\n    public query<T extends { [key: string]: arrow.DataType } = any>(text: string): arrow.Table<T> {\n        const buffer = this._bindings.runQuery(this._conn, text);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader);\n    }\n\n    /** Send a query */\n    public async send<T extends { [key: string]: arrow.DataType } = any>(\n        text: string,\n    ): Promise<arrow.RecordBatchStreamReader<T>> {\n        let header = this._bindings.startPendingQuery(this._conn, text);\n        while (header == null) {\n            header = await new Promise((resolve, reject) => {\n                try {\n                    resolve(this._bindings.pollPendingQuery(this._conn));\n                } catch (e: any) {\n                    console.log(e);\n                    reject(e);\n                }\n            });\n        }\n        const iter = new ResultStreamIterator(this._bindings, this._conn, header);\n        const reader = arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isSync());\n        console.assert(reader.isStream());\n        return reader;\n    }\n\n    /** Cancel a query that was sent earlier */\n    public cancelSent(): boolean {\n        return this._bindings.cancelPendingQuery(this._conn);\n    }\n\n    /** Get table names */\n    public getTableNames(query: string): string[] {\n        return this._bindings.getTableNames(this._conn, query);\n    }\n\n    /** Create a prepared statement */\n    public prepare<T extends { [key: string]: arrow.DataType } = any>(text: string): PreparedStatement {\n        const stmt = this._bindings.createPrepared(this._conn, text);\n        return new PreparedStatement<T>(this._bindings, this._conn, stmt);\n    }\n\n    /** Create a scalar function */\n    public createScalarFunction(name: string, returns: arrow.DataType, func: (...args: any[]) => void): void {\n        this._bindings.createScalarFunction(this._conn, name, returns, func);\n    }\n\n    /** Insert an arrow table */\n    public insertArrowTable(table: arrow.Table, options: ArrowInsertOptions): void {\n\tconst buffer = arrow.tableToIPC(table, 'stream');\n        this.insertArrowFromIPCStream(buffer, options);\n    }\n    /** Insert an arrow table from an ipc stream */\n    public insertArrowFromIPCStream(buffer: Uint8Array, options: ArrowInsertOptions): void {\n        this._bindings.insertArrowFromIPCStream(this._conn, buffer, options);\n    }\n\n    /** Inesrt csv file from path */\n    public insertCSVFromPath(path: string, options: CSVInsertOptions): void {\n        this._bindings.insertCSVFromPath(this._conn, path, options);\n    }\n    /** Insert json file from path */\n    public insertJSONFromPath(path: string, options: JSONInsertOptions): void {\n        this._bindings.insertJSONFromPath(this._conn, path, options);\n    }\n}\n\n/** A result stream iterator */\nexport class ResultStreamIterator implements Iterable<Uint8Array> {\n    /** First chunk? */\n    _first: boolean;\n    /** Reached end of stream? */\n    _depleted: boolean;\n\n    constructor(protected bindings: DuckDBBindings, protected conn: number, protected header: Uint8Array) {\n        this._first = true;\n        this._depleted = false;\n    }\n\n    next(): IteratorResult<Uint8Array> {\n        if (this._first) {\n            this._first = false;\n            return { done: false, value: this.header };\n        }\n        if (this._depleted) {\n            return { done: true, value: null };\n        }\n        const bufferI8 = this.bindings.fetchQueryResults(this.conn);\n        this._depleted = bufferI8.length == 0;\n        return {\n            done: this._depleted,\n            value: bufferI8,\n        };\n    }\n\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n\n/** A thin helper to bind the prepared statement id*/\nexport class PreparedStatement<T extends { [key: string]: arrow.DataType } = any> {\n    /** The bindings */\n    protected readonly bindings: DuckDBBindings;\n    /** The connection id */\n    protected readonly connectionId: number;\n    /** The statement id */\n    protected readonly statementId: number;\n\n    /** Constructor */\n    constructor(bindings: DuckDBBindings, connectionId: number, statementId: number) {\n        this.bindings = bindings;\n        this.connectionId = connectionId;\n        this.statementId = statementId;\n    }\n\n    /** Close a prepared statement */\n    public close() {\n        this.bindings.closePrepared(this.connectionId, this.statementId);\n    }\n\n    /** Run a prepared statement */\n    public query(...params: any[]): arrow.Table<T> {\n        const buffer = this.bindings.runPrepared(this.connectionId, this.statementId, params);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\n    }\n\n    /** Send a prepared statement */\n    public send(...params: any[]): arrow.RecordBatchStreamReader<T> {\n        const header = this.bindings.sendPrepared(this.connectionId, this.statementId, params);\n        const iter = new ResultStreamIterator(this.bindings, this.connectionId, header);\n        const reader = arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isSync());\n        console.assert(reader.isStream());\n        return reader as arrow.RecordBatchStreamReader;\n    }\n}\n", "import { DuckDBRuntime } from './runtime';\nimport { DuckDBModule } from './duckdb_module';\n\nconst TEXT_ENCODER = new TextEncoder();\nconst TEXT_DECODER = new TextDecoder('utf-8');\n\nfunction storeError(mod: DuckDBModule, response: number, message: string) {\n    const msgBuffer = TEXT_ENCODER.encode(message);\n    const heapAddr = mod._malloc(msgBuffer.byteLength);\n    const heapArray = mod.HEAPU8.subarray(heapAddr, heapAddr + msgBuffer.byteLength);\n    heapArray.set(msgBuffer);\n    mod.HEAPF64[(response >> 3) + 0] = 1;\n    mod.HEAPF64[(response >> 3) + 1] = heapAddr;\n    mod.HEAPF64[(response >> 3) + 2] = heapArray.byteLength;\n}\n\nfunction getTypeSize(ptype: string) {\n    switch (ptype) {\n        case 'UINT8':\n        case 'INT8':\n            return 1;\n        case 'INT32':\n        case 'FLOAT':\n            return 4;\n        case 'INT64':\n        case 'UINT64':\n        case 'DOUBLE':\n        case 'VARCHAR':\n            return 8;\n        default:\n            return 0;\n    }\n}\n\nfunction ptrToArray(mod: DuckDBModule, ptr: number, ptype: string, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * getTypeSize(ptype));\n    switch (ptype) {\n        case 'UINT8':\n            return new Uint8Array(heap.buffer, heap.byteOffset, n);\n        case 'INT8':\n            return new Int8Array(heap.buffer, heap.byteOffset, n);\n        case 'INT32':\n            return new Int32Array(heap.buffer, heap.byteOffset, n);\n        case 'FLOAT':\n            return new Float32Array(heap.buffer, heap.byteOffset, n);\n        case 'DOUBLE':\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\n        case 'VARCHAR':\n            return new Float64Array(heap.buffer, heap.byteOffset, n);\n        default:\n            return new Array<string | undefined | null>(0); // cough\n    }\n}\n\nfunction ptrToUint8Array(mod: DuckDBModule, ptr: number, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n);\n    return new Uint8Array(heap.buffer, heap.byteOffset, n);\n}\nfunction ptrToFloat64Array(mod: DuckDBModule, ptr: number, n: number) {\n    const heap = mod.HEAPU8.subarray(ptr, ptr + n * 8);\n    return new Float64Array(heap.buffer, heap.byteOffset, n);\n}\n\ninterface ArgumentTypeDescription {\n    name?: string;\n    sqlType: string;\n    physicalType: string;\n    validityBuffer?: number;\n    dataBuffer?: number;\n    lengthBuffer?: number;\n    children?: ArgumentTypeDescription[];\n}\n\ninterface ReturnTypeDescription {\n    sqlType: string;\n    physicalType: string;\n}\n\ninterface SchemaDescription {\n    rows: number;\n    args: ArgumentTypeDescription[];\n    ret: ReturnTypeDescription;\n}\n\ntype ArgumentResolver = (row: number) => any | null;\n\n// this is called from webdb.cc/CallScalarUDFFunction, changes here need to be matched there\nexport function callScalarUDF(\n    runtime: DuckDBRuntime,\n    mod: DuckDBModule,\n    response: number,\n    funcId: number,\n    descPtr: number,\n    descSize: number,\n    ptrsPtr: number,\n    ptrsSize: number,\n) {\n    try {\n        const udf = runtime._udfFunctions.get(funcId);\n        if (!udf) {\n            storeError(mod, response, 'Unknown UDF with id: ' + funcId);\n            return;\n        }\n        const rawDesc = TEXT_DECODER.decode(mod.HEAPU8.subarray(descPtr, descPtr + descSize));\n        const desc = JSON.parse(rawDesc) as SchemaDescription;\n        const ptrs = ptrToFloat64Array(mod, ptrsPtr, ptrsSize / 8);\n\n        const buildResolver = (arg: ArgumentTypeDescription): ArgumentResolver => {\n            let validity: Uint8Array | null = null;\n            if (arg.validityBuffer !== undefined) {\n                validity = ptrToUint8Array(mod, ptrs[arg.validityBuffer] as number, desc.rows);\n            }\n            switch (arg.physicalType) {\n                case 'VARCHAR': {\n                    if (arg.dataBuffer === null || arg.dataBuffer === undefined) {\n                        throw new Error('malformed data view, expected data buffer for VARCHAR argument');\n                    }\n                    if (arg.lengthBuffer === null || arg.lengthBuffer === undefined) {\n                        throw new Error('malformed data view, expected data length buffer for VARCHAR argument');\n                    }\n                    const raw = ptrToArray(mod, ptrs[arg.dataBuffer] as number, arg.physicalType, desc.rows);\n                    const strings: (string | null)[] = [];\n                    const stringLengths = ptrToFloat64Array(mod, ptrs[arg.lengthBuffer] as number, desc.rows);\n                    for (let j = 0; j < desc.rows; ++j) {\n                        if (validity != null && !validity[j]) {\n                            strings.push(null);\n                            continue;\n                        }\n                        const subarray = mod.HEAPU8.subarray(\n                            raw[j] as number,\n                            (raw[j] as number) + (stringLengths[j] as number),\n                        );\n                        const str = TEXT_DECODER.decode(subarray);\n                        strings.push(str);\n                    }\n                    return (row: number) => strings[row];\n                }\n                case 'STRUCT': {\n                    const tmp: any = {};\n                    const children: ArgumentResolver[] = [];\n                    for (let j = 0; j < (arg.children?.length || 0); ++j) {\n                        const attr = arg.children![j];\n                        const child = buildResolver(attr);\n                        children.push((row: number) => {\n                            tmp[attr.name!] = child(row);\n                        });\n                    }\n                    if (validity != null) {\n                        return (row: number) => {\n                            if (!validity![row]) {\n                                return null;\n                            }\n                            for (const resolver of children) {\n                                resolver(row);\n                            }\n                            return tmp;\n                        };\n                    } else {\n                        return (row: number) => {\n                            for (const resolver of children) {\n                                resolver(row);\n                            }\n                            return tmp;\n                        };\n                    }\n                }\n                default: {\n                    if (arg.dataBuffer === undefined) {\n                        throw new Error(\n                            'malformed data view, expected data buffer for argument of type: ' + arg.physicalType,\n                        );\n                    }\n                    const data = ptrToArray(mod, ptrs[arg.dataBuffer] as number, arg.physicalType, desc.rows);\n                    if (validity != null) {\n                        return (row: number) => (!validity![row] ? null : data[row]);\n                    } else {\n                        return (row: number) => data[row];\n                    }\n                }\n            }\n        };\n\n        // Translate argument data\n        const argResolvers = [];\n        for (let i = 0; i < desc.args.length; ++i) {\n            argResolvers.push(buildResolver(desc.args[i]));\n        }\n\n        // Prepare result buffers\n        // TODO: we probably do not want to recreate those every time\n        const resultDataLen = desc.rows * getTypeSize(desc.ret.physicalType);\n        const resultDataPtr = mod._malloc(resultDataLen);\n        const resultData = ptrToArray(mod, resultDataPtr, desc.ret.physicalType, desc.rows);\n        const resultValidityPtr = mod._malloc(desc.rows);\n        const resultValidity = ptrToUint8Array(mod, resultValidityPtr, desc.rows);\n        if (resultData.length == 0 || resultValidity.length == 0) {\n            storeError(mod, response, \"Can't create physical arrays for result\");\n            return;\n        }\n        let rawResultData = resultData;\n        if (desc.ret.physicalType == 'VARCHAR') {\n            rawResultData = new Array<string | undefined | null>(desc.rows);\n        }\n\n        // Call the function\n        const args = [];\n        for (let i = 0; i < desc.args.length; ++i) {\n            args.push(null);\n        }\n        for (let i = 0; i < desc.rows; ++i) {\n            for (let j = 0; j < desc.args.length; ++j) {\n                args[j] = argResolvers[j](i);\n            }\n            const res = udf.func(...args);\n            rawResultData[i] = res;\n            resultValidity[i] = res === undefined || res === null ? 0 : 1;\n        }\n\n        // Encode return values\n        let resultLengthsPtr = 0;\n        switch (desc.ret.physicalType) {\n            case 'VARCHAR': {\n                // Allocate result buffers\n                const resultDataUTF8 = new Array<Uint8Array>(0); // cough\n                resultLengthsPtr = mod._malloc(desc.rows * getTypeSize('DOUBLE'));\n                const resultLengths = ptrToFloat64Array(mod, resultLengthsPtr, desc.rows);\n\n                // TODO: We need two loops to figure out the total length but maybe we can avoid the double allocation\n                let totalLength = 0;\n                for (let row = 0; row < desc.rows; ++row) {\n                    const utf8 = TEXT_ENCODER.encode((rawResultData as (string | null | undefined)[])[row] || '');\n                    resultDataUTF8.push(utf8);\n                    resultLengths[row] = utf8.length;\n                    totalLength += utf8.length;\n                }\n\n                // We malloc a buffer for the strings to live in for now\n                const resultStringPtr = mod._malloc(totalLength);\n                const resultStringBuf = mod.HEAPU8.subarray(resultStringPtr, resultStringPtr + totalLength);\n\n                // Now copy all the strings to the new buffer back to back\n                let writerOffset = 0;\n                for (let row = 0; row < desc.rows; ++row) {\n                    resultData[row] = writerOffset;\n                    const resultUTF8 = resultDataUTF8[row];\n                    const writer = resultStringBuf.subarray(writerOffset, writerOffset + resultUTF8.length);\n                    writer.set(resultUTF8);\n                    writerOffset += resultUTF8.length;\n                }\n            }\n        }\n\n        // Need to store three pointers, data, validity and length\n        const retLen = 3 * 8;\n        const retPtr = mod._malloc(retLen);\n        const retBuffer = ptrToFloat64Array(mod, retPtr, 3);\n        retBuffer[0] = resultDataPtr;\n        retBuffer[1] = resultValidityPtr;\n        retBuffer[2] = resultLengthsPtr;\n\n        // Pack response\n        mod.HEAPF64[(response >> 3) + 0] = 0;\n        mod.HEAPF64[(response >> 3) + 1] = retPtr;\n        mod.HEAPF64[(response >> 3) + 2] = 0;\n    } catch (e: any) {\n        storeError(mod, response, e.toString());\n    }\n}\n", "import { DuckDBModule } from './duckdb_module';\nimport { UDFFunction } from './udf_function';\nimport * as udf_rt from './udf_runtime';\n\n/** Wrapper for TextDecoder to support shared array buffers */\nfunction TextDecoderWrapper(): (input?: BufferSource) => string {\n    const decoder = new TextDecoder();\n    return (data: any) => {\n        if (typeof SharedArrayBuffer !== 'undefined' && data.buffer instanceof SharedArrayBuffer) {\n            data = new Uint8Array(data);\n        }\n        return decoder.decode(data);\n    };\n}\n/** Helper to decode text */\nexport const decodeText = TextDecoderWrapper();\n\n/** Copy a buffer */\nexport function failWith(mod: DuckDBModule, msg: string): void {\n    console.error(`FAIL WITH: ${msg}`);\n    mod.ccall('duckdb_web_fail_with', null, ['string'], [msg]);\n}\n\n/** Copy a buffer */\nexport function copyBuffer(mod: DuckDBModule, begin: number, length: number): Uint8Array {\n    const buffer = mod.HEAPU8.subarray(begin, begin + length);\n    const copy = new Uint8Array(new ArrayBuffer(buffer.byteLength));\n    copy.set(buffer);\n    return copy;\n}\n\n/** Decode a string */\nexport function readString(mod: DuckDBModule, begin: number, length: number): string {\n    return decodeText(mod.HEAPU8.subarray(begin, begin + length));\n}\n\n/** The data protocol */\nexport enum DuckDBDataProtocol {\n    BUFFER = 0,\n    NODE_FS = 1,\n    BROWSER_FILEREADER = 2,\n    BROWSER_FSACCESS = 3,\n    HTTP = 4,\n    S3 = 5,\n}\n\n/** File flags for opening files*/\nexport enum FileFlags {\n    //! Open file with read access\n    FILE_FLAGS_READ = 1 << 0,\n    //! Open file with write access\n    FILE_FLAGS_WRITE = 1 << 1,\n    //! Use direct IO when reading/writing to the file\n    FILE_FLAGS_DIRECT_IO = 1 << 2,\n    //! Create file if not exists, can only be used together with WRITE\n    FILE_FLAGS_FILE_CREATE = 1 << 3,\n    //! Always create a new file. If a file exists, the file is truncated. Cannot be used together with CREATE.\n    FILE_FLAGS_FILE_CREATE_NEW = 1 << 4,\n    //! Open file in append mode\n    FILE_FLAGS_APPEND = 1 << 5,\n}\n\n/** Configuration for the AWS S3 Filesystem */\nexport interface S3Config {\n    region?: string;\n    endpoint?: string;\n    accessKeyId?: string;\n    secretAccessKey?: string;\n    sessionToken?: string;\n}\n\n/** An info for a file registered with DuckDB */\nexport interface DuckDBFileInfo {\n    cacheEpoch: number;\n    fileId: number;\n    fileName: string;\n    dataProtocol: DuckDBDataProtocol;\n    dataUrl: string | null;\n    allowFullHttpReads?: boolean;\n    s3Config?: S3Config;\n}\n\n/** Global info for all files registered with DuckDB */\nexport interface DuckDBGlobalFileInfo {\n    cacheEpoch: number;\n    allowFullHttpReads?: boolean;\n    s3Config?: S3Config;\n}\n\n/** Call a function with packed response buffer */\nexport function callSRet(\n    mod: DuckDBModule,\n    funcName: string,\n    argTypes: Array<Emscripten.JSType>,\n    args: Array<any>,\n): [number, number, number] {\n    const stackPointer = mod.stackSave();\n\n    // Allocate the packed response buffer\n    const response = mod.stackAlloc(3 * 8);\n    argTypes.unshift('number');\n    args.unshift(response);\n\n    // Do the call\n    mod.ccall(funcName, null, argTypes, args);\n\n    // Read the response\n    const status = mod.HEAPF64[(response >> 3) + 0];\n    const data = mod.HEAPF64[(response >> 3) + 1];\n    const dataSize = mod.HEAPF64[(response >> 3) + 2];\n\n    // Restore the stack\n    mod.stackRestore(stackPointer);\n    return [status, data, dataSize];\n}\n\n/** Drop response buffers */\nexport function dropResponseBuffers(mod: DuckDBModule): void {\n    mod.ccall('duckdb_web_clear_response', null, [], []);\n}\n\n/** The duckdb runtime */\nexport interface DuckDBRuntime {\n    _files?: Map<string, any>;\n    _udfFunctions: Map<number, UDFFunction>;\n\n    // Test a platform feature\n    testPlatformFeature(mod: DuckDBModule, feature: number): boolean;\n\n    // File APIs with dedicated file identifier\n    getDefaultDataProtocol(mod: DuckDBModule): number;\n    openFile(mod: DuckDBModule, fileId: number, flags: FileFlags): void;\n    syncFile(mod: DuckDBModule, fileId: number): void;\n    closeFile(mod: DuckDBModule, fileId: number): void;\n    getLastFileModificationTime(mod: DuckDBModule, fileId: number): number;\n    truncateFile(mod: DuckDBModule, fileId: number, newSize: number): void;\n    readFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\n    writeFile(mod: DuckDBModule, fileId: number, buffer: number, bytes: number, location: number): number;\n\n    // File APIs with path parameter\n    removeDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    checkDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    createDirectory(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    listDirectoryEntries(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    glob(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n    moveFile(mod: DuckDBModule, fromPtr: number, fromLen: number, toPtr: number, toLen: number): void;\n    checkFile(mod: DuckDBModule, pathPtr: number, pathLen: number): boolean;\n    removeFile(mod: DuckDBModule, pathPtr: number, pathLen: number): void;\n\n    // Call a scalar UDF function\n    callScalarUDF(\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void;\n}\n\nexport const DEFAULT_RUNTIME: DuckDBRuntime = {\n    _udfFunctions: new Map(),\n\n    testPlatformFeature: (_mod: DuckDBModule, _feature: number): boolean => false,\n    getDefaultDataProtocol: (_mod: DuckDBModule): number => DuckDBDataProtocol.BUFFER,\n    openFile: (_mod: DuckDBModule, _fileId: number, flags: FileFlags): void => {},\n    syncFile: (_mod: DuckDBModule, _fileId: number): void => {},\n    closeFile: (_mod: DuckDBModule, _fileId: number): void => {},\n    getLastFileModificationTime: (_mod: DuckDBModule, _fileId: number): number => {\n        return 0;\n    },\n    truncateFile: (_mod: DuckDBModule, _fileId: number, _newSize: number): void => {},\n    readFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\n        return 0;\n    },\n    writeFile: (_mod: DuckDBModule, _fileId: number, _buffer: number, _bytes: number, _location: number): number => {\n        return 0;\n    },\n\n    removeDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    checkDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    createDirectory: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    listDirectoryEntries: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    glob: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    moveFile: (_mod: DuckDBModule, _fromPtr: number, _fromLen: number, _toPtr: number, _toLen: number): void => {},\n    checkFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): boolean => {\n        return false;\n    },\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number): void => {},\n    callScalarUDF: (\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void => {\n        udf_rt.callScalarUDF(DEFAULT_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\n    },\n};\n", "export interface FileBlockStatistics {\n    /** The file reads cold */\n    file_reads_cold: number;\n    /** The file reads aheads */\n    file_reads_ahead: number;\n    /** The file reads cached */\n    file_reads_cached: number;\n    /** The file writes */\n    file_writes: number;\n    /** The page accesses */\n    page_accesses: number;\n    /** The page loads */\n    page_loads: number;\n}\n\n/** The file block statistics */\nexport class FileStatistics {\n    /** The cold file reads */\n    public totalFileReadsCold: number;\n    /** The file readaheads */\n    public totalFileReadsAhead: number;\n    /** The cached file reads */\n    public totalFileReadsCached: number;\n    /** The file writes */\n    public totalFileWrites: number;\n    /** The page accesses */\n    public totalPageAccesses: number;\n    /** The page loads */\n    public totalPageLoads: number;\n    /** The blocks */\n    public blockSize: number;\n    /** The blocks */\n    public blockStats: Uint8Array;\n\n    constructor(u8array: Uint8Array) {\n        const f64 = new Float64Array(u8array.buffer, u8array.byteOffset, u8array.byteLength / 8);\n        const blocks = new Uint8Array(new ArrayBuffer(u8array.byteLength));\n        blocks.set(u8array.subarray(7 * 8));\n        this.totalFileReadsCold = f64[0];\n        this.totalFileReadsAhead = f64[1];\n        this.totalFileReadsCached = f64[2];\n        this.totalFileWrites = f64[3];\n        this.totalPageAccesses = f64[4];\n        this.totalPageLoads = f64[5];\n        this.blockSize = f64[6];\n        this.blockStats = blocks;\n    }\n\n    /** The block stats */\n    public getBlockStats(index: number, out?: FileBlockStatistics): FileBlockStatistics {\n        out = out || {\n            file_reads_cold: 0,\n            file_reads_ahead: 0,\n            file_reads_cached: 0,\n            file_writes: 0,\n            page_accesses: 0,\n            page_loads: 0,\n        };\n        out.file_writes = this.blockStats[index * 3 + 0] & 0b1111;\n        out.file_reads_cold = this.blockStats[index * 3 + 0] >> 4;\n        out.file_reads_ahead = this.blockStats[index * 3 + 1] & 0b1111;\n        out.file_reads_cached = this.blockStats[index * 3 + 1] >> 4;\n        out.page_accesses = this.blockStats[index * 3 + 1] & 0b1111;\n        out.page_loads = this.blockStats[index * 3 + 1] >> 4;\n        return out;\n    }\n}\n", "import * as arrow from 'apache-arrow';\n\nexport interface SQLType {\n    /// The sql type\n    sqlType: string;\n    /// Is nullable?\n    nullable?: boolean;\n    /// Decimal precision\n    precision?: number;\n    /// Decimal scaling\n    scale?: number;\n    /// Timezone\n    timezone?: string;\n    /// Byte width (FixedSizeBinary)\n    byteWidth?: number;\n    /// Key type\n    keyType?: SQLType;\n    /// Value type\n    valueType?: SQLType;\n    /// Fields\n    fields?: SQLField[];\n}\n\nexport function arrowToSQLType(type: arrow.DataType): SQLType {\n    switch (type.typeId) {\n        case arrow.Type.Binary:\n            return { sqlType: 'binary' };\n        case arrow.Type.Bool:\n            return { sqlType: 'bool' };\n        case arrow.Type.Date:\n            return { sqlType: 'date' };\n        case arrow.Type.DateDay:\n            return { sqlType: 'date32[d]' };\n        case arrow.Type.DateMillisecond:\n            return { sqlType: 'date64[ms]' };\n        case arrow.Type.Decimal: {\n            const dec = type as arrow.Decimal;\n            return { sqlType: 'decimal', precision: dec.precision, scale: dec.scale };\n        }\n        case arrow.Type.Float:\n            return { sqlType: 'float' };\n        case arrow.Type.Float16:\n            return { sqlType: 'float16' };\n        case arrow.Type.Float32:\n            return { sqlType: 'float32' };\n        case arrow.Type.Float64:\n            return { sqlType: 'float64' };\n        case arrow.Type.Int:\n            return { sqlType: 'int32' };\n        case arrow.Type.Int16:\n            return { sqlType: 'int16' };\n        case arrow.Type.Int32:\n            return { sqlType: 'int32' };\n        case arrow.Type.Int64:\n            return { sqlType: 'int64' };\n        case arrow.Type.Uint16:\n            return { sqlType: 'uint16' };\n        case arrow.Type.Uint32:\n            return { sqlType: 'uint32' };\n        case arrow.Type.Uint64:\n            return { sqlType: 'uint64' };\n        case arrow.Type.Uint8:\n            return { sqlType: 'uint8' };\n        case arrow.Type.IntervalDayTime:\n            return { sqlType: 'interval[dt]' };\n        case arrow.Type.IntervalYearMonth:\n            return { sqlType: 'interval[m]' };\n        case arrow.Type.List: {\n            const list = type as arrow.List;\n            return {\n                sqlType: 'list',\n                valueType: arrowToSQLType(list.valueType),\n            };\n        }\n        case arrow.Type.FixedSizeBinary: {\n            const bin = type as arrow.FixedSizeBinary;\n            return { sqlType: 'fixedsizebinary', byteWidth: bin.byteWidth };\n        }\n        case arrow.Type.Null:\n            return { sqlType: 'null' };\n        case arrow.Type.Utf8:\n            return { sqlType: 'utf8' };\n        case arrow.Type.Struct: {\n            const struct_ = type as arrow.Struct;\n            return {\n                sqlType: 'struct',\n                fields: struct_.children.map(c => arrowToSQLField(c.name, c.type)),\n            };\n        }\n        case arrow.Type.Map: {\n            const map_ = type as arrow.Map_;\n            return {\n                sqlType: 'map',\n                keyType: arrowToSQLType(map_.keyType),\n                valueType: arrowToSQLType(map_.valueType),\n            };\n        }\n        case arrow.Type.Time:\n            return { sqlType: 'time[s]' };\n        case arrow.Type.TimeMicrosecond:\n            return { sqlType: 'time[us]' };\n        case arrow.Type.TimeMillisecond:\n            return { sqlType: 'time[ms]' };\n        case arrow.Type.TimeNanosecond:\n            return { sqlType: 'time[ns]' };\n        case arrow.Type.TimeSecond:\n            return { sqlType: 'time[s]' };\n        case arrow.Type.Timestamp: {\n            const ts = type as arrow.Timestamp;\n            return { sqlType: 'timestamp', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampSecond: {\n            const ts = type as arrow.TimestampSecond;\n            return { sqlType: 'timestamp[s]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampMicrosecond: {\n            const ts = type as arrow.TimestampMicrosecond;\n            return { sqlType: 'timestamp[us]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampNanosecond: {\n            const ts = type as arrow.TimestampNanosecond;\n            return { sqlType: 'timestamp[ns]', timezone: ts.timezone || undefined };\n        }\n        case arrow.Type.TimestampMillisecond: {\n            const ts = type as arrow.TimestampMillisecond;\n            return { sqlType: 'timestamp[ms]', timezone: ts.timezone || undefined };\n        }\n    }\n    throw new Error(`unsupported arrow type: ${type.toString()}`);\n}\n\nexport type SQLField = SQLType & { name: string };\n\nexport function arrowToSQLField(name: string, type: arrow.DataType): SQLField {\n    const t = arrowToSQLType(type) as SQLField;\n    t.name = name;\n    return t;\n}\n", "import { DuckDBModule, PThread } from './duckdb_module';\nimport { DuckDBConfig } from './config';\nimport { Logger } from '../log';\nimport { InstantiationProgress } from './progress';\nimport { DuckDBBindings } from './bindings_interface';\nimport { DuckDBConnection } from './connection';\nimport { StatusCode } from '../status';\nimport { dropResponseBuffers, DuckDBRuntime, readString, callSRet, copyBuffer, DuckDBDataProtocol } from './runtime';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from './insert_options';\nimport { ScriptTokens } from './tokens';\nimport { FileStatistics } from './file_stats';\nimport { arrowToSQLField, arrowToSQLType } from '../json_typedef';\nimport { WebFile } from './web_file';\nimport { UDFFunction, UDFFunctionDeclaration } from './udf_function';\nimport * as arrow from 'apache-arrow';\n\nconst TEXT_ENCODER = new TextEncoder();\n\ndeclare global {\n    // eslint-disable-next-line no-var\n    var DUCKDB_RUNTIME: any;\n}\n\n/** A DuckDB Feature */\nexport enum DuckDBFeature {\n    WASM_EXCEPTIONS = 1 << 0,\n    WASM_THREADS = 1 << 1,\n    WASM_SIMD = 1 << 2,\n    WASM_BULK_MEMORY = 1 << 3,\n    EMIT_BIGINT = 1 << 4,\n}\n\n/** The proxy for either the browser- order node-based DuckDB API */\nexport abstract class DuckDBBindingsBase implements DuckDBBindings {\n    /** The logger */\n    protected readonly _logger: Logger;\n    /** Backend-dependent native-glue code for DuckDB */\n    protected readonly _runtime: DuckDBRuntime;\n    /** The instance */\n    protected _instance: DuckDBModule | null = null;\n    /** The loading promise */\n    protected _initPromise: Promise<void> | null = null;\n    /** The resolver for the open promise (called by onRuntimeInitialized) */\n    protected _initPromiseResolver: () => void = () => {};\n    /** The next UDF id */\n    protected _nextUDFId: number;\n\n    constructor(logger: Logger, runtime: DuckDBRuntime) {\n        this._logger = logger;\n        this._runtime = runtime;\n        this._nextUDFId = 1;\n    }\n\n    /** Get the logger */\n    public get logger(): Logger {\n        return this._logger;\n    }\n    /** Get the instance */\n    public get mod(): DuckDBModule {\n        return this._instance!;\n    }\n    /** Get the instance */\n    public get pthread(): PThread | null {\n        return this.mod.PThread || null;\n    }\n\n    /** Instantiate the module */\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\n    /** Instantiate the module */\n    protected onInstantiationProgress: ((p: InstantiationProgress) => void)[] = [];\n    /** Instantiate the database */\n    public async instantiate(onProgress: (progress: InstantiationProgress) => void = _ => {}): Promise<this> {\n        // Already opened?\n        if (this._instance != null) {\n            return this;\n        }\n        // Open in progress?\n        if (this._initPromise != null) {\n            this.onInstantiationProgress.push(onProgress);\n            await this._initPromise;\n        }\n        // Create a promise that we can await\n        this._initPromise = new Promise(resolve => {\n            this._initPromiseResolver = resolve;\n        });\n        // Register progress handler\n        this.onInstantiationProgress = [onProgress];\n        // Initialize duckdb\n        this._instance = await this.instantiateImpl({\n            print: console.log.bind(console),\n            printErr: console.log.bind(console),\n            onRuntimeInitialized: this._initPromiseResolver,\n        });\n        // Wait for onRuntimeInitialized\n        await this._initPromise;\n        this._initPromise = null;\n        // Remove own progress callback\n        this.onInstantiationProgress = this.onInstantiationProgress.filter(x => x != onProgress);\n        return this;\n    }\n    /** Open a database with a config */\n    public open(config: DuckDBConfig): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_open', ['string'], [JSON.stringify(config)]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Reset the database */\n    public reset(): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_reset', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Get the version */\n    public getVersion(): string {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_version', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const version = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return version;\n    }\n    /** Get the feature flags */\n    public getFeatureFlags(): number {\n        return this.mod.ccall('duckdb_web_get_feature_flags', 'number', [], []);\n    }\n\n    /** Tokenize a script */\n    public tokenize(text: string): ScriptTokens {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_tokenize', ['string'], [text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return JSON.parse(res) as ScriptTokens;\n    }\n\n    /** Connect to database */\n    public connect(): DuckDBConnection {\n        const conn = this.mod.ccall('duckdb_web_connect', 'number', [], []);\n        return new DuckDBConnection(this, conn);\n    }\n    /** Disconnect from database */\n    public disconnect(conn: number): void {\n        this.mod.ccall('duckdb_web_disconnect', null, ['number'], [conn]);\n        if (this.pthread) {\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\n                worker.postMessage({\n                    cmd: 'dropUDFFunctions',\n                    connectionId: conn,\n                });\n            }\n        }\n    }\n\n    /** Send a query and return the full result */\n    public runQuery(conn: number, text: string): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_run', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /**\n     *  Start a pending query asynchronously.\n     *  This method returns either the arrow ipc schema or null.\n     *  On null, the query has to be executed using `pollPendingQuery` until that returns != null.\n     *  Results can then be fetched using `fetchQueryResults`\n     */\n    public startPendingQuery(conn: number, text: string): Uint8Array | null {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_pending_query_start', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        if (d == 0) {\n            return null;\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Poll a pending query */\n    public pollPendingQuery(conn: number): Uint8Array | null {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_pending_query_poll', ['number'], [conn]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        if (d == 0) {\n            return null;\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Cancel a pending query */\n    public cancelPendingQuery(conn: number): boolean {\n        return this.mod.ccall('duckdb_web_pending_query_cancel', 'boolean', ['number'], [conn]);\n    }\n    /** Fetch query results */\n    public fetchQueryResults(conn: number): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_query_fetch_results', ['number'], [conn]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n    /** Get table names */\n    public getTableNames(conn: number, text: string): string[] {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_get_tablenames', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return JSON.parse(res) as string[];\n    }\n\n    /** Create a scalar function */\n    public createScalarFunction(\n        conn: number,\n        name: string,\n        returns: arrow.DataType,\n        func: (...args: any[]) => void,\n    ): void {\n        const decl: UDFFunctionDeclaration = {\n            functionId: this._nextUDFId,\n            name: name,\n            returnType: arrowToSQLType(returns),\n        };\n        const def: UDFFunction = {\n            functionId: decl.functionId,\n            connectionId: conn,\n            name: name,\n            returnType: returns,\n            func,\n        };\n        this._nextUDFId += 1;\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_udf_scalar_create',\n            ['number', 'string'],\n            [conn, JSON.stringify(decl)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        globalThis.DUCKDB_RUNTIME._udfFunctions = (globalThis.DUCKDB_RUNTIME._udfFunctions || new Map()).set(\n            def.functionId,\n            def,\n        );\n        if (this.pthread) {\n            for (const worker of [...this.pthread.runningWorkers, ...this.pthread.unusedWorkers]) {\n                worker.postMessage({\n                    cmd: 'registerUDFFunction',\n                    udf: def,\n                });\n            }\n        }\n    }\n\n    /** Prepare a statement and return its identifier */\n    public createPrepared(conn: number, text: string): number {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_create', ['number', 'string'], [conn, text]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        return d;\n    }\n\n    /** Close a prepared statement */\n    public closePrepared(conn: number, statement: number): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_prepared_close', ['number', 'number'], [conn, statement]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n\n    /** Execute a prepared statement and return the full result */\n    public runPrepared(conn: number, statement: number, params: any[]): Uint8Array {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_prepared_run',\n            ['number', 'number', 'string'],\n            [conn, statement, JSON.stringify(params)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n\n    /** Execute a prepared statement and stream the result */\n    public sendPrepared(conn: number, statement: number, params: any[]): Uint8Array {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_prepared_send',\n            ['number', 'number', 'string'],\n            [conn, statement, JSON.stringify(params)],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const res = copyBuffer(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        return res;\n    }\n\n    /** Insert record batches from an arrow ipc stream */\n    public insertArrowFromIPCStream(conn: number, buffer: Uint8Array, options?: ArrowInsertOptions): void {\n        if (buffer.length == 0) return;\n        // Store buffer\n        const bufferPtr = this.mod._malloc(buffer.length);\n        const bufferOfs = this.mod.HEAPU8.subarray(bufferPtr, bufferPtr + buffer.length);\n        bufferOfs.set(buffer);\n        const optJSON = options ? JSON.stringify(options) : '';\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_arrow_from_ipc_stream',\n            ['number', 'number', 'number', 'string'],\n            [conn, bufferPtr, buffer.length, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n\n    /** Insert csv from path */\n    public insertCSVFromPath(conn: number, path: string, options: CSVInsertOptions): void {\n        // Stringify options\n        if (options.columns !== undefined) {\n            options.columnsFlat = [];\n            for (const k in options.columns) {\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\n            }\n        }\n        const opt = { ...options } as any;\n        opt.columns = opt.columnsFlat;\n        delete opt.columnsFlat;\n        const optJSON = JSON.stringify(opt);\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_csv_from_path',\n            ['number', 'string', 'string'],\n            [conn, path, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Insert json from path */\n    public insertJSONFromPath(conn: number, path: string, options: JSONInsertOptions): void {\n        // Stringify options\n        if (options.columns !== undefined) {\n            options.columnsFlat = [];\n            for (const k in options.columns) {\n                options.columnsFlat.push(arrowToSQLField(k, options.columns[k]));\n            }\n        }\n        const opt = { ...options } as any;\n        opt.columns = opt.columnsFlat;\n        delete opt.columnsFlat;\n        const optJSON = JSON.stringify(opt);\n\n        // Call wasm function\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_insert_json_from_path',\n            ['number', 'string', 'string'],\n            [conn, path, optJSON],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Glob file infos */\n    public globFiles(path: string): WebFile[] {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_glob_file_infos', ['string'], [path]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const infoStr = readString(this.mod, d, n);\n        dropResponseBuffers(this.mod);\n        const info = JSON.parse(infoStr) as WebFile[];\n        if (info == null) {\n            return [];\n        }\n        return info;\n    }\n    /** Register a file object URL */\n    public registerFileURL(name: string, url: string, proto: DuckDBDataProtocol, directIO = false): void {\n        if (url === undefined) {\n            url = name;\n        }\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_url',\n            ['string', 'string'],\n            [name, url, proto, directIO],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Register file text */\n    public registerFileText(name: string, text: string): void {\n        const buffer = TEXT_ENCODER.encode(text);\n        this.registerFileBuffer(name, buffer);\n    }\n    /** Register a file buffer */\n    public registerFileBuffer(name: string, buffer: Uint8Array): void {\n        const ptr = this.mod._malloc(buffer.length);\n        const dst = this.mod.HEAPU8.subarray(ptr, ptr + buffer.length);\n        dst.set(buffer);\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_buffer',\n            ['string', 'number', 'number'],\n            [name, ptr, buffer.length],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Register a file object URL */\n    public registerFileHandle<HandleType>(\n        name: string,\n        handle: HandleType,\n        protocol: DuckDBDataProtocol,\n        directIO: boolean,\n    ): void {\n        const [s, d, n] = callSRet(\n            this.mod,\n            'duckdb_web_fs_register_file_url',\n            ['string', 'string', 'number', 'boolean'],\n            [name, name, protocol, directIO],\n        );\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n        globalThis.DUCKDB_RUNTIME._files = (globalThis.DUCKDB_RUNTIME._files || new Map()).set(name, handle);\n        if (this.pthread) {\n            for (const worker of this.pthread.runningWorkers) {\n                worker.postMessage({\n                    cmd: 'registerFileHandle',\n                    fileName: name,\n                    fileHandle: handle,\n                });\n            }\n            for (const worker of this.pthread.unusedWorkers) {\n                worker.postMessage({\n                    cmd: 'dropFileHandle',\n                    fileName: name,\n                });\n            }\n        }\n    }\n    /** Drop file */\n    public dropFile(name: string): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_file', ['string'], [name]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Drop files */\n    public dropFiles(): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_fs_drop_files', [], []);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Flush all files */\n    public flushFiles(): void {\n        this.mod.ccall('duckdb_web_flush_files', null, [], []);\n    }\n    /** Write a file to a path */\n    public copyFileToPath(name: string, path: string): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_path', ['string', 'string'], [name, path]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        dropResponseBuffers(this.mod);\n    }\n    /** Write a file to a buffer */\n    public copyFileToBuffer(name: string): Uint8Array {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_copy_file_to_buffer', ['string'], [name]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        const buffer = this.mod.HEAPU8.subarray(d, d + n);\n        const copy = new Uint8Array(buffer.length);\n        copy.set(buffer);\n        dropResponseBuffers(this.mod);\n        return copy;\n    }\n\n    /** Enable tracking of file statistics */\n    public collectFileStatistics(file: string, enable: boolean): void {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_collect_file_stats', ['string', 'boolean'], [file, enable]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n    }\n    /** Export file statistics */\n    public exportFileStatistics(file: string): FileStatistics {\n        const [s, d, n] = callSRet(this.mod, 'duckdb_web_export_file_stats', ['string'], [file]);\n        if (s !== StatusCode.SUCCESS) {\n            throw new Error(readString(this.mod, d, n));\n        }\n        return new FileStatistics(this.mod.HEAPU8.subarray(d, d + n));\n    }\n}\n", "export enum LogLevel {\n    NONE = 0,\n    DEBUG = 1,\n    INFO = 2,\n    WARNING = 3,\n    ERROR = 4,\n}\n\nexport enum LogTopic {\n    NONE = 0,\n    CONNECT = 1,\n    DISCONNECT = 2,\n    OPEN = 3,\n    QUERY = 4,\n    INSTANTIATE = 5,\n}\n\nexport enum LogEvent {\n    NONE = 0,\n    OK = 1,\n    ERROR = 2,\n    START = 3,\n    RUN = 4,\n    CAPTURE = 5,\n}\n\nexport enum LogOrigin {\n    NONE = 0,\n    WEB_WORKER = 1,\n    NODE_WORKER = 2,\n    BINDINGS = 3,\n    ASYNC_DUCKDB = 4,\n}\n\nexport type LogEntry<O, T, E, V> = {\n    readonly timestamp: Date;\n    readonly level: LogLevel;\n    readonly origin: O;\n    readonly topic: T;\n    readonly event: E;\n    readonly value: V;\n};\n\nexport type LogEntryVariant =\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.INSTANTIATE, LogEvent.ERROR, string>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.START, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.QUERY, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.CONNECT, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.DISCONNECT, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.START, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.OK, void>\n    | LogEntry<LogOrigin.BINDINGS, LogTopic.OPEN, LogEvent.ERROR, void>\n    | LogEntry<LogOrigin.ASYNC_DUCKDB, LogTopic.QUERY, LogEvent.RUN, string>;\n\nexport interface Logger {\n    log(entry: LogEntryVariant): void;\n}\n\nexport class VoidLogger implements Logger {\n    public log(_entry: LogEntryVariant): void {}\n}\n\nexport class ConsoleLogger implements Logger {\n    constructor(protected level: LogLevel = LogLevel.INFO) {}\n    public log(entry: LogEntryVariant): void {\n        if (entry.level >= this.level) {\n            console.log(entry);\n        }\n    }\n}\n\nexport function getLogLevelLabel(level: LogLevel): string {\n    switch (level) {\n        case LogLevel.NONE:\n            return 'NONE';\n        case LogLevel.DEBUG:\n            return 'DEBUG';\n        case LogLevel.INFO:\n            return 'INFO';\n        case LogLevel.WARNING:\n            return 'WARNING';\n        case LogLevel.ERROR:\n            return 'ERROR';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogEventLabel(event: LogEvent): string {\n    switch (event) {\n        case LogEvent.NONE:\n            return 'NONE';\n        case LogEvent.OK:\n            return 'OK';\n        case LogEvent.ERROR:\n            return 'ERROR';\n        case LogEvent.START:\n            return 'START';\n        case LogEvent.RUN:\n            return 'RUN';\n        case LogEvent.CAPTURE:\n            return 'CAPTURE';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogTopicLabel(topic: LogTopic): string {\n    switch (topic) {\n        case LogTopic.CONNECT:\n            return 'CONNECT';\n        case LogTopic.DISCONNECT:\n            return 'DISCONNECT';\n        case LogTopic.INSTANTIATE:\n            return 'INSTANTIATE';\n        case LogTopic.OPEN:\n            return 'OPEN';\n        case LogTopic.QUERY:\n            return 'QUERY';\n        default:\n            return '?';\n    }\n}\n\nexport function getLogOriginLabel(origin: LogOrigin): string {\n    switch (origin) {\n        case LogOrigin.NONE:\n            return 'NONE';\n        case LogOrigin.WEB_WORKER:\n            return 'WEB WORKER';\n        case LogOrigin.NODE_WORKER:\n            return 'NODE WORKER';\n        case LogOrigin.BINDINGS:\n            return 'DUCKDB BINDINGS';\n        case LogOrigin.ASYNC_DUCKDB:\n            return 'DUCKDB';\n        default:\n            return '?';\n    }\n}\n", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,10,2,95,1,125,0,96,0,1,107,0,3,2,1,1,10,12,1,10,0,67,0,0,0,0,251,7,0,11])),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n", "import * as check from 'wasm-feature-detect';\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\n\n// Platform check taken from here:\n// https://github.com/xtermjs/xterm.js/blob/master/src/common/Platform.ts#L21\n\ninterface INavigator {\n    userAgent: string;\n    language: string;\n    platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = () => (typeof navigator === 'undefined' ? true : false);\nconst userAgent = () => (isNode() ? 'node' : navigator.userAgent);\nexport const isFirefox = () => userAgent().includes('Firefox');\nexport const isSafari = () => /^((?!chrome|android).)*safari/i.test(userAgent());\n\nexport interface DuckDBBundles {\n    mvp: {\n        mainModule: string;\n        mainWorker: string;\n    };\n    eh?: {\n        mainModule: string;\n        mainWorker: string;\n    };\n    coi?: {\n        mainModule: string;\n        mainWorker: string;\n        pthreadWorker: string;\n    };\n}\n\nexport function getJsDelivrBundles(): DuckDBBundles {\n    const jsdelivr_dist_url = `https://cdn.jsdelivr.net/npm/${PACKAGE_NAME}@${PACKAGE_VERSION}/dist/`;\n    return {\n        mvp: {\n            mainModule: `${jsdelivr_dist_url}duckdb-mvp.wasm`,\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-mvp.worker.js`,\n        },\n        eh: {\n            mainModule: `${jsdelivr_dist_url}duckdb-eh.wasm`,\n            mainWorker: `${jsdelivr_dist_url}duckdb-browser-eh.worker.js`,\n        },\n        // COI is still experimental, let the user opt in explicitly\n    };\n}\n\nexport interface DuckDBBundle {\n    mainModule: string;\n    mainWorker: string | null;\n    pthreadWorker: string | null;\n}\n\nexport interface PlatformFeatures {\n    bigInt64Array: boolean;\n    crossOriginIsolated: boolean;\n    wasmExceptions: boolean;\n    wasmSIMD: boolean;\n    wasmBulkMemory: boolean;\n    wasmThreads: boolean;\n}\n\nlet bigInt64Array: boolean | null = null;\nlet wasmExceptions: boolean | null = null;\nlet wasmThreads: boolean | null = null;\nlet wasmSIMD: boolean | null = null;\nlet wasmBulkMemory: boolean | null = null;\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n    let crossOriginIsolated: boolean;\n}\n\nexport async function getPlatformFeatures(): Promise<PlatformFeatures> {\n    if (bigInt64Array == null) {\n        bigInt64Array = typeof BigInt64Array != 'undefined';\n    }\n    if (wasmExceptions == null) {\n        wasmExceptions = await check.exceptions();\n    }\n    if (wasmThreads == null) {\n        wasmThreads = await check.threads();\n    }\n    if (wasmSIMD == null) {\n        wasmSIMD = await check.simd();\n    }\n    if (wasmBulkMemory == null) {\n        wasmBulkMemory = await check.bulkMemory();\n    }\n    return {\n        bigInt64Array: bigInt64Array!,\n        crossOriginIsolated: isNode() || globalThis.crossOriginIsolated || false,\n        wasmExceptions: wasmExceptions!,\n        wasmSIMD: wasmSIMD!,\n        wasmThreads: wasmThreads!,\n        wasmBulkMemory: wasmBulkMemory!,\n    };\n}\n\nexport async function selectBundle(bundles: DuckDBBundles): Promise<DuckDBBundle> {\n    const platform = await getPlatformFeatures();\n    if (platform.wasmExceptions) {\n        if (platform.wasmSIMD && platform.wasmThreads && platform.crossOriginIsolated && bundles.coi) {\n            return {\n                mainModule: bundles.coi.mainModule,\n                mainWorker: bundles.coi.mainWorker,\n                pthreadWorker: bundles.coi.pthreadWorker,\n            };\n        }\n        if (bundles.eh) {\n            return {\n                mainModule: bundles.eh.mainModule,\n                mainWorker: bundles.eh.mainWorker,\n                pthreadWorker: null,\n            };\n        }\n    }\n    return {\n        mainModule: bundles.mvp.mainModule,\n        mainWorker: bundles.mvp.mainWorker,\n        pthreadWorker: null,\n    };\n}\n", "import {S3Config} from \"../bindings\";\nimport {sha256} from \"js-sha256\";\n\nexport interface S3Params {\n    url: string,\n    query: string,\n    host: string,\n    region: string,\n    service: string,\n    method: string,\n    accessKeyId: string,\n    secretAccessKey: string,\n    sessionToken: string,\n    dateNow: string,\n    datetimeNow: string\n}\n\nexport interface S3PayloadParams {\n    contentHash: string | null,\n    contentType: string | null\n}\n\nconst getHTTPHost = function (config : S3Config | undefined, url : string, bucket : string) : string {\n    if (config?.endpoint?.startsWith(\"http\")) {\n        // Endpoint is a full url, we append the bucket\n        const httpHost = `${config?.endpoint}`;\n        const offset = httpHost.indexOf(\"://\")+3;\n        return httpHost.substring(offset);\n    } else if (config?.endpoint) {\n        // Endpoint is not a full url and the https://{bucket}.{domain} format will be used\n        return `${bucket}.${config?.endpoint}`;\n    } else {\n        // Default aws s3 url\n        return `${bucket}.s3.amazonaws.com`;\n    }\n}\n\nexport function getS3Params (config : S3Config | undefined, url: string, method : string) : S3Params {\n    const parsedS3Url = parseS3Url(url);\n\n    // when using S3 path-style access, the signed URL should also include the bucket name, \n    //  as it is present in the HTTP URL path.\n    // See: https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-bucket-intro.html#path-style-url-ex\n    let path =  parsedS3Url.path;\n    if (isPathStyleAccess(config)) {\n        path = `/${parsedS3Url.bucket}${path}`;\n    }\n    return {\n        url: path,\n        query: \"\",\n        host: getHTTPHost(config, url, parsedS3Url.bucket),\n        region: (config?.region) ?? \"\",\n        service: \"s3\",\n        method: method,\n        accessKeyId: (config?.accessKeyId) ?? \"\",\n        secretAccessKey: (config?.secretAccessKey) ?? \"\",\n        sessionToken: (config?.sessionToken) ?? \"\",\n        dateNow: new Date().toISOString().replace(/-/g,'').split('T')[0],\n        datetimeNow: new Date().toISOString().replace(/-/g,'').replace(/:/g,'').split('.')[0]+ 'Z',\n    };\n}\n\nexport function uriEncode(input : string, encode_slash = false) {\n    // https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\n\n    const hexDigit = \"0123456789ABCDEF\";\n    let result = \"\";\n\n    for (let i = 0; i < input.length; i++) {\n        const ch : string = input[i];\n\n        if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z') || (ch >= '0' && ch <= '9') || ch == '_' ||\n            ch == '-' || ch == '~' || ch == '.') {\n            result += ch;\n        } else if (ch == '/') {\n            if (encode_slash) {\n                result += \"%2F\";\n            } else {\n                result += ch;\n            }\n        } else {\n            result += \"%\";\n            result += hexDigit[ch.charCodeAt(0) >> 4];\n            result += hexDigit[ch.charCodeAt(0) & 15];\n        }\n    }\n    return result;\n}\n\nexport function createS3Headers(params: S3Params, payloadParams : S3PayloadParams | null = null) : Map<string, string> {\n    // this is the sha256 of the empty string, its useful since we have no payload for GET requests\n    const payloadHash = (payloadParams?.contentHash) ?? \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n\n    const res = new Map<string, string>();\n    // res.set(\"host\", params.host)\n    res.set(\"x-amz-date\", params.datetimeNow);\n    res.set(\"x-amz-content-sha256\", payloadHash);\n\n    if (params.sessionToken) {\n        res.set(\"x-amz-security-token\", params.sessionToken);\n    }\n\n    // construct string to sign\n    let signedHeaders = \"\";\n    if (payloadParams?.contentType) {\n        signedHeaders += \"content-type;\";\n    }\n    signedHeaders += \"host;x-amz-content-sha256;x-amz-date\";\n    if (params.sessionToken) {\n        signedHeaders += \";x-amz-security-token\";\n    }\n\n    let canonicalRequest = params.method + \"\\n\" + uriEncode(params.url) + \"\\n\" + params.query;\n    if (payloadParams?.contentType) {\n        canonicalRequest += \"\\ncontent-type:\" + payloadParams?.contentType;\n    }\n    canonicalRequest += \"\\nhost:\" + params.host +\n        \"\\nx-amz-content-sha256:\" + payloadHash + \"\\nx-amz-date:\" + params.datetimeNow;\n    if (params.sessionToken && params.sessionToken.length > 0) {\n        canonicalRequest += \"\\nx-amz-security-token:\" + params.sessionToken;\n    }\n\n    canonicalRequest += \"\\n\\n\" + signedHeaders + \"\\n\" + payloadHash;\n    const canonicalRequestHashStr = sha256(canonicalRequest);\n\n    const stringToSign = \"AWS4-HMAC-SHA256\\n\" + params.datetimeNow + \"\\n\" + params.dateNow + \"/\" + params.region + \"/\" + params.service +\n        \"/aws4_request\\n\" + canonicalRequestHashStr;\n\n    // ts-ignore's because library can accept array buffer as key, but TS arg is incorrect\n    const signKey = \"AWS4\" + params.secretAccessKey;\n    const kDate = sha256.hmac.arrayBuffer(signKey, params.dateNow);\n\n    // Note, js-sha256 has a bug in the TS interface that only supports strings as keys, while we need a bytearray\n    // as key. PR is open but unmerged: https://github.com/emn178/js-sha256/pull/25\n    // eslint-disable-next-line\n    // @ts-ignore\n    const kRegion = sha256.hmac.arrayBuffer(kDate, params.region);\n    // eslint-disable-next-line\n    // @ts-ignore\n    const kService = sha256.hmac.arrayBuffer(kRegion, params.service,);\n    // eslint-disable-next-line\n    // @ts-ignore\n    const signingKey = sha256.hmac.arrayBuffer(kService, \"aws4_request\");\n    // eslint-disable-next-line\n    // @ts-ignore\n    const signature = sha256.hmac(signingKey, stringToSign);\n\n    res.set(\"Authorization\", \"AWS4-HMAC-SHA256 Credential=\" + params.accessKeyId + \"/\" + params.dateNow + \"/\" + params.region + \"/\" +\n        params.service + \"/aws4_request, SignedHeaders=\" + signedHeaders +\n        \", Signature=\" + signature);\n\n    return res;\n}\n\nconst createS3HeadersFromS3Config = function (config : S3Config | undefined, url : string, method : string, contentType: string | null = null, payload : Uint8Array | null = null) : Map<string, string> {\n    const params = getS3Params(config, url, method);\n    const payloadParams = {\n        contentType: contentType,\n        contentHash: payload ? sha256.hex(payload!) : null\n    } as S3PayloadParams;\n    return createS3Headers(params, payloadParams);\n}\n\nexport function addS3Headers(xhr: XMLHttpRequest, config : S3Config | undefined, url : string, method: string, contentType: string | null = null, payload : Uint8Array | null = null) {\n    if (config?.accessKeyId || config?.sessionToken) {\n        const headers = createS3HeadersFromS3Config(config, url, method, contentType, payload);\n        headers.forEach((value: string, header: string) => {\n            xhr.setRequestHeader(header, value);\n        });\n\n        if (contentType) {\n            xhr.setRequestHeader(\"content-type\", contentType);\n        }\n    }\n}\n\nexport function parseS3Url (url: string) : {bucket : string, path : string} {\n    if (url.indexOf(\"s3://\") != 0) {\n        throw new Error(\"URL needs to start with s3://\");\n    }\n    const slashPos = url.indexOf('/', 5);\n\n    if (slashPos == -1) {\n        throw new Error(\"URL needs to contain a '/' after the host\");\n    }\n\n    const bucket = url.substring(5, slashPos);\n    if (!bucket) {\n        throw new Error(\"URL needs to contain a bucket name\");\n    }\n    const path = url.substring(slashPos);\n    if (!path) {\n        throw new Error(\"URL needs to contain key\");\n    }\n\n    return {bucket: bucket, path: path}\n}\n\nfunction isPathStyleAccess(config : S3Config | undefined) : boolean {\n    if (config?.endpoint?.startsWith(\"http\")) {\n        return true\n    }\n    return false\n}\n\nexport function getHTTPUrl(config : S3Config | undefined, url : string) : string {\n    const parsedUrl = parseS3Url(url);\n    if (isPathStyleAccess(config)) {\n        // Endpoint is a full url, we append the bucket\n        return `${config?.endpoint}/${parsedUrl.bucket}` + parsedUrl.path;\n    }\n    return 'https://' + getHTTPHost(config, url, parsedUrl.bucket) + parsedUrl.path;\n}", "import { StatusCode } from '../status';\nimport { addS3Headers, getHTTPUrl } from '../utils';\n\nimport {\n    callSRet,\n    dropResponseBuffers,\n    DuckDBDataProtocol,\n    DuckDBFileInfo,\n    DuckDBGlobalFileInfo,\n    DuckDBRuntime,\n    failWith,\n    FileFlags,\n    readString,\n} from './runtime';\nimport { DuckDBModule } from './duckdb_module';\nimport * as udf from './udf_runtime';\n\nexport const BROWSER_RUNTIME: DuckDBRuntime & {\n    _fileInfoCache: Map<number, DuckDBFileInfo>;\n    _globalFileInfo: DuckDBGlobalFileInfo | null;\n\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null;\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null;\n} = {\n    _files: new Map<string, any>(),\n    _fileInfoCache: new Map<number, DuckDBFileInfo>(),\n    _udfFunctions: new Map(),\n    _globalFileInfo: null,\n\n    getFileInfo(mod: DuckDBModule, fileId: number): DuckDBFileInfo | null {\n        try {\n            const cached = BROWSER_RUNTIME._fileInfoCache.get(fileId);\n            const [s, d, n] = callSRet(\n                mod,\n                'duckdb_web_fs_get_file_info_by_id',\n                ['number', 'number'],\n                [fileId, cached?.cacheEpoch || 0],\n            );\n            if (s !== StatusCode.SUCCESS) {\n                return null;\n            } else if (n === 0) {\n                // Epoch is up to date\n                return cached!;\n            }\n            const infoStr = readString(mod, d, n);\n            dropResponseBuffers(mod);\n            const info = JSON.parse(infoStr);\n            if (info == null) {\n                return null;\n            }\n            const file = { ...info, blob: null } as DuckDBFileInfo;\n            BROWSER_RUNTIME._fileInfoCache.set(fileId, file);\n            return file;\n        } catch (e: any) {\n            console.log(e);\n            return null;\n        }\n    },\n\n    getGlobalFileInfo(mod: DuckDBModule): DuckDBGlobalFileInfo | null {\n        try {\n            const [s, d, n] = callSRet(\n                mod,\n                'duckdb_web_get_global_file_info',\n                ['number'],\n                [BROWSER_RUNTIME._globalFileInfo?.cacheEpoch || 0],\n            );\n            if (s !== StatusCode.SUCCESS) {\n                return null;\n            } else if (n === 0) {\n                // Epoch is up to date\n                return BROWSER_RUNTIME._globalFileInfo!;\n            }\n            const infoStr = readString(mod, d, n);\n            dropResponseBuffers(mod);\n            const info = JSON.parse(infoStr);\n            if (info == null) {\n                return null;\n            }\n            BROWSER_RUNTIME._globalFileInfo = { ...info, blob: null } as DuckDBGlobalFileInfo;\n\n            return BROWSER_RUNTIME._globalFileInfo;\n        } catch (e: any) {\n            console.log(e);\n            return null;\n        }\n    },\n\n    testPlatformFeature: (_mod: DuckDBModule, feature: number): boolean => {\n        switch (feature) {\n            case 1:\n                return typeof BigInt64Array !== 'undefined';\n            default:\n                console.warn(`test for unknown feature: ${feature}`);\n                return false;\n        }\n    },\n\n    getDefaultDataProtocol(mod: DuckDBModule): number {\n        return DuckDBDataProtocol.BROWSER_FILEREADER;\n    },\n\n    openFile: (mod: DuckDBModule, fileId: number, flags: FileFlags): number => {\n        try {\n            BROWSER_RUNTIME._fileInfoCache.delete(fileId);\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n            switch (file?.dataProtocol) {\n                case DuckDBDataProtocol.HTTP:\n                case DuckDBDataProtocol.S3: {\n                    if (flags & FileFlags.FILE_FLAGS_READ && flags & FileFlags.FILE_FLAGS_WRITE) {\n                        throw new Error(\n                            `Opening file ${file.fileName} failed: cannot open file with both read and write flags set`,\n                        );\n                    } else if (flags & FileFlags.FILE_FLAGS_APPEND) {\n                        throw new Error(\n                            `Opening file ${file.fileName} failed: appending to HTTP/S3 files is not supported`,\n                        );\n                    } else if (flags & FileFlags.FILE_FLAGS_WRITE) {\n                        // We send a HEAD request to try to determine if we can write to data_url\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\n                        } else {\n                            xhr.open('HEAD', file.dataUrl!, false);\n                        }\n                        xhr.send(null);\n\n                        // Expect 200 for existing files that we will overwrite or 404 for non-existent files can be created\n                        if (xhr.status != 200 && xhr.status != 404) {\n                            throw new Error(\n                                `Opening file ${file.fileName} failed: Unexpected return status from server (${xhr.status})`,\n                            );\n                        } else if (\n                            xhr.status == 404 &&\n                            !(flags & FileFlags.FILE_FLAGS_FILE_CREATE || flags & FileFlags.FILE_FLAGS_FILE_CREATE_NEW)\n                        ) {\n                            throw new Error(\n                                `Opening file ${file.fileName} failed: Cannot write to non-existent file without FILE_FLAGS_FILE_CREATE or FILE_FLAGS_FILE_CREATE_NEW flag.`,\n                            );\n                        }\n                        // Return an empty buffer that can be used to buffer the writes to this s3/http file\n                        const data = mod._malloc(1);\n                        const src = new Uint8Array();\n                        mod.HEAPU8.set(src, data);\n                        const result = mod._malloc(2 * 8);\n                        mod.HEAPF64[(result >> 3) + 0] = 1;\n                        mod.HEAPF64[(result >> 3) + 1] = data;\n                        return result;\n                    } else if (flags != FileFlags.FILE_FLAGS_READ) {\n                        throw new Error(`Opening file ${file.fileName} failed: unsupported file flags: ${flags}`);\n                    }\n\n                    // Supports ranges?\n                    let contentLength = null;\n                    let error: any | null = null;\n                    try {\n                        // Send a dummy HEAD request with range protocol\n                        //          -> good IFF status is 206 and contentLenght is present\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('HEAD', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'HEAD');\n                        } else {\n                            xhr.open('HEAD', file.dataUrl!, false);\n                        }\n                        xhr.setRequestHeader('Range', `bytes=0-`);\n                        xhr.send(null);\n\n                        // Supports range requests\n                        contentLength = xhr.getResponseHeader('Content-Length');\n                        if (contentLength !== null && xhr.status == 206) {\n                            const result = mod._malloc(2 * 8);\n                            mod.HEAPF64[(result >> 3) + 0] = +contentLength;\n                            mod.HEAPF64[(result >> 3) + 1] = 0;\n                            return result;\n                        }\n                    } catch (e: any) {\n                        error = e;\n                        console.warn(`HEAD request with range header failed: ${e}`);\n                    }\n\n                    // Try to fallback to full read?\n                    if (file.allowFullHttpReads) {\n                        if ((contentLength !== null) && (+contentLength > 1)) {\n                            // 2. Send a dummy GET range request querying the first byte of the file\n                            //          -> good IFF status is 206 and contentLenght2 is 1\n                            //          -> otherwise, iff 200 and contentLenght2 == contentLenght\n                            //                 we just downloaded the file, save it and move further\n                            const xhr = new XMLHttpRequest();\n                            if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                                xhr.open('GET', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                                addS3Headers(xhr, file.s3Config, file.dataUrl!, 'GET');\n                            } else {\n                                xhr.open('GET', file.dataUrl!, false);\n                            }\n                            xhr.setRequestHeader('Range', `bytes=0-0`);\n                            xhr.send(null);\n                            const contentLength2 = xhr.getResponseHeader('Content-Length');\n\n                            if (xhr.status == 206 && contentLength2 !== null && +contentLength2 == 1) {\n                                const result = mod._malloc(2 * 8);\n                                mod.HEAPF64[(result >> 3) + 0] = +contentLength;\n                                mod.HEAPF64[(result >> 3) + 1] = 0;\n                                return result;\n                            }\n                            if (xhr.status == 200 && contentLength2 !== null && +contentLength2 == +contentLength) {\n                                console.warn(`fall back to full HTTP read for: ${file.dataUrl}`);\n                                const data = mod._malloc(xhr.response.byteLength);\n                                const src = new Uint8Array(xhr.response, 0, xhr.response.byteLength);\n                                mod.HEAPU8.set(src, data);\n                                const result = mod._malloc(2 * 8);\n                                mod.HEAPF64[(result >> 3) + 0] = xhr.response.byteLength;\n                                mod.HEAPF64[(result >> 3) + 1] = data;\n                                return result;\n                            }\n                        }\n                        console.warn(`falling back to full HTTP read for: ${file.dataUrl}`);\n                        // 3. Send non-range request\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('GET', getHTTPUrl(file.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file.s3Config, file.dataUrl!, 'GET');\n                        } else {\n                            xhr.open('GET', file.dataUrl!, false);\n                        }\n                        xhr.responseType = 'arraybuffer';\n                        xhr.send(null);\n\n                        // Return buffer\n                        if (xhr.status == 200) {\n                            const data = mod._malloc(xhr.response.byteLength);\n                            const src = new Uint8Array(xhr.response, 0, xhr.response.byteLength);\n                            mod.HEAPU8.set(src, data);\n                            const result = mod._malloc(2 * 8);\n                            mod.HEAPF64[(result >> 3) + 0] = xhr.response.byteLength;\n                            mod.HEAPF64[(result >> 3) + 1] = data;\n                            return result;\n                        }\n                    }\n\n                    // Raise error?\n                    if (error != null) {\n                        throw new Error(`Reading file ${file.fileName} failed with error: ${error}`);\n                    }\n                    return 0;\n                }\n                // File reader File\n                case DuckDBDataProtocol.BROWSER_FILEREADER: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (handle) {\n                        const result = mod._malloc(2 * 8);\n                        mod.HEAPF64[(result >> 3) + 0] = handle.size;\n                        mod.HEAPF64[(result >> 3) + 1] = 0;\n                        return result;\n                    }\n\n                    // Fall back to empty buffered file in the browser\n                    console.warn(`Buffering missing file: ${file.fileName}`);\n                    const result = mod._malloc(2 * 8);\n                    const buffer = mod._malloc(1); // malloc(0) is allowed to return a nullptr\n                    mod.HEAPF64[(result >> 3) + 0] = 1;\n                    mod.HEAPF64[(result >> 3) + 1] = buffer;\n                    return result;\n                }\n            }\n        } catch (e: any) {\n            // TODO (samansmink): this path causes the WASM code to hang\n            console.error(e.toString());\n            failWith(mod, e.toString());\n        }\n        return 0;\n    },\n    glob: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        try {\n            const path = readString(mod, pathPtr, pathLen);\n            // Starts with http?\n            // Try a HTTP HEAD request\n            if (path.startsWith('http') || path.startsWith('s3://')) {\n                // Send a dummy range request querying the first byte of the file\n                const xhr = new XMLHttpRequest();\n                if (path.startsWith('s3://')) {\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\n                } else {\n                    xhr.open('HEAD', path!, false);\n                }\n                xhr.send(null);\n                if (xhr.status != 200 && xhr.status !== 206) {\n                    // Pre-signed resources on S3 in common configurations fail on any HEAD request\n                    // https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/s3-example-presigned-urls.html\n                    // so we need (if enabled) to bump to a ranged GET\n                    if (!BROWSER_RUNTIME.getGlobalFileInfo(mod)?.allowFullHttpReads) {\n                        failWith(mod, `HEAD request failed: ${path}, with full http reads are disabled`);\n                        return;\n                    }\n                    const xhr2 = new XMLHttpRequest();\n                    if (path.startsWith('s3://')) {\n                        const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                        xhr2.open('GET', getHTTPUrl(globalInfo?.s3Config, path), false);\n                        addS3Headers(xhr2, globalInfo?.s3Config, path, 'HEAD');\n                    } else {\n                        xhr2.open('GET', path!, false);\n                    }\n                    xhr2.setRequestHeader('Range', `bytes=0-0`);\n                    xhr2.send(null);\n                    if (xhr2.status != 200 && xhr2.status !== 206) {\n                        failWith(mod, `HEAD and GET requests failed: ${path}`);\n                        return;\n                    }\n                    const contentLength = xhr2.getResponseHeader('Content-Length');\n                    if (contentLength && (+contentLength > 1)) {\n                        console.warn(`Range request for ${path} did not return a partial response: ${xhr2.status} \"${xhr2.statusText}\"`);\n                    }\n                }\n                mod.ccall('duckdb_web_fs_glob_add_path', null, ['string'], [path]);\n            }\n        } catch (e: any) {\n            console.log(e);\n            failWith(mod, e.toString());\n            return 0;\n        }\n    },\n    checkFile: (mod: DuckDBModule, pathPtr: number, pathLen: number): boolean => {\n        try {\n            const path = readString(mod, pathPtr, pathLen);\n            // Starts with http or S3?\n            // Try a HTTP HEAD request\n            if (path.startsWith('http') || path.startsWith('s3://')) {\n                // Send a dummy range request querying the first byte of the file\n                const xhr = new XMLHttpRequest();\n                if (path.startsWith('s3://')) {\n                    const globalInfo = BROWSER_RUNTIME.getGlobalFileInfo(mod);\n                    xhr.open('HEAD', getHTTPUrl(globalInfo?.s3Config, path), false);\n                    addS3Headers(xhr, globalInfo?.s3Config, path, 'HEAD');\n                } else {\n                    xhr.open('HEAD', path!, false);\n                }\n                xhr.send(null);\n                return xhr.status == 206 || xhr.status == 200;\n            }\n        } catch (e: any) {\n            console.log(e);\n            return false;\n        }\n        return false;\n    },\n    syncFile: (_mod: DuckDBModule, _fileId: number) => {},\n    closeFile: (mod: DuckDBModule, fileId: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        BROWSER_RUNTIME._fileInfoCache.delete(fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.BUFFER:\n            case DuckDBDataProtocol.HTTP:\n            case DuckDBDataProtocol.S3:\n                break;\n            case DuckDBDataProtocol.NODE_FS:\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\n                // XXX Remove from registry\n                return;\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                }\n                return handle.flush();\n            }\n        }\n    },\n    truncateFile: (mod: DuckDBModule, fileId: number, newSize: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.HTTP:\n                failWith(mod, `Cannot truncate a http file`);\n                return;\n            case DuckDBDataProtocol.S3:\n                failWith(mod, `Cannot truncate an s3 file`);\n                return;\n            case DuckDBDataProtocol.BUFFER:\n            case DuckDBDataProtocol.NODE_FS:\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\n                failWith(mod, `truncateFile not implemented`);\n                return;\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                }\n                return handle.truncate(newSize);\n            }\n        }\n        return 0;\n    },\n    readFile(mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) {\n        if (bytes == 0) {\n            // Be robust to empty reads\n            return 0;\n        }\n        try {\n            const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n            switch (file?.dataProtocol) {\n                // File reading from BLOB or HTTP MUST be done with range requests.\n                // We have to check in OPEN if such file supports range requests and upgrade to BUFFER if not.\n                case DuckDBDataProtocol.HTTP:\n                case DuckDBDataProtocol.S3: {\n                    if (!file.dataUrl) {\n                        throw new Error(`Missing data URL for file ${fileId}`);\n                    }\n                    try {\n                        const xhr = new XMLHttpRequest();\n                        if (file.dataProtocol == DuckDBDataProtocol.S3) {\n                            xhr.open('GET', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\n                            addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'GET');\n                        } else {\n                            xhr.open('GET', file.dataUrl!, false);\n                        }\n                        xhr.responseType = 'arraybuffer';\n                        xhr.setRequestHeader('Range', `bytes=${location}-${location + bytes - 1}`);\n                        xhr.send(null);\n                        if (\n                            xhr.status == 206 /* Partial content */ ||\n                            (xhr.status == 200 && bytes == xhr.response.byteLength && location == 0)\n                        ) {\n                            const src = new Uint8Array(xhr.response, 0, Math.min(xhr.response.byteLength, bytes));\n                            mod.HEAPU8.set(src, buf);\n                            return src.byteLength;\n                        } else if (xhr.status == 200) {\n                            // TODO: here we are actually throwing away all non-relevant bytes, but this is still better than failing\n                            //       proper solution would require notifying duckdb-wasm cache, while we are piggybackign on browser cache\n                            console.warn(`Range request for ${file.dataUrl} did not return a partial response: ${xhr.status} \"${xhr.statusText}\"`);\n                            const src = new Uint8Array(xhr.response, location, Math.min(xhr.response.byteLength-location, bytes));\n                            mod.HEAPU8.set(src, buf);\n                            return src.byteLength;\n                        } else {\n                            throw new Error(\n                                `Range request for ${file.dataUrl} did returned non-success status: ${xhr.status} \"${xhr.statusText}\"`,\n                            );\n                        }\n                    } catch (e) {\n                        console.log(e);\n                        throw new Error(`Range request for ${file.dataUrl} failed with error: ${e}\"`);\n                    }\n                }\n                case DuckDBDataProtocol.BROWSER_FILEREADER: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (!handle) {\n                        throw new Error(`No HTML5 file registered with name: ${file.fileName}`);\n                    }\n                    const sliced = handle!.slice(location, location + bytes);\n                    const data = new Uint8Array(new FileReaderSync().readAsArrayBuffer(sliced));\n                    mod.HEAPU8.set(data, buf);\n                    return data.byteLength;\n                }\n                case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                    const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                    if (!handle) {\n                        throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                    }\n                    const out = mod.HEAPU8.subarray(buf, buf + bytes);\n                    return handle.read(out, { at: location });\n                }\n            }\n            return 0;\n        } catch (e: any) {\n            console.log(e);\n            failWith(mod, e.toString());\n            return 0;\n        }\n    },\n    writeFile: (mod: DuckDBModule, fileId: number, buf: number, bytes: number, location: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.HTTP:\n                failWith(mod, 'Cannot write to HTTP file');\n                return 0;\n            case DuckDBDataProtocol.S3: {\n                const buffer = mod.HEAPU8.subarray(buf, buf + bytes);\n                const xhr = new XMLHttpRequest();\n                xhr.open('PUT', getHTTPUrl(file?.s3Config, file.dataUrl!), false);\n                addS3Headers(xhr, file?.s3Config, file.dataUrl!, 'PUT', '', buffer);\n                xhr.send(buffer);\n                if (xhr.status !== 200) {\n                    failWith(mod, 'Failed writing file: HTTP ' + xhr.status);\n                    return 0;\n                }\n                return bytes;\n            }\n            case DuckDBDataProtocol.BROWSER_FILEREADER:\n                failWith(mod, 'cannot write using the html5 file reader api');\n                return 0;\n            case DuckDBDataProtocol.BROWSER_FSACCESS: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw new Error(`No OPFS access handle registered with name: ${file.fileName}`);\n                }\n                const input = mod.HEAPU8.subarray(buf, buf + bytes);\n                return handle.write(input, { at: location });\n            }\n        }\n        return 0;\n    },\n    getLastFileModificationTime: (mod: DuckDBModule, fileId: number) => {\n        const file = BROWSER_RUNTIME.getFileInfo(mod, fileId);\n        switch (file?.dataProtocol) {\n            case DuckDBDataProtocol.BROWSER_FILEREADER: {\n                const handle = BROWSER_RUNTIME._files?.get(file.fileName);\n                if (!handle) {\n                    throw Error(`No handle available for file: ${file.fileName}`);\n                }\n                return 0;\n            }\n\n            case DuckDBDataProtocol.HTTP:\n            case DuckDBDataProtocol.S3:\n                return new Date().getTime();\n        }\n        return 0;\n    },\n    checkDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`checkDirectory: ${path}`);\n        return false;\n    },\n    createDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`createDirectory: ${path}`);\n    },\n    removeDirectory: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`removeDirectory: ${path}`);\n    },\n    listDirectoryEntries: (mod: DuckDBModule, pathPtr: number, pathLen: number) => {\n        const path = readString(mod, pathPtr, pathLen);\n        console.log(`listDirectoryEntries: ${path}`);\n        return false;\n    },\n    moveFile: (mod: DuckDBModule, fromPtr: number, fromLen: number, toPtr: number, toLen: number) => {\n        const from = readString(mod, fromPtr, fromLen);\n        const to = readString(mod, toPtr, toLen);\n        const handle = BROWSER_RUNTIME._files?.get(from);\n        if (handle !== undefined) {\n            BROWSER_RUNTIME._files!.delete(handle);\n            BROWSER_RUNTIME._files!.set(to, handle);\n        }\n        for (const [key, value] of BROWSER_RUNTIME._fileInfoCache?.entries() || []) {\n            if (value.dataUrl == from) {\n                BROWSER_RUNTIME._fileInfoCache.delete(key);\n                break;\n            }\n        }\n        return true;\n    },\n    removeFile: (_mod: DuckDBModule, _pathPtr: number, _pathLen: number) => {},\n    callScalarUDF: (\n        mod: DuckDBModule,\n        response: number,\n        funcId: number,\n        descPtr: number,\n        descSize: number,\n        ptrsPtr: number,\n        ptrsSize: number,\n    ): void => {\n        udf.callScalarUDF(BROWSER_RUNTIME, mod, response, funcId, descPtr, descSize, ptrsPtr, ptrsSize);\n    },\n};\n\nexport default BROWSER_RUNTIME;\n", "import DuckDBWasm from './duckdb-mvp.js';\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\nimport { DuckDBModule } from './duckdb_module';\nimport { DuckDBRuntime } from './runtime';\nimport { Logger } from '../log';\n\n/** DuckDB bindings for the browser */\nexport class DuckDB extends DuckDBBrowserBindings {\n    /** Constructor */\n    public constructor(\n        logger: Logger,\n        runtime: DuckDBRuntime,\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n    ) {\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\n    }\n\n    /** Instantiate the bindings */\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\n        return DuckDBWasm({\n            ...moduleOverrides,\n            instantiateWasm: this.instantiateWasm.bind(this),\n            locateFile: this.locateFile.bind(this),\n        });\n    }\n}\n", "import { DuckDBModule } from './duckdb_module';\nimport { DuckDBBindingsBase } from './bindings_base';\nimport { DuckDBRuntime } from './runtime';\nimport { LogLevel, LogTopic, LogOrigin, LogEvent } from '../log';\nimport { Logger } from '../log';\nimport { InstantiationProgress } from '.';\n\n/** DuckDB bindings for the browser */\nexport abstract class DuckDBBrowserBindings extends DuckDBBindingsBase {\n    /** The path of the wasm module */\n    protected readonly mainModuleURL: string;\n    /** The path of the pthread worker script */\n    protected readonly pthreadWorkerURL: string | null;\n\n    /** Constructor */\n    public constructor(logger: Logger, runtime: DuckDBRuntime, mainModuleURL: string, pthreadWorkerURL: string | null) {\n        super(logger, runtime);\n        this.mainModuleURL = mainModuleURL;\n        this.pthreadWorkerURL = pthreadWorkerURL;\n    }\n\n    /** Locate a file */\n    protected locateFile(path: string, prefix: string): string {\n        if (path.endsWith('.wasm')) {\n            return this.mainModuleURL;\n        }\n        if (path.endsWith('.worker.js')) {\n            if (!this.pthreadWorkerURL) {\n                throw new Error('Missing DuckDB worker URL!');\n            }\n            return this.pthreadWorkerURL!;\n        }\n        throw new Error(`WASM instantiation requested unexpected file: prefix=${prefix} path=${path}`);\n    }\n\n    /** Instantiate the wasm module */\n    protected instantiateWasm(\n        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n        imports: any,\n        success: (instance: WebAssembly.Instance, module: WebAssembly.Module) => void,\n    ): Emscripten.WebAssemblyExports {\n        // We rely on the following here:\n        //\n        // ...when a Request object is created using the Request.Request constructor,\n        // the value of the mode property for that Request is set to cors.\n        // [ref: MDN]\n        //\n        // Cloudflare throws when mode: 'cors' is set\n        //\n        globalThis.DUCKDB_RUNTIME = this._runtime;\n        const handlers = this.onInstantiationProgress;\n\n        // Does the browser support streaming instantiation?\n        if (WebAssembly.instantiateStreaming) {\n            // Does the browser support transform streams?\n            if (typeof TransformStream === 'function') {\n                const fetchWithProgress = async () => {\n                    // Try to determine file size\n                    const request = new Request(this.mainModuleURL);\n                    const response = await fetch(request);\n                    const contentLengthHdr = response.headers.get('content-length');\n                    const contentLength = contentLengthHdr ? parseInt(contentLengthHdr, 10) || 0 : 0;\n\n                    // Transform the stream\n                    const start = new Date();\n                    const progress: InstantiationProgress = {\n                        startedAt: start,\n                        updatedAt: start,\n                        bytesTotal: contentLength || 0,\n                        bytesLoaded: 0,\n                    };\n                    const tracker = {\n                        transform(chunk: any, ctrl: TransformStreamDefaultController) {\n                            progress.bytesLoaded += chunk.byteLength;\n                            const now = new Date();\n                            if (now.getTime() - progress.updatedAt.getTime() < 20) {\n                                progress.updatedAt = now;\n                                ctrl.enqueue(chunk);\n                                return;\n                            }\n                            for (const p of handlers) {\n                                p(progress);\n                            }\n                            ctrl.enqueue(chunk);\n                        },\n                    };\n                    const ts = new TransformStream(tracker);\n                    return new Response(response.body?.pipeThrough(ts), response);\n                };\n                // Instantiate streaming\n                const response = fetchWithProgress();\n                WebAssembly.instantiateStreaming(response, imports).then(output => {\n                    success(output.instance, output.module);\n                });\n            } else {\n                console.warn('instantiating without progress handler since transform streams are unavailable');\n                const request = new Request(this.mainModuleURL);\n                WebAssembly.instantiateStreaming(fetch(request), imports).then(output => {\n                    success(output.instance, output.module);\n                });\n            }\n        } else if (typeof XMLHttpRequest == 'function') {\n            // Otherwise we fall back to XHRs\n            const xhr = new XMLHttpRequest();\n            const url = this.mainModuleURL;\n            const start = new Date();\n            const progress: InstantiationProgress = {\n                startedAt: start,\n                updatedAt: start,\n                bytesTotal: 0,\n                bytesLoaded: 0,\n            };\n            xhr.open('GET', url);\n            xhr.responseType = 'arraybuffer';\n            xhr.onerror = error => {\n                this.logger.log({\n                    timestamp: new Date(),\n                    level: LogLevel.ERROR,\n                    origin: LogOrigin.BINDINGS,\n                    topic: LogTopic.INSTANTIATE,\n                    event: LogEvent.ERROR,\n                    value: 'Failed to load WASM: ' + error,\n                });\n                throw new Error(error.toString());\n            };\n            xhr.onprogress = e => {\n                progress.bytesTotal = e.total;\n                progress.bytesLoaded = e.loaded;\n                const now = new Date();\n                if (now.getTime() - progress.updatedAt.getTime() < 20) {\n                    progress.updatedAt = now;\n                    return;\n                }\n                for (const p of handlers) {\n                    p(progress);\n                }\n            };\n            xhr.onload = () => {\n                WebAssembly.instantiate(xhr.response, imports)\n                    .then(output => {\n                        success(output.instance, output.module);\n                    })\n                    .catch(error => {\n                        this.logger.log({\n                            timestamp: new Date(),\n                            level: LogLevel.ERROR,\n                            origin: LogOrigin.BINDINGS,\n                            topic: LogTopic.INSTANTIATE,\n                            event: LogEvent.ERROR,\n                            value: 'Failed to instantiate WASM: ' + error,\n                        });\n                        throw new Error(error);\n                    });\n            };\n            xhr.send();\n        } else {\n            console.warn('instantiating with manual fetch since streaming instantiation and xhrs are unavailable');\n            const run = async () => {\n                const request = new Request(this.mainModuleURL);\n                const response = await fetch(request);\n                const buffer = await response.arrayBuffer();\n                WebAssembly.instantiate(buffer, imports).then(output => {\n                    success(output.instance, output.module);\n                });\n            };\n            run();\n        }\n        return [];\n    }\n\n    /// Instantiation must be done by the browser variants\n    protected abstract instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule>;\n}\n", "import DuckDBWasm from './duckdb-eh.js';\nimport { DuckDBBrowserBindings } from './bindings_browser_base';\nimport { DuckDBModule } from './duckdb_module';\nimport { DuckDBRuntime } from './runtime';\nimport { Logger } from '../log';\n\n/** DuckDB bindings for the browser */\nexport class DuckDB extends DuckDBBrowserBindings {\n    /** Constructor */\n    public constructor(\n        logger: Logger,\n        runtime: DuckDBRuntime,\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n    ) {\n        super(logger, runtime, mainModuleURL, pthreadWorkerURL);\n    }\n\n    /** Instantiate the bindings */\n    protected instantiateImpl(moduleOverrides: Partial<DuckDBModule>): Promise<DuckDBModule> {\n        return DuckDBWasm({\n            ...moduleOverrides,\n            instantiateWasm: this.instantiateWasm.bind(this),\n            locateFile: this.locateFile.bind(this),\n        });\n    }\n}\n\nexport default DuckDB;\n", "export * from '../bindings';\nexport * from '../log';\nexport * from '../platform';\nexport * from '../status';\nexport * from '../version';\nexport { DuckDBDataProtocol } from '../bindings/runtime';\nexport { DEFAULT_RUNTIME } from '../bindings/runtime';\nexport { BROWSER_RUNTIME } from '../bindings/runtime_browser';\n\nimport { Logger } from '../log';\nimport { DuckDBRuntime, DuckDBBindings } from '../bindings';\nimport { DuckDBBundles, getPlatformFeatures } from '../platform';\nimport { DuckDB as DuckDBMVP } from '../bindings/bindings_browser_mvp';\nimport { DuckDB as DuckDBNext } from '../bindings/bindings_browser_eh';\n\nexport async function createDuckDB(\n    bundles: DuckDBBundles,\n    logger: Logger,\n    runtime: DuckDBRuntime,\n): Promise<DuckDBBindings> {\n    const platform = await getPlatformFeatures();\n    if (platform.wasmExceptions) {\n        if (bundles.eh) {\n            return new DuckDBNext(logger, runtime, bundles.eh!.mainModule);\n        }\n    }\n    return new DuckDBMVP(logger, runtime, bundles.mvp.mainModule);\n}\n", "import * as arrow from 'apache-arrow';\nimport { AsyncDuckDB } from './async_bindings';\nimport { LogLevel, LogTopic, LogOrigin, LogEvent } from '../log';\nimport { ArrowInsertOptions, CSVInsertOptions, JSONInsertOptions } from '../bindings/insert_options';\n\n/** A thin helper to memoize the connection id */\nexport class AsyncDuckDBConnection {\n    /** The async duckdb */\n    protected readonly _bindings: AsyncDuckDB;\n    /** The conn handle */\n    protected readonly _conn: number;\n\n    constructor(bindings: AsyncDuckDB, conn: number) {\n        this._bindings = bindings;\n        this._conn = conn;\n    }\n\n    /** Access the database bindings */\n    public get bindings(): AsyncDuckDB {\n        return this._bindings;\n    }\n\n    /** Disconnect from the database */\n    public async close(): Promise<void> {\n        return this._bindings.disconnect(this._conn);\n    }\n\n    /** Brave souls may use this function to consume the underlying connection id */\n    public useUnsafe<R>(callback: (bindings: AsyncDuckDB, conn: number) => R) {\n        return callback(this._bindings, this._conn);\n    }\n\n    /** Run a query */\n    public async query<T extends { [key: string]: arrow.DataType } = any>(text: string): Promise<arrow.Table<T>> {\n        this._bindings.logger.log({\n            timestamp: new Date(),\n            level: LogLevel.INFO,\n            origin: LogOrigin.ASYNC_DUCKDB,\n            topic: LogTopic.QUERY,\n            event: LogEvent.RUN,\n            value: text,\n        });\n        const buffer = await this._bindings.runQuery(this._conn, text);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync(), \"Reader is not sync\");\n        console.assert(reader.isFile(), \"Reader is not file\");\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\n    }\n\n    /** Send a query */\n    public async send<T extends { [key: string]: arrow.DataType } = any>(\n        text: string,\n    ): Promise<arrow.AsyncRecordBatchStreamReader<T>> {\n        this._bindings.logger.log({\n            timestamp: new Date(),\n            level: LogLevel.INFO,\n            origin: LogOrigin.ASYNC_DUCKDB,\n            topic: LogTopic.QUERY,\n            event: LogEvent.RUN,\n            value: text,\n        });\n        let header = await this._bindings.startPendingQuery(this._conn, text);\n        while (header == null) {\n            header = await this._bindings.pollPendingQuery(this._conn);\n        }\n        const iter = new AsyncResultStreamIterator(this._bindings, this._conn, header);\n        const reader = await arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isAsync());\n        console.assert(reader.isStream());\n        return reader as unknown as arrow.AsyncRecordBatchStreamReader<T>; // XXX\n    }\n\n    /** Cancel a query that was sent earlier */\n    public async cancelSent(): Promise<boolean> {\n        return await this._bindings.cancelPendingQuery(this._conn);\n    }\n\n    /** Get table names */\n    public async getTableNames(query: string): Promise<string[]> {\n        return await this._bindings.getTableNames(this._conn, query);\n    }\n\n    /** Create a prepared statement */\n    public async prepare<T extends { [key: string]: arrow.DataType } = any>(\n        text: string,\n    ): Promise<AsyncPreparedStatement> {\n        const stmt = await this._bindings.createPrepared(this._conn, text);\n        return new AsyncPreparedStatement<T>(this._bindings, this._conn, stmt);\n    }\n\n    /** Insert an arrow table */\n    public async insertArrowTable(table: arrow.Table, options: ArrowInsertOptions): Promise<void> {\n        const buffer = arrow.tableToIPC(table, 'stream');\n        await this.insertArrowFromIPCStream(buffer, options);\n    }\n    /** Insert an arrow table from an ipc stream */\n    public async insertArrowFromIPCStream(buffer: Uint8Array, options: ArrowInsertOptions): Promise<void> {\n        await this._bindings.insertArrowFromIPCStream(this._conn, buffer, options);\n    }\n    /** Insert csv file from path */\n    public async insertCSVFromPath(text: string, options: CSVInsertOptions): Promise<void> {\n        await this._bindings.insertCSVFromPath(this._conn, text, options);\n    }\n    /** Insert json file from path */\n    public async insertJSONFromPath(text: string, options: JSONInsertOptions): Promise<void> {\n        await this._bindings.insertJSONFromPath(this._conn, text, options);\n    }\n}\n\n/** An async result stream iterator */\nexport class AsyncResultStreamIterator implements AsyncIterable<Uint8Array> {\n    /** First chunk? */\n    protected _first: boolean;\n    /** Reached end of stream? */\n    protected _depleted: boolean;\n    /** In-flight */\n    protected _inFlight: Promise<Uint8Array> | null;\n\n    constructor(\n        protected readonly db: AsyncDuckDB,\n        protected readonly conn: number,\n        protected readonly header: Uint8Array,\n    ) {\n        this._first = true;\n        this._depleted = false;\n        this._inFlight = null;\n    }\n\n    async next(): Promise<IteratorResult<Uint8Array>> {\n        if (this._first) {\n            this._first = false;\n            return { done: false, value: this.header };\n        }\n        if (this._depleted) {\n            return { done: true, value: null };\n        }\n        let buffer: Uint8Array;\n        if (this._inFlight != null) {\n            buffer = await this._inFlight;\n            this._inFlight = null;\n        } else {\n            buffer = await this.db.fetchQueryResults(this.conn);\n        }\n        this._depleted = buffer.length == 0;\n        if (!this._depleted) {\n            this._inFlight = this.db.fetchQueryResults(this.conn);\n        }\n        return {\n            done: this._depleted,\n            value: buffer,\n        };\n    }\n\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\n\n/** A thin helper to bind the prepared statement id */\nexport class AsyncPreparedStatement<T extends { [key: string]: arrow.DataType } = any> {\n    /** The bindings */\n    protected readonly bindings: AsyncDuckDB;\n    /** The connection id */\n    protected readonly connectionId: number;\n    /** The statement id */\n    protected readonly statementId: number;\n\n    /** Constructor */\n    constructor(bindings: AsyncDuckDB, connectionId: number, statementId: number) {\n        this.bindings = bindings;\n        this.connectionId = connectionId;\n        this.statementId = statementId;\n    }\n\n    /** Close a prepared statement */\n    public async close() {\n        await this.bindings.closePrepared(this.connectionId, this.statementId);\n    }\n\n    /** Run a prepared statement */\n    public async query(...params: any[]): Promise<arrow.Table<T>> {\n        const buffer = await this.bindings.runPrepared(this.connectionId, this.statementId, params);\n        const reader = arrow.RecordBatchReader.from<T>(buffer);\n        console.assert(reader.isSync());\n        console.assert(reader.isFile());\n        return new arrow.Table(reader as arrow.RecordBatchFileReader);\n    }\n\n    /** Send a prepared statement */\n    public async send(...params: any[]): Promise<arrow.AsyncRecordBatchStreamReader<T>> {\n        const header = await this.bindings.sendPrepared(this.connectionId, this.statementId, params);\n        const iter = new AsyncResultStreamIterator(this.bindings, this.connectionId, header);\n        const reader = await arrow.RecordBatchReader.from<T>(iter);\n        console.assert(reader.isAsync());\n        console.assert(reader.isStream());\n        return reader as unknown as arrow.AsyncRecordBatchStreamReader<T>; // XXX\n    }\n}\n", "import { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from '../bindings/insert_options';\nimport { LogEntryVariant } from '../log';\nimport { ScriptTokens } from '../bindings/tokens';\nimport { FileStatistics } from '../bindings/file_stats';\nimport { DuckDBConfig } from '../bindings/config';\nimport { WebFile } from '../bindings/web_file';\nimport { InstantiationProgress } from '../bindings/progress';\nimport { DuckDBDataProtocol } from '../bindings';\n\nexport type ConnectionID = number;\nexport type StatementID = number;\n\nexport enum WorkerRequestType {\n    CANCEL_PENDING_QUERY = 'CANCEL_PENDING_QUERY',\n    CLOSE_PREPARED = 'CLOSE_PREPARED',\n    COLLECT_FILE_STATISTICS = 'COLLECT_FILE_STATISTICS',\n    CONNECT = 'CONNECT',\n    COPY_FILE_TO_BUFFER = 'COPY_FILE_TO_BUFFER',\n    COPY_FILE_TO_PATH = 'COPY_FILE_TO_PATH',\n    CREATE_PREPARED = 'CREATE_PREPARED',\n    DISCONNECT = 'DISCONNECT',\n    DROP_FILE = 'DROP_FILE',\n    DROP_FILES = 'DROP_FILES',\n    EXPORT_FILE_STATISTICS = 'EXPORT_FILE_STATISTICS',\n    FETCH_QUERY_RESULTS = 'FETCH_QUERY_RESULTS',\n    FLUSH_FILES = 'FLUSH_FILES',\n    GET_FEATURE_FLAGS = 'GET_FEATURE_FLAGS',\n    GET_TABLE_NAMES = 'GET_TABLE_NAMES',\n    GET_VERSION = 'GET_VERSION',\n    GLOB_FILE_INFOS = 'GLOB_FILE_INFOS',\n    INSERT_ARROW_FROM_IPC_STREAM = 'INSERT_ARROW_FROM_IPC_STREAM',\n    INSERT_CSV_FROM_PATH = 'IMPORT_CSV_FROM_PATH',\n    INSERT_JSON_FROM_PATH = 'IMPORT_JSON_FROM_PATH',\n    INSTANTIATE = 'INSTANTIATE',\n    OPEN = 'OPEN',\n    PING = 'PING',\n    POLL_PENDING_QUERY = 'POLL_PENDING_QUERY',\n    REGISTER_FILE_BUFFER = 'REGISTER_FILE_BUFFER',\n    REGISTER_FILE_HANDLE = 'REGISTER_FILE_HANDLE',\n    REGISTER_FILE_URL = 'REGISTER_FILE_URL',\n    RESET = 'RESET',\n    RUN_PREPARED = 'RUN_PREPARED',\n    RUN_QUERY = 'RUN_QUERY',\n    SEND_PREPARED = 'SEND_PREPARED',\n    START_PENDING_QUERY = 'START_PENDING_QUERY',\n    TOKENIZE = 'TOKENIZE',\n}\n\nexport enum WorkerResponseType {\n    CONNECTION_INFO = 'CONNECTION_INFO',\n    ERROR = 'ERROR',\n    FEATURE_FLAGS = 'FEATURE_FLAGS',\n    FILE_BUFFER = 'FILE_BUFFER',\n    FILE_INFOS = 'FILE_INFOS',\n    FILE_SIZE = 'FILE_SIZE',\n    FILE_STATISTICS = 'FILE_STATISTICS',\n    INSTANTIATE_PROGRESS = 'INSTANTIATE_PROGRESS',\n    LOG = 'LOG',\n    OK = 'OK',\n    PREPARED_STATEMENT_ID = 'PREPARED_STATEMENT_ID',\n    QUERY_PLAN = 'QUERY_PLAN',\n    QUERY_RESULT = 'QUERY_RESULT',\n    QUERY_RESULT_CHUNK = 'QUERY_RESULT_CHUNK',\n    QUERY_RESULT_HEADER = 'QUERY_RESULT_HEADER',\n    QUERY_RESULT_HEADER_OR_NULL = 'QUERY_RESULT_HEADER_OR_NULL',\n    REGISTERED_FILE = 'REGISTERED_FILE',\n    SCRIPT_TOKENS = 'SCRIPT_TOKENS',\n    SUCCESS = 'SUCCESS',\n    TABLE_NAMES = 'TABLE_NAMES',\n    VERSION_STRING = 'VERSION_STRING',\n}\n\nexport type WorkerRequest<T, P> = {\n    readonly messageId: number;\n    readonly type: T;\n    readonly data: P;\n};\n\nexport type WorkerResponse<T, P> = {\n    readonly messageId: number;\n    readonly requestId: number;\n    readonly type: T;\n    readonly data: P;\n};\n\nexport type WorkerTaskReturnType<T extends WorkerTaskVariant> = T extends WorkerTask<any, any, infer P> ? P : never;\n\nexport class WorkerTask<T, D, P> {\n    readonly type: T;\n    readonly data: D;\n    promise: Promise<P>;\n    promiseResolver: (value: P | PromiseLike<P>) => void = () => {};\n    promiseRejecter: (value: any) => void = () => {};\n\n    constructor(type: T, data: D) {\n        this.type = type;\n        this.data = data;\n        this.promise = new Promise<P>(\n            (resolve: (value: P | PromiseLike<P>) => void, reject: (reason?: void) => void) => {\n                this.promiseResolver = resolve;\n                this.promiseRejecter = reject;\n            },\n        );\n    }\n}\n\nexport type WorkerRequestVariant =\n    | WorkerRequest<WorkerRequestType.CLOSE_PREPARED, [ConnectionID, StatementID]>\n    | WorkerRequest<WorkerRequestType.CANCEL_PENDING_QUERY, number>\n    | WorkerRequest<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean]>\n    | WorkerRequest<WorkerRequestType.CONNECT, null>\n    | WorkerRequest<WorkerRequestType.COPY_FILE_TO_BUFFER, string>\n    | WorkerRequest<WorkerRequestType.COPY_FILE_TO_PATH, [string, string]>\n    | WorkerRequest<WorkerRequestType.CREATE_PREPARED, [ConnectionID, string]>\n    | WorkerRequest<WorkerRequestType.DISCONNECT, number>\n    | WorkerRequest<WorkerRequestType.DROP_FILE, string>\n    | WorkerRequest<WorkerRequestType.DROP_FILES, null>\n    | WorkerRequest<WorkerRequestType.EXPORT_FILE_STATISTICS, string>\n    | WorkerRequest<WorkerRequestType.FETCH_QUERY_RESULTS, number>\n    | WorkerRequest<WorkerRequestType.FLUSH_FILES, null>\n    | WorkerRequest<WorkerRequestType.GET_FEATURE_FLAGS, null>\n    | WorkerRequest<WorkerRequestType.GET_TABLE_NAMES, [number, string]>\n    | WorkerRequest<WorkerRequestType.GET_VERSION, null>\n    | WorkerRequest<WorkerRequestType.GLOB_FILE_INFOS, string>\n    | WorkerRequest<\n          WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\n          [number, Uint8Array, ArrowInsertOptions | undefined]\n      >\n    | WorkerRequest<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions]>\n    | WorkerRequest<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions]>\n    | WorkerRequest<WorkerRequestType.INSTANTIATE, [string, string | null]>\n    | WorkerRequest<WorkerRequestType.OPEN, DuckDBConfig>\n    | WorkerRequest<WorkerRequestType.PING, null>\n    | WorkerRequest<WorkerRequestType.POLL_PENDING_QUERY, number>\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array]>\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_HANDLE, [string, any, DuckDBDataProtocol, boolean]>\n    | WorkerRequest<WorkerRequestType.REGISTER_FILE_URL, [string, string, DuckDBDataProtocol, boolean]>\n    | WorkerRequest<WorkerRequestType.RESET, null>\n    | WorkerRequest<WorkerRequestType.RUN_PREPARED, [number, number, any[]]>\n    | WorkerRequest<WorkerRequestType.RUN_QUERY, [number, string]>\n    | WorkerRequest<WorkerRequestType.SEND_PREPARED, [number, number, any[]]>\n    | WorkerRequest<WorkerRequestType.START_PENDING_QUERY, [number, string]>\n    | WorkerRequest<WorkerRequestType.TOKENIZE, string>;\n\nexport type WorkerResponseVariant =\n    | WorkerResponse<WorkerResponseType.CONNECTION_INFO, number>\n    | WorkerResponse<WorkerResponseType.ERROR, any>\n    | WorkerResponse<WorkerResponseType.FEATURE_FLAGS, number>\n    | WorkerResponse<WorkerResponseType.FILE_BUFFER, Uint8Array>\n    | WorkerResponse<WorkerResponseType.FILE_INFOS, WebFile[]>\n    | WorkerResponse<WorkerResponseType.FILE_SIZE, number>\n    | WorkerResponse<WorkerResponseType.FILE_STATISTICS, FileStatistics>\n    | WorkerResponse<WorkerResponseType.INSTANTIATE_PROGRESS, InstantiationProgress>\n    | WorkerResponse<WorkerResponseType.LOG, LogEntryVariant>\n    | WorkerResponse<WorkerResponseType.OK, null>\n    | WorkerResponse<WorkerResponseType.PREPARED_STATEMENT_ID, number>\n    | WorkerResponse<WorkerResponseType.QUERY_PLAN, Uint8Array>\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT, Uint8Array>\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT_CHUNK, Uint8Array>\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT_HEADER, Uint8Array>\n    | WorkerResponse<WorkerResponseType.QUERY_RESULT_HEADER_OR_NULL, Uint8Array | null>\n    | WorkerResponse<WorkerResponseType.SCRIPT_TOKENS, ScriptTokens>\n    | WorkerResponse<WorkerResponseType.SUCCESS, boolean>\n    | WorkerResponse<WorkerResponseType.TABLE_NAMES, string[]>\n    | WorkerResponse<WorkerResponseType.VERSION_STRING, string>;\n\nexport type WorkerTaskVariant =\n    | WorkerTask<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean], null>\n    | WorkerTask<WorkerRequestType.CLOSE_PREPARED, [number, number], null>\n    | WorkerTask<WorkerRequestType.CONNECT, null, ConnectionID>\n    | WorkerTask<WorkerRequestType.COPY_FILE_TO_BUFFER, string, Uint8Array>\n    | WorkerTask<WorkerRequestType.COPY_FILE_TO_PATH, [string, string], null>\n    | WorkerTask<WorkerRequestType.CREATE_PREPARED, [number, string], number>\n    | WorkerTask<WorkerRequestType.DISCONNECT, ConnectionID, null>\n    | WorkerTask<WorkerRequestType.DROP_FILE, string, null>\n    | WorkerTask<WorkerRequestType.DROP_FILES, null, null>\n    | WorkerTask<WorkerRequestType.EXPORT_FILE_STATISTICS, string, FileStatistics>\n    | WorkerTask<WorkerRequestType.FETCH_QUERY_RESULTS, ConnectionID, Uint8Array>\n    | WorkerTask<WorkerRequestType.FLUSH_FILES, null, null>\n    | WorkerTask<WorkerRequestType.GET_FEATURE_FLAGS, null, number>\n    | WorkerTask<WorkerRequestType.GET_TABLE_NAMES, [number, string], string[]>\n    | WorkerTask<WorkerRequestType.GET_VERSION, null, string>\n    | WorkerTask<\n          WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\n          [number, Uint8Array, ArrowInsertOptions | undefined],\n          null\n      >\n    | WorkerTask<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions], null>\n    | WorkerTask<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions], null>\n    | WorkerTask<WorkerRequestType.INSTANTIATE, [string, string | null], null>\n    | WorkerTask<WorkerRequestType.OPEN, DuckDBConfig, null>\n    | WorkerTask<WorkerRequestType.PING, null, null>\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_HANDLE, [string, any, DuckDBDataProtocol, boolean], null>\n    | WorkerTask<WorkerRequestType.REGISTER_FILE_URL, [string, string, DuckDBDataProtocol, boolean], null>\n    | WorkerTask<WorkerRequestType.GLOB_FILE_INFOS, string, WebFile[]>\n    | WorkerTask<WorkerRequestType.RESET, null, null>\n    | WorkerTask<WorkerRequestType.RUN_PREPARED, [number, number, any[]], Uint8Array>\n    | WorkerTask<WorkerRequestType.RUN_QUERY, [ConnectionID, string], Uint8Array>\n    | WorkerTask<WorkerRequestType.SEND_PREPARED, [number, number, any[]], Uint8Array>\n    | WorkerTask<WorkerRequestType.START_PENDING_QUERY, [ConnectionID, string], Uint8Array | null>\n    | WorkerTask<WorkerRequestType.POLL_PENDING_QUERY, ConnectionID, Uint8Array | null>\n    | WorkerTask<WorkerRequestType.CANCEL_PENDING_QUERY, ConnectionID, boolean>\n    | WorkerTask<WorkerRequestType.TOKENIZE, string, ScriptTokens>;\n", "import {\n    WorkerRequestType,\n    WorkerResponseType,\n    WorkerResponseVariant,\n    WorkerTaskVariant,\n    WorkerTask,\n    ConnectionID,\n    WorkerTaskReturnType,\n} from './worker_request';\nimport { AsyncDuckDBBindings } from './async_bindings_interface';\nimport { Logger } from '../log';\nimport { AsyncDuckDBConnection } from './async_connection';\nimport { CSVInsertOptions, JSONInsertOptions, ArrowInsertOptions } from '../bindings/insert_options';\nimport { ScriptTokens } from '../bindings/tokens';\nimport { FileStatistics } from '../bindings/file_stats';\nimport { DuckDBConfig } from '../bindings/config';\nimport { InstantiationProgress } from '../bindings/progress';\nimport { arrowToSQLField } from '../json_typedef';\nimport { WebFile } from '../bindings/web_file';\nimport { DuckDBDataProtocol } from '../bindings';\n\nconst TEXT_ENCODER = new TextEncoder();\n\nexport class AsyncDuckDB implements AsyncDuckDBBindings {\n    /** The message handler */\n    protected readonly _onMessageHandler: (event: MessageEvent) => void;\n    /** The error handler */\n    protected readonly _onErrorHandler: (event: ErrorEvent) => void;\n    /** The close handler */\n    protected readonly _onCloseHandler: () => void;\n\n    /** Instantiate the module */\n    protected _onInstantiationProgress: ((p: InstantiationProgress) => void)[] = [];\n\n    /** The logger */\n    protected readonly _logger: Logger;\n    /** The worker */\n    protected _worker: Worker | null = null;\n    /** The promise for the worker shutdown */\n    protected _workerShutdownPromise: Promise<null> | null = null;\n    /** Make the worker as terminated */\n    protected _workerShutdownResolver: (value: PromiseLike<null> | null) => void = () => {};\n\n    /** The next message id */\n    protected _nextMessageId = 0;\n    /** The pending requests */\n    protected _pendingRequests: Map<number, WorkerTaskVariant> = new Map();\n\n    constructor(logger: Logger, worker: Worker | null = null) {\n        this._logger = logger;\n        this._onMessageHandler = this.onMessage.bind(this);\n        this._onErrorHandler = this.onError.bind(this);\n        this._onCloseHandler = this.onClose.bind(this);\n        if (worker != null) this.attach(worker);\n    }\n\n    /** Get the logger */\n    public get logger(): Logger {\n        return this._logger;\n    }\n\n    /** Attach to worker */\n    protected attach(worker: Worker): void {\n        this._worker = worker;\n        this._worker.addEventListener('message', this._onMessageHandler);\n        this._worker.addEventListener('error', this._onErrorHandler);\n        this._worker.addEventListener('close', this._onCloseHandler);\n        this._workerShutdownPromise = new Promise<null>(\n            (resolve: (value: PromiseLike<null> | null) => void, _reject: (reason?: void) => void) => {\n                this._workerShutdownResolver = resolve;\n            },\n        );\n    }\n\n    /** Detach from worker */\n    public detach(): void {\n        if (!this._worker) return;\n        this._worker.removeEventListener('message', this._onMessageHandler);\n        this._worker.removeEventListener('error', this._onErrorHandler);\n        this._worker.removeEventListener('close', this._onCloseHandler);\n        this._worker = null;\n        this._workerShutdownResolver(null);\n        this._workerShutdownPromise = null;\n        this._workerShutdownResolver = () => {};\n    }\n\n    /** Kill the worker */\n    public async terminate(): Promise<void> {\n        if (!this._worker) return;\n        this._worker.terminate();\n        //await this._workerShutdownPromise; TODO deadlocking in karma?\n        this._worker = null;\n        this._workerShutdownPromise = null;\n        this._workerShutdownResolver = () => {};\n    }\n\n    /** Post a task */\n    protected async postTask<W extends WorkerTaskVariant>(\n        task: W,\n        transfer: ArrayBuffer[] = [],\n    ): Promise<WorkerTaskReturnType<W>> {\n        if (!this._worker) {\n            console.error('cannot send a message since the worker is not set!');\n            return undefined as any;\n        }\n        const mid = this._nextMessageId++;\n        this._pendingRequests.set(mid, task);\n        this._worker.postMessage(\n            {\n                messageId: mid,\n                type: task.type,\n                data: task.data,\n            },\n            transfer,\n        );\n        return (await task.promise) as WorkerTaskReturnType<W>;\n    }\n\n    /** Received a message */\n    protected onMessage(event: MessageEvent): void {\n        // Unassociated responses?\n        const response = event.data as WorkerResponseVariant;\n        switch (response.type) {\n            // Request failed?\n            case WorkerResponseType.LOG: {\n                this._logger.log(response.data);\n                return;\n            }\n            // Call progress callback\n            case WorkerResponseType.INSTANTIATE_PROGRESS: {\n                for (const p of this._onInstantiationProgress) {\n                    p(response.data);\n                }\n                return;\n            }\n        }\n\n        // Get associated task\n        const task = this._pendingRequests.get(response.requestId);\n        if (!task) {\n            console.warn(`unassociated response: [${response.requestId}, ${response.type.toString()}]`);\n            return;\n        }\n        this._pendingRequests.delete(response.requestId);\n\n        // Request failed?\n        if (response.type == WorkerResponseType.ERROR) {\n            // Workaround for Firefox not being able to perform structured-clone on Native Errors\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1556604\n            const e = new Error(response.data.message);\n            e.name = response.data.name;\n            if (Object.getOwnPropertyDescriptor(e, 'stack')?.writable) {\n                e.stack = response.data.stack;\n            }\n            task.promiseRejecter(e);\n            return;\n        }\n\n        // Otherwise differentiate between the tasks first\n        switch (task.type) {\n            case WorkerRequestType.CLOSE_PREPARED:\n            case WorkerRequestType.COLLECT_FILE_STATISTICS:\n            case WorkerRequestType.COPY_FILE_TO_PATH:\n            case WorkerRequestType.DISCONNECT:\n            case WorkerRequestType.DROP_FILE:\n            case WorkerRequestType.DROP_FILES:\n            case WorkerRequestType.FLUSH_FILES:\n            case WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM:\n            case WorkerRequestType.INSERT_CSV_FROM_PATH:\n            case WorkerRequestType.INSERT_JSON_FROM_PATH:\n            case WorkerRequestType.OPEN:\n            case WorkerRequestType.PING:\n            case WorkerRequestType.REGISTER_FILE_BUFFER:\n            case WorkerRequestType.REGISTER_FILE_HANDLE:\n            case WorkerRequestType.REGISTER_FILE_URL:\n            case WorkerRequestType.RESET:\n                if (response.type == WorkerResponseType.OK) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.INSTANTIATE:\n                this._onInstantiationProgress = [];\n                if (response.type == WorkerResponseType.OK) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GLOB_FILE_INFOS:\n                if (response.type == WorkerResponseType.FILE_INFOS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GET_VERSION:\n                if (response.type == WorkerResponseType.VERSION_STRING) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GET_FEATURE_FLAGS:\n                if (response.type == WorkerResponseType.FEATURE_FLAGS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.GET_TABLE_NAMES:\n                if (response.type == WorkerResponseType.TABLE_NAMES) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.TOKENIZE:\n                if (response.type == WorkerResponseType.SCRIPT_TOKENS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.COPY_FILE_TO_BUFFER:\n                if (response.type == WorkerResponseType.FILE_BUFFER) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.EXPORT_FILE_STATISTICS:\n                if (response.type == WorkerResponseType.FILE_STATISTICS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.CONNECT:\n                if (response.type == WorkerResponseType.CONNECTION_INFO) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.RUN_PREPARED:\n            case WorkerRequestType.RUN_QUERY:\n                if (response.type == WorkerResponseType.QUERY_RESULT) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.SEND_PREPARED:\n                if (response.type == WorkerResponseType.QUERY_RESULT_HEADER) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.START_PENDING_QUERY:\n                if (response.type == WorkerResponseType.QUERY_RESULT_HEADER_OR_NULL) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.POLL_PENDING_QUERY:\n                if (response.type == WorkerResponseType.QUERY_RESULT_HEADER_OR_NULL) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.CANCEL_PENDING_QUERY:\n                this._onInstantiationProgress = [];\n                if (response.type == WorkerResponseType.SUCCESS) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.FETCH_QUERY_RESULTS:\n                if (response.type == WorkerResponseType.QUERY_RESULT_CHUNK) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n            case WorkerRequestType.CREATE_PREPARED:\n                if (response.type == WorkerResponseType.PREPARED_STATEMENT_ID) {\n                    task.promiseResolver(response.data);\n                    return;\n                }\n                break;\n        }\n        task.promiseRejecter(new Error(`unexpected response type: ${response.type.toString()}`));\n    }\n\n    /** Received an error */\n    protected onError(event: ErrorEvent): void {\n        console.error(event);\n        console.error(`error in duckdb worker: ${event.message}`);\n        this._pendingRequests.clear();\n    }\n\n    /** The worker was closed */\n    protected onClose(): void {\n        this._workerShutdownResolver(null);\n        if (this._pendingRequests.size != 0) {\n            console.warn(`worker terminated with ${this._pendingRequests.size} pending requests`);\n            return;\n        }\n        this._pendingRequests.clear();\n    }\n\n    /** Reset the duckdb */\n    public async reset(): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.RESET, null, null>(WorkerRequestType.RESET, null);\n        return await this.postTask(task);\n    }\n\n    /** Ping the worker thread */\n    public async ping(): Promise<any> {\n        const task = new WorkerTask<WorkerRequestType.PING, null, null>(WorkerRequestType.PING, null);\n        await this.postTask(task);\n    }\n    /** Try to drop a file */\n    public async dropFile(name: string): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.DROP_FILE, string, null>(WorkerRequestType.DROP_FILE, name);\n        return await this.postTask(task);\n    }\n    /** Try to drop files */\n    public async dropFiles(): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.DROP_FILES, null, null>(WorkerRequestType.DROP_FILES, null);\n        return await this.postTask(task);\n    }\n    /** Flush all files */\n    public async flushFiles(): Promise<null> {\n        const task = new WorkerTask<WorkerRequestType.FLUSH_FILES, null, null>(WorkerRequestType.FLUSH_FILES, null);\n        return await this.postTask(task);\n    }\n\n    /** Open the database */\n    public async instantiate(\n        mainModuleURL: string,\n        pthreadWorkerURL: string | null = null,\n        progress: (progress: InstantiationProgress) => void = _p => {},\n    ): Promise<null> {\n        this._onInstantiationProgress.push(progress);\n        const task = new WorkerTask<WorkerRequestType.INSTANTIATE, [string, string | null], null>(\n            WorkerRequestType.INSTANTIATE,\n            [mainModuleURL, pthreadWorkerURL],\n        );\n        return await this.postTask(task);\n    }\n\n    /** Get the version */\n    public async getVersion(): Promise<string> {\n        const task = new WorkerTask<WorkerRequestType.GET_VERSION, null, string>(WorkerRequestType.GET_VERSION, null);\n        const version = await this.postTask(task);\n        return version;\n    }\n\n    /** Get the feature flags */\n    public async getFeatureFlags(): Promise<number> {\n        const task = new WorkerTask<WorkerRequestType.GET_FEATURE_FLAGS, null, number>(\n            WorkerRequestType.GET_FEATURE_FLAGS,\n            null,\n        );\n        const feature = await this.postTask(task);\n        return feature;\n    }\n\n    /** Open a new database */\n    public async open(config: DuckDBConfig): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.OPEN, DuckDBConfig, null>(WorkerRequestType.OPEN, config);\n        await this.postTask(task);\n    }\n\n    /** Tokenize a script text */\n    public async tokenize(text: string): Promise<ScriptTokens> {\n        const task = new WorkerTask<WorkerRequestType.TOKENIZE, string, ScriptTokens>(WorkerRequestType.TOKENIZE, text);\n        const tokens = await this.postTask(task);\n        return tokens;\n    }\n\n    /** Connect to the database */\n    public async connectInternal(): Promise<number> {\n        const task = new WorkerTask<WorkerRequestType.CONNECT, null, ConnectionID>(WorkerRequestType.CONNECT, null);\n        return await this.postTask(task);\n    }\n\n    /** Connect to the database */\n    public async connect(): Promise<AsyncDuckDBConnection> {\n        const cid = await this.connectInternal();\n        return new AsyncDuckDBConnection(this, cid);\n    }\n\n    /** Disconnect from the database */\n    public async disconnect(conn: ConnectionID): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.DISCONNECT, ConnectionID, null>(\n            WorkerRequestType.DISCONNECT,\n            conn,\n        );\n        await this.postTask(task);\n    }\n\n    /** Run a query */\n    public async runQuery(conn: ConnectionID, text: string): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.RUN_QUERY, [ConnectionID, string], Uint8Array>(\n            WorkerRequestType.RUN_QUERY,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n\n    /** Start a pending query */\n    public async startPendingQuery(conn: ConnectionID, text: string): Promise<Uint8Array | null> {\n        const task = new WorkerTask<WorkerRequestType.START_PENDING_QUERY, [ConnectionID, string], Uint8Array | null>(\n            WorkerRequestType.START_PENDING_QUERY,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n    /** Poll a pending query */\n    public async pollPendingQuery(conn: ConnectionID): Promise<Uint8Array | null> {\n        const task = new WorkerTask<WorkerRequestType.POLL_PENDING_QUERY, ConnectionID, Uint8Array | null>(\n            WorkerRequestType.POLL_PENDING_QUERY,\n            conn,\n        );\n        return await this.postTask(task);\n    }\n    /** Cancel a pending query */\n    public async cancelPendingQuery(conn: ConnectionID): Promise<boolean> {\n        const task = new WorkerTask<WorkerRequestType.CANCEL_PENDING_QUERY, ConnectionID, boolean>(\n            WorkerRequestType.CANCEL_PENDING_QUERY,\n            conn,\n        );\n        return await this.postTask(task);\n    }\n\n    /** Fetch query results */\n    public async fetchQueryResults(conn: ConnectionID): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.FETCH_QUERY_RESULTS, ConnectionID, Uint8Array>(\n            WorkerRequestType.FETCH_QUERY_RESULTS,\n            conn,\n        );\n        return await this.postTask(task);\n    }\n\n    /** Get table names */\n    public async getTableNames(conn: number, text: string): Promise<string[]> {\n        const task = new WorkerTask<WorkerRequestType.GET_TABLE_NAMES, [number, string], string[]>(\n            WorkerRequestType.GET_TABLE_NAMES,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n\n    /** Prepare a statement and return its identifier */\n    public async createPrepared(conn: number, text: string): Promise<number> {\n        const task = new WorkerTask<WorkerRequestType.CREATE_PREPARED, [number, string], number>(\n            WorkerRequestType.CREATE_PREPARED,\n            [conn, text],\n        );\n        return await this.postTask(task);\n    }\n    /** Close a prepared statement */\n    public async closePrepared(conn: number, statement: number): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.CLOSE_PREPARED, [number, number], null>(\n            WorkerRequestType.CLOSE_PREPARED,\n            [conn, statement],\n        );\n        await this.postTask(task);\n    }\n    /** Execute a prepared statement and return the full result */\n    public async runPrepared(conn: number, statement: number, params: any[]): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.RUN_PREPARED, [ConnectionID, number, any[]], Uint8Array>(\n            WorkerRequestType.RUN_PREPARED,\n            [conn, statement, params],\n        );\n        return await this.postTask(task);\n    }\n    /** Execute a prepared statement and stream the result */\n    public async sendPrepared(conn: number, statement: number, params: any[]): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.SEND_PREPARED, [ConnectionID, number, any[]], Uint8Array>(\n            WorkerRequestType.SEND_PREPARED,\n            [conn, statement, params],\n        );\n        return await this.postTask(task);\n    }\n    /** Glob file infos */\n    public async globFiles(path: string): Promise<WebFile[]> {\n        const task = new WorkerTask<WorkerRequestType.GLOB_FILE_INFOS, string, WebFile[]>(\n            WorkerRequestType.GLOB_FILE_INFOS,\n            path,\n        );\n        return await this.postTask(task);\n    }\n    /** Register file text */\n    public async registerFileText(name: string, text: string): Promise<void> {\n        const buffer = TEXT_ENCODER.encode(text);\n        await this.registerFileBuffer(name, buffer);\n    }\n    /** Register a file path. */\n    public async registerFileURL(\n        name: string,\n        url: string,\n        proto: DuckDBDataProtocol,\n        directIO: boolean,\n    ): Promise<void> {\n        if (url === undefined) {\n            url = name;\n        }\n        const task = new WorkerTask<\n            WorkerRequestType.REGISTER_FILE_URL,\n            [string, string, DuckDBDataProtocol, boolean],\n            null\n        >(WorkerRequestType.REGISTER_FILE_URL, [name, url, proto, directIO]);\n        await this.postTask(task);\n    }\n\n    /** Register an empty file buffer. */\n    public async registerEmptyFileBuffer(name: string): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>(\n            WorkerRequestType.REGISTER_FILE_BUFFER,\n            [name, new Uint8Array()],\n        );\n        await this.postTask(task);\n    }\n\n    /** Register a file buffer. */\n    public async registerFileBuffer(name: string, buffer: Uint8Array): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.REGISTER_FILE_BUFFER, [string, Uint8Array], null>(\n            WorkerRequestType.REGISTER_FILE_BUFFER,\n            [name, buffer],\n        );\n        await this.postTask(task, [buffer.buffer]);\n    }\n\n    /** Register a file handle. */\n    public async registerFileHandle<HandleType>(\n        name: string,\n        handle: HandleType,\n        protocol: DuckDBDataProtocol,\n        directIO: boolean,\n    ): Promise<void> {\n        const task = new WorkerTask<\n            WorkerRequestType.REGISTER_FILE_HANDLE,\n            [string, any, DuckDBDataProtocol, boolean],\n            null\n        >(WorkerRequestType.REGISTER_FILE_HANDLE, [name, handle, protocol, directIO]);\n        await this.postTask(task, []);\n    }\n\n    /** Enable file statistics */\n    public async collectFileStatistics(name: string, enable: boolean): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.COLLECT_FILE_STATISTICS, [string, boolean], null>(\n            WorkerRequestType.COLLECT_FILE_STATISTICS,\n            [name, enable],\n        );\n        await this.postTask(task, []);\n    }\n\n    /** Export file statistics */\n    public async exportFileStatistics(name: string): Promise<FileStatistics> {\n        const task = new WorkerTask<WorkerRequestType.EXPORT_FILE_STATISTICS, string, FileStatistics>(\n            WorkerRequestType.EXPORT_FILE_STATISTICS,\n            name,\n        );\n        return await this.postTask(task, []);\n    }\n\n    /** Copy a file to a buffer. */\n    public async copyFileToBuffer(name: string): Promise<Uint8Array> {\n        const task = new WorkerTask<WorkerRequestType.COPY_FILE_TO_BUFFER, string, Uint8Array>(\n            WorkerRequestType.COPY_FILE_TO_BUFFER,\n            name,\n        );\n        return await this.postTask(task);\n    }\n\n    /** Copy a file to a path. */\n    public async copyFileToPath(name: string, path: string): Promise<void> {\n        const task = new WorkerTask<WorkerRequestType.COPY_FILE_TO_PATH, [string, string], null>(\n            WorkerRequestType.COPY_FILE_TO_PATH,\n            [name, path],\n        );\n        await this.postTask(task);\n    }\n\n    /** Insert arrow from an ipc stream */\n    public async insertArrowFromIPCStream(\n        conn: ConnectionID,\n        buffer: Uint8Array,\n        options?: ArrowInsertOptions,\n    ): Promise<void> {\n        if (buffer.length == 0) return;\n        // Pass to the worker\n        const task = new WorkerTask<\n            WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM,\n            [number, Uint8Array, ArrowInsertOptions | undefined],\n            null\n        >(WorkerRequestType.INSERT_ARROW_FROM_IPC_STREAM, [conn, buffer, options]);\n        await this.postTask(task, [buffer.buffer]);\n    }\n    /** Insert a csv file */\n    public async insertCSVFromPath(conn: ConnectionID, path: string, options: CSVInsertOptions): Promise<void> {\n        // Flatten the table options\n        if (options.columns !== undefined) {\n            const out = [];\n            for (const k in options.columns) {\n                const type = options.columns[k];\n                out.push(arrowToSQLField(k, type));\n            }\n            options.columnsFlat = out;\n            delete options.columns;\n        }\n\n        // Pass to the worker\n        const task = new WorkerTask<WorkerRequestType.INSERT_CSV_FROM_PATH, [number, string, CSVInsertOptions], null>(\n            WorkerRequestType.INSERT_CSV_FROM_PATH,\n            [conn, path, options],\n        );\n        await this.postTask(task);\n    }\n    /** Insert a json file */\n    public async insertJSONFromPath(conn: ConnectionID, path: string, options: JSONInsertOptions): Promise<void> {\n        // Flatten the table options\n        if (options.columns !== undefined) {\n            const out = [];\n            for (const k in options.columns) {\n                const type = options.columns[k];\n                out.push(arrowToSQLField(k, type));\n            }\n            options.columnsFlat = out;\n            delete options.columns;\n        }\n\n        // Pass to the worker\n        const task = new WorkerTask<WorkerRequestType.INSERT_JSON_FROM_PATH, [number, string, JSONInsertOptions], null>(\n            WorkerRequestType.INSERT_JSON_FROM_PATH,\n            [conn, path, options],\n        );\n        await this.postTask(task);\n    }\n}\n", "import Worker from 'web-worker';\n\nexport async function createWorker(url: string) {\n    const request = new Request(url);\n    const workerScript = await fetch(request);\n    const workerURL = URL.createObjectURL(await workerScript.blob());\n    return new Worker(workerURL);\n}\n", "import * as duckdb from '../src/';\nimport { Vector } from 'apache-arrow';\nimport { DuckDBQueryConfig } from '../src/';\n\n// The max interval in microsec from DuckDB is 83 years 3 months 999 days 00:16:39.999999, with months as 30 days.\n// Note that due to Arrow JS not supporting the duration type, the castDurationToInterval option is used for intervals.\n// This has a side-effect that while the value is in microseconds, it only has millisecond accuracy. This is\n// because DuckDB emits intervals in milliseconds and the Arrow Time64 type does not support milliseconds as unit.\n//const MAX_INTERVAL_US = (((83 * (12 * 30) + 3 * 30 + 999) * 24 * 60 + 16) * 60 + 39) * 1000000 + 999000;\n\n// JS Date at +/-8640000000000000ms\nconst MINIMUM_DATE_STR = '-271821-04-20';\nconst MINIMUM_DATE = new Date(Date.UTC(-271821, 3, 20));\nconst MAXIMUM_DATE_STR = '275760-09-13';\nconst MAXIMUM_DATE = new Date(Date.UTC(275760, 8, 13));\n\n// All columns contain 3 values: [min_value, max_value, null]\ntype AnswerObjectType = {\n    [key: string]: any[];\n};\n\ninterface AllTypesTest {\n    name: string;\n    query: string;\n    skip: string[];\n    answerMap: AnswerObjectType;\n    answerCount: number;\n    queryConfig: DuckDBQueryConfig | null;\n}\n\n// These types currently do not work in DuckDB-WASM\n// timestamp_xx and date_tz types will soon be fully supported by duckdb and should be added then.\n// hugeint, dec_18_3, dec38_10 and uuid require JS BigInts for full support, which is currently not supported by ArrowJS\nconst NOT_IMPLEMENTED_TYPES = [\n    'timestamp_s',\n    'timestamp_ms',\n    'timestamp_ns',\n    'time_tz',\n    'timestamp_tz',\n    'hugeint',\n    'dec_18_6',\n    'dec38_10',\n    'uuid',\n    'map',\n    'json',\n    'date_array',\n    'timestamp_array',\n    'timestamptz_array',\n];\n\n// These types are supported, but not the full range returned from the test_all_types() table function, here we define\n// the limits we do expect to be supported.\nconst PARTIALLY_IMPLEMENTED_TYPES = ['date', 'timestamp'];\nconst PARTIALLY_IMPLEMENTED_ANSWER_MAP: AnswerObjectType = {\n    date: [MINIMUM_DATE.valueOf(), MAXIMUM_DATE.valueOf(), null],\n    timestamp: [MINIMUM_DATE.valueOf(), MAXIMUM_DATE.valueOf(), null],\n};\n\n// Subqueries that return the limits of the subset of the full range that is implemented\nconst PARTIALLY_IMPLEMENTED_TYPES_SUBSTITUTIONS = [\n    `(SELECT array_extract(['${MINIMUM_DATE_STR}'::Date,'${MAXIMUM_DATE_STR}'::Date,null],i + 1)) as date`,\n    `(SELECT array_extract(['${MINIMUM_DATE_STR}'::Timestamp,'${MAXIMUM_DATE_STR}'::Timestamp,null],i + 1)) as timestamp`,\n];\n\n// These types do not work with default configuration, but have\nconst TYPES_REQUIRING_CUSTOM_CONFIG = ['dec_4_1', 'dec_9_4'];\n\n// Types that are fully supported.\nconst FULLY_IMPLEMENTED_ANSWER_MAP: AnswerObjectType = {\n    bool: [false, true, null],\n    tinyint: [-128, 127, null],\n    smallint: [-32768, 32767, null],\n    int: [-2147483648, 2147483647, null],\n    utinyint: [0, 255, null],\n    usmallint: [0, 65535, null],\n    uint: [0, 4294967295, null],\n    ubigint: [BigInt(0), BigInt('18446744073709551615'), null],\n    bigint: [BigInt('-9223372036854775808'), BigInt('9223372036854775807'), null],\n\n    // Note that we multiply by thousand (and add 999 for the max) because the value returned by DuckDB is in microseconds,\n    // whereas the Date object is in milliseconds.\n    time: [BigInt(0), BigInt(new Date('1970-01-01T23:59:59.999+00:00').valueOf()) * BigInt(1000) + BigInt(999), null],\n    interval: [new Int32Array([0,0]),  new Int32Array([0,0]), null],\n\n    float: [-3.4028234663852886e38, 3.4028234663852886e38, null],\n    double: [-1.7976931348623157e308, 1.7976931348623157e308, null],\n    varchar: ['\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86', 'goo\\x00se', null],\n    small_enum: ['DUCK_DUCK_ENUM', 'GOOSE', null],\n    medium_enum: ['enum_0', 'enum_299', null],\n    large_enum: ['enum_0', 'enum_69999', null],\n\n    int_array: [[], [42, 999, null, null, -42], null],\n    double_array: [[], [42.0, NaN, Infinity, -Infinity, null, -42.0], null],\n    varchar_array: [[], ['\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86', 'goose', null, ''], null],\n    nested_int_array: [[], [[], [42, 999, null, null, -42], null, [], [42, 999, null, null, -42]], null],\n\n    struct: ['{\"a\":null,\"b\":null}', '{\"a\":42,\"b\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\"}', null],\n    struct_of_arrays: [\n        '{\"a\":null,\"b\":null}',\n        '{\"a\":[42,999,null,null,-42],\"b\":[\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\",\"goose\",null,\"\"]}',\n        null,\n    ],\n    array_of_structs: [[], ['{\"a\":null,\"b\":null}', '{\"a\":42,\"b\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\"}', null], null],\n\n    // XXX sometimes throws\n    // map: ['{}', '{\"key1\":\"\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\uD83E\uDD86\",\"key2\":\"goose\"}', null],\n    blob: [\n        Uint8Array.from([\n            116, 104, 105, 115, 105, 115, 97, 108, 111, 110, 103, 98, 108, 111, 98, 0, 119, 105, 116, 104, 110, 117,\n            108, 108, 98, 121, 116, 101, 115,\n        ]),\n        Uint8Array.from([0, 0, 0, 97]),\n        null,\n    ],\n};\n\n// Replacements for the values we knowingly don't support from the test_all_types query\nconst REPLACE_COLUMNS = PARTIALLY_IMPLEMENTED_TYPES.concat(NOT_IMPLEMENTED_TYPES).concat(TYPES_REQUIRING_CUSTOM_CONFIG);\n\nfunction unpack(v: any): any {\n    if (v === null) return null;\n\n    if (v instanceof Vector) {\n        const ret = Array.from(v.toArray());\n        for (let i = 0; i < ret.length; i++) {\n            if (!v.isValid(i)) {\n                ret[i] = null;\n            }\n        }\n        return unpack(ret);\n    } else if (v instanceof Array) {\n        const ret: any = [];\n        for (let i = 0; i < v.length; i++) {\n            ret[i] = unpack(v[i]);\n        }\n        return ret;\n    } else if (v instanceof Uint8Array) {\n        return v;\n    } else if (v.toJSON instanceof Function) {\n        return JSON.stringify(v.toJSON());\n    }\n\n    return v;\n}\n\nfunction getValue(x: any): any {\n    if (typeof x?.valueOf === 'function') {\n        return x.valueOf();\n    } else {\n        return x;\n    }\n}\n\nconst ALL_TYPES_TEST: AllTypesTest[] = [\n    {\n        name: 'fully supported types',\n        query: `SELECT * REPLACE('not_implemented' as map) FROM test_all_types()`,\n        skip: REPLACE_COLUMNS,\n        answerMap: FULLY_IMPLEMENTED_ANSWER_MAP,\n        answerCount: REPLACE_COLUMNS.length + Object.keys(FULLY_IMPLEMENTED_ANSWER_MAP).length,\n        queryConfig: null,\n    },\n    {\n        name: 'partially supported types',\n        query: `SELECT ${PARTIALLY_IMPLEMENTED_TYPES_SUBSTITUTIONS.join(', ')}\n                FROM range(0, 3) tbl(i)`,\n        skip: [],\n        answerMap: PARTIALLY_IMPLEMENTED_ANSWER_MAP,\n        answerCount: PARTIALLY_IMPLEMENTED_TYPES.length,\n        queryConfig: null,\n    },\n    {\n        name: 'types with custom config',\n        query: `SELECT ${TYPES_REQUIRING_CUSTOM_CONFIG.join(',')} FROM test_all_types()`,\n        skip: [],\n        answerMap: {\n            dec_4_1: [-999.9000000000001, 999.9000000000001, null],\n            dec_9_4: [-99999.99990000001, 99999.99990000001, null],\n        },\n        answerCount: TYPES_REQUIRING_CUSTOM_CONFIG.length,\n        queryConfig: {\n            castDecimalToDouble: true,\n        },\n    },\n];\n\nexport function testAllTypes(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection | null;\n\n    beforeEach(() => {\n        db().flushFiles();\n    });\n\n    afterEach(() => {\n        if (conn) {\n            conn.close();\n            conn = null;\n        }\n        db().flushFiles();\n        db().dropFiles();\n    });\n    describe('Test All Types', () => {\n        for (const test of ALL_TYPES_TEST) {\n            it(test.name, () => {\n                if (test.queryConfig) db().open({ query: test.queryConfig });\n\n                conn = db().connect();\n\n                const results = conn.query(test.query);\n                expect(results.numCols).toEqual(test.answerCount);\n\n                const skip = new Map();\n                for (const s of test.skip) {\n                    skip.set(s, true);\n                }\n                for (let i = 0; i < results.numCols; i++) {\n                    const name = results.schema.fields[i].name;\n                    if (name == \"bit\")\n                        continue;\n                    const col = results.getChildAt(i);\n                    if (skip.get(name)) continue;\n                    expect(col).not.toBeNull();\n                    expect(col?.length).not.toEqual(0);\n\n                    expect(unpack(getValue(col!.get(0))))\n                       .withContext(name)\n                       .toEqual(test.answerMap[name][0]); // Min\n                    expect(unpack(getValue(col!.get(1))))\n                       .withContext(name)\n                       .toEqual(test.answerMap[name][1]); // Max\n                    expect(col!.get(2))\n                       .withContext(name)\n                       .toEqual(test.answerMap[name][2]); // Null\n                }\n            });\n        }\n    });\n}\n\nexport function testAllTypesAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n\n    describe('Test All Types Async', () => {\n        for (const test of ALL_TYPES_TEST) {\n            it(test.name, async () => {\n                if (test.queryConfig) db().open({ query: test.queryConfig });\n\n                conn = await db().connect();\n                const results = await conn.query(test.query);\n                expect(results.numCols).toEqual(test.answerCount);\n\n                const skip = new Map();\n                for (const s of test.skip) {\n                    skip.set(s, true);\n                }\n                for (let i = 0; i < results.numCols; i++) {\n                    const name = results.schema.fields[i].name;\n                    if (name == \"bit\")\n                        continue;\n                    const col = results.getChildAt(i);\n                    if (skip.get(name)) continue;\n                    expect(col).not.toBeNull();\n                    expect(col?.length).not.toEqual(0);\n\n                    expect(Object.keys(test.answerMap)).toContain(name);\n                    expect(unpack(getValue(col!.get(0))))\n                        .withContext(name + '|' + col?.toString() + '|[0]')\n                        .toEqual(test.answerMap[name][0]); // Min\n                    expect(unpack(getValue(col!.get(1))))\n                        .withContext(name + '|' + col?.toString() + '|[1]')\n                        .toEqual(test.answerMap[name][1]); // Max\n                    expect(col!.get(2))\n                        .withContext(name + '|' + col?.toString() + '|[2]')\n                        .toEqual(test.answerMap[name][2]); // Null\n                }\n            });\n        }\n    });\n}\n", "import * as duckdb from '../src/';\nimport { getS3Params, S3Params, S3PayloadParams, createS3Headers, uriEncode, getHTTPUrl } from '../src/utils';\nimport { AsyncDuckDBConnection, DuckDBBindings, DuckDBBindingsBase, DuckDBModule } from '../src/';\nimport BROWSER_RUNTIME from '../src/bindings/runtime_browser';\n\n// S3 config for tests\nconst BUCKET_NAME = 'test-bucket';\nconst ACCESS_KEY_ID = 'S3RVER';\nconst ACCESS_KEY_SECRET = 'S3RVER';\nconst S3_ENDPOINT = 'http://localhost:4923';\nconst S3_REGION = 'eu-west-1';\n\nenum AWSConfigType {\n    EMPTY,\n    VALID,\n    INVALID,\n}\nconst setAwsConfig = async function (conn: AsyncDuckDBConnection, type: AWSConfigType = AWSConfigType.VALID) {\n    switch (type) {\n        case AWSConfigType.EMPTY:\n            await conn.query(\"SET s3_region='';\");\n            await conn.query(\"SET s3_access_key_id='';\");\n            await conn.query(\"SET s3_secret_access_key='';\");\n            await conn.query(\"SET s3_session_token='';\");\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\n            break;\n        case AWSConfigType.VALID:\n            await conn.query(`SET s3_region='${S3_REGION}';`);\n            await conn.query(`SET s3_access_key_id='${ACCESS_KEY_ID}';`);\n            await conn.query(`SET s3_secret_access_key='${ACCESS_KEY_SECRET}';`);\n            await conn.query(\"SET s3_session_token='';\");\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\n            break;\n        case AWSConfigType.INVALID:\n            await conn.query(\"SET s3_region='a-very-remote-and-non-existent-s3-region';\");\n            await conn.query(\"SET s3_access_key_id='THISACCESSKEYIDISNOTVALID';\");\n            await conn.query(\"SET s3_secret_access_key='THISSECRETACCESSKEYISNOTVALID';\");\n            await conn.query(\"SET s3_session_token='INVALIDSESSIONTOKEN';\");\n            await conn.query(`SET s3_endpoint='${S3_ENDPOINT}';`);\n            break;\n    }\n};\n\nexport function testHTTPFS(sdb: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection | null;\n\n    const getModule = function () {\n        let module: DuckDBModule | null = null;\n        conn!.useUnsafe((bindings: DuckDBBindings, con_number: number) => {\n            module = (bindings as DuckDBBindingsBase).mod;\n        });\n        expect(module).toBeDefined();\n        return module;\n    };\n    const reset = async () => {\n        sdb().reset();\n        conn = sdb().connect();\n    };\n    beforeEach(async () => await reset());\n    afterEach(async () => await reset());\n\n    describe('HTTPFS', () => {\n        it('s3 config is set correctly', async () => {\n            const module = getModule();\n\n            // Default values are empty\n            const globalFileInfo = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            const cacheEpoch = globalFileInfo!.cacheEpoch;\n            expect(globalFileInfo?.s3Config).toBeDefined();\n            expect(globalFileInfo?.s3Config?.region).toEqual('');\n            expect(globalFileInfo?.s3Config?.accessKeyId).toEqual('');\n            expect(globalFileInfo?.s3Config?.secretAccessKey).toEqual('');\n            expect(globalFileInfo?.s3Config?.sessionToken).toEqual('');\n            expect(globalFileInfo?.s3Config?.endpoint).toEqual('');\n\n            // Confirm settings are correctly set\n            conn!.query(\"SET s3_region='a-very-remote-and-non-existent-s3-region';\");\n            conn!.query(\"SET s3_access_key_id='THISACCESSKEYIDISNOTVALID';\");\n            conn!.query(\"SET s3_secret_access_key='THISSECRETACCESSKEYISNOTVALID';\");\n            conn!.query(\"SET s3_session_token='ANICESESSIONTOKEN';\");\n            conn!.query(\"SET s3_endpoint='s3.some.sort.of.cloud';\");\n            const globalFileInfoUpdated = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoUpdated?.s3Config).toBeDefined();\n            expect(globalFileInfoUpdated?.cacheEpoch).toEqual(cacheEpoch + 5);\n            const params = getS3Params(globalFileInfoUpdated?.s3Config, 's3://test-bucket/testfile.txt', 'GET');\n            expect(params.url).toEqual('/testfile.txt');\n            expect(params.query).toEqual('');\n            expect(params.host).toEqual('test-bucket.s3.some.sort.of.cloud');\n            expect(params.region).toEqual('a-very-remote-and-non-existent-s3-region');\n            expect(params.service).toEqual('s3');\n            expect(params.method).toEqual('GET');\n            expect(params.accessKeyId).toEqual('THISACCESSKEYIDISNOTVALID');\n            expect(params.secretAccessKey).toEqual('THISSECRETACCESSKEYISNOTVALID');\n            expect(params.sessionToken).toEqual('ANICESESSIONTOKEN');\n\n            // Cover full http endpoint config\n            conn!.query(\"SET s3_endpoint='http://localhost:1337';\");\n            const globalFileInfoFullHttpEndpoint = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            const paramsFullHttpEndpoint = getS3Params(\n                globalFileInfoFullHttpEndpoint?.s3Config,\n                's3://test-bucket/testfile.txt',\n                'GET',\n            );\n            expect(paramsFullHttpEndpoint.host).toEqual('localhost:1337');\n\n            // Reset should clear config\n            await reset();\n            const globalFileInfoCleared = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            const paramsCleared = getS3Params(globalFileInfoCleared?.s3Config, 's3://test-bucket/testfile.txt', 'GET');\n            expect(paramsCleared.url).toEqual('/testfile.txt');\n            expect(paramsCleared.query).toEqual('');\n            expect(paramsCleared.host).toEqual('test-bucket.s3.amazonaws.com');\n            expect(paramsCleared.region).toEqual('');\n            expect(paramsCleared.service).toEqual('s3');\n            expect(paramsCleared.method).toEqual('GET');\n            expect(paramsCleared.accessKeyId).toEqual('');\n            expect(paramsCleared.secretAccessKey).toEqual('');\n            expect(paramsCleared.sessionToken).toEqual('');\n        });\n\n        it('url parsing is correct', () => {\n            const module = getModule();\n\n            conn!.query(\"SET s3_endpoint='';\");\n            const globalFileInfoDefault = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoDefault?.s3Config).toBeDefined();\n            const defaultUrl = getHTTPUrl(globalFileInfoDefault?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\n            expect(defaultUrl).toEqual(`https://${BUCKET_NAME}.s3.amazonaws.com/test-file.csv`);\n\n            conn!.query(\"SET s3_endpoint='https://duckdblabs.com';\");\n            const globalFileInfoFullUrl = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoFullUrl?.s3Config).toBeDefined();\n            const fullUrl = getHTTPUrl(globalFileInfoFullUrl?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\n            expect(fullUrl).toEqual(`https://duckdblabs.com/${BUCKET_NAME}/test-file.csv`);\n\n            conn!.query(\"SET s3_endpoint='duckdblabs.com';\");\n            const globalFileInfoDomain = BROWSER_RUNTIME.getGlobalFileInfo(module!);\n            expect(globalFileInfoDomain?.s3Config).toBeDefined();\n            const domainOnlyUrl = getHTTPUrl(globalFileInfoDomain?.s3Config, `s3://${BUCKET_NAME}/test-file.csv`);\n            expect(domainOnlyUrl).toEqual(`https://${BUCKET_NAME}.duckdblabs.com/test-file.csv`);\n        });\n\n        // validate authorization headers for known requests, based on: https://czak.pl/2015/09/15/s3-rest-api-with-curl.html\n        it('s3 helper passes validation', () => {\n            const testParams1: S3Params = {\n                url: '/',\n                query: '',\n                host: 'my-precious-bucket.s3.amazonaws.com',\n                region: 'us-east-1',\n                service: 's3',\n                method: 'GET',\n                accessKeyId: 'AKIAIOSFODNN7EXAMPLE',\n                sessionToken: '',\n                dateNow: '20150915',\n                datetimeNow: '20150915T124500Z',\n            };\n            const result = createS3Headers(testParams1).get('Authorization');\n            expect(result).toEqual(\n                'AWS4-HMAC-SHA256 Credential=AKIAIOSFODNN7EXAMPLE/20150915/us-east-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=182072eb53d85c36b2d791a1fa46a12d23454ec1e921b02075c23aee40166d5a',\n            );\n\n            const canonical_query_string = 'delimiter=%2F&encoding-type=url&list-type=2&prefix='; // aws s3 ls <bucket>\n            const testParams2: S3Params = {\n                url: '/',\n                query: canonical_query_string,\n                host: 'my-precious-bucket.s3.eu-west-1.amazonaws.com',\n                region: 'eu-west-1',\n                service: 's3',\n                method: 'GET',\n                accessKeyId: 'ASIAYSPIOYDTHTBIITVC',\n                sessionToken:\n                    'IQoJb3JpZ2luX2VjENX//////////wEaCWV1LXdlc3QtMSJHMEUCIQDfjzs9BYHrEXDMU/NR+PHV1uSTr7CSVSQdjKSfiPRLdgIgCCztF0VMbi9+uHHAfBVKhV4t9MlUrQg3VAOIsLxrWyoqlAIIHRAAGgw1ODk0MzQ4OTY2MTQiDOGl2DsYxENcKCbh+irxARe91faI+hwUhT60sMGRFg0GWefKnPclH4uRFzczrDOcJlAAaQRJ7KOsT8BrJlrY1jSgjkO7PkVjPp92vi6lJX77bg99MkUTJActiOKmd84XvAE5bFc/jFbqechtBjXzopAPkKsGuaqAhCenXnFt6cwq+LZikv/NJGVw7TRphLV+Aq9PSL9XwdzIgsW2qXwe1c3rxDNj53yStRZHVggdxJ0OgHx5v040c98gFphzSULHyg0OY6wmCMTYcswpb4kO2IIi6AiD9cY25TlwPKRKPi5CdBsTPnyTeW62u7PvwK0fTSy4ZuJUuGKQnH2cKmCXquEwoOHEiQY6nQH9fzY/EDGHMRxWWhxu0HiqIfsuFqC7GS0p0ToKQE+pzNsvVwMjZc+KILIDDQpdCWRIwu53I5PZy2Cvk+3y4XLvdZKQCsAKqeOc4c94UAS4NmUT7mCDOuRV0cLBVM8F0JYBGrUxyI+YoIvHhQWmnRLuKgTb5PkF7ZWrXBHFWG5/tZDOvBbbaCWTlRCL9b0Vpg5+BM/81xd8jChP4w83',\n                dateNow: '20210904',\n                datetimeNow: '20210904T121746Z',\n            };\n            const result2 = createS3Headers(testParams2).get('Authorization');\n            expect(result2).toEqual(\n                'AWS4-HMAC-SHA256 Credential=ASIAYSPIOYDTHTBIITVC/20210904/eu-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token, Signature=4d9d6b59d7836b6485f6ad822de97be40287da30347d83042ea7fbed530dc4c0',\n            );\n\n            const testParams3: S3Params = {\n                url: '/correct_auth_test.csv',\n                query: '',\n                host: 'test-bucket-ceiveran.s3.amazonaws.com',\n                region: 'eu-west-1',\n                service: 's3',\n                method: 'PUT',\n                accessKeyId: 'S3RVER',\n                secretAccessKey: 'S3RVER',\n                sessionToken: '',\n                dateNow: '20220121',\n                datetimeNow: '20220121T141452Z',\n            };\n            const test3PayloadParams: S3PayloadParams = {\n                contentHash: '28a0cf6ac5c4cb73793091fe6ecc6a68bf90855ac9186158748158f50241bb0c',\n                contentType: 'text/data;charset=utf-8',\n            };\n            const result3 = createS3Headers(testParams3, test3PayloadParams).get('Authorization');\n            expect(result3).toEqual(\n                'AWS4-HMAC-SHA256 Credential=S3RVER/20220121/eu-west-1/s3/aws4_request, SignedHeaders=content-type;host;x-amz-content-sha256;x-amz-date, Signature=5d9a6cbfaa78a6d0f2ab7df0445e2f1cc9c80cd3655ac7de9e7219c036f23f02',\n            );\n\n            expect(uriEncode('/category=Books/')).toEqual('/category%3DBooks/');\n            expect(uriEncode('/?category=Books&title=Ducks Retreat/')).toEqual(\n                '/%3Fcategory%3DBooks%26title%3DDucks%20Retreat/',\n            );\n            expect(uriEncode('/?category=Books&title=Ducks Retreat/', true)).toEqual(\n                '%2F%3Fcategory%3DBooks%26title%3DDucks%20Retreat%2F',\n            );\n        });\n    });\n}\n\nexport function testHTTPFSAsync(\n    adb: () => duckdb.AsyncDuckDB,\n    resolveData: (url: string) => Promise<Uint8Array | null>,\n    baseDir: string,\n): void {\n    let conn: duckdb.AsyncDuckDBConnection | null;\n\n    // PUTs an S3 file to the S3 test server\n    const putTestFileToS3 = async function (fileName: string, format: string, test_data: Uint8Array | null) {\n        await adb().registerFileBuffer('test_file.parquet', test_data!);\n        if (!conn) {\n            conn = await adb().connect();\n        }\n        await setAwsConfig(conn, AWSConfigType.VALID);\n        await conn.query(`CREATE TABLE test_table AS (SELECT * FROM parquet_scan('test_file.parquet'));`);\n        await conn.query(`COPY test_table TO 's3://${BUCKET_NAME}/${fileName}.${format}' (FORMAT '${format}');`);\n        await adb().flushFiles();\n        await adb().dropFiles();\n    };\n\n    // Requires an open conn\n    const assertTestFileResultCorrect = async function (result: any, test_data: Uint8Array | null) {\n        await adb().registerFileBuffer('test_file_baseline.parquet', test_data!);\n        await conn!.query(`SELECT * FROM parquet_scan('test_file_baseline.parquet');`);\n        // expect(result.getChildAt(0).toArray()).toEqual(result_baseline.getChildAt(0)?.toArray());\n    };\n\n    // Reset databases between tests\n    const reset = async () => {\n        await adb().reset();\n        conn = await adb().connect();\n    };\n    beforeEach(async () => await reset());\n    afterEach(async () => await reset());\n\n    describe('HTTPFS Async', () => {\n        it('can fetch https file', async () => {\n            const results = await conn!.query(\n                `select * from \"https://raw.githubusercontent.com/duckdb/duckdb-wasm/main/data/test.csv\";`,\n            );\n            expect(BigInt(results.getChildAt(2)?.get(2))).toEqual(BigInt(9n));\n        });\n\n        it('can read and write csv file from S3 with correct auth credentials', async () => {\n            let data = await resolveData('/uni/studenten.parquet');\n            await setAwsConfig(conn!);\n            await putTestFileToS3('correct_auth_test', 'csv', data);\n            const results_with_auth = await conn!.query(`select * from \"s3://${BUCKET_NAME}/correct_auth_test.csv\";`);\n            data = await resolveData('/uni/studenten.parquet');\n            assertTestFileResultCorrect(results_with_auth, data);\n        });\n\n        it('can read and write parquet file from S3 with correct auth credentials', async () => {\n            let data = await resolveData('/uni/studenten.parquet');\n            await putTestFileToS3('correct_auth_test', 'parquet', data);\n            await setAwsConfig(conn!);\n            const results_with_auth = await conn!.query(\n                `select * from \"s3://${BUCKET_NAME}/correct_auth_test.parquet\";`,\n            );\n            data = await resolveData('/uni/studenten.parquet');\n            assertTestFileResultCorrect(results_with_auth, data);\n        });\n\n        it('can not read a file with incorrect credentials', async () => {\n            const data = await resolveData('/uni/studenten.parquet');\n            await putTestFileToS3('incorrect_auth_test', 'parquet', data);\n            await setAwsConfig(conn!, AWSConfigType.INVALID);\n            await expectAsync(\n                conn!.query(`select * from \"s3://${BUCKET_NAME}/incorrect_auth_test.csv\";`),\n            ).toBeRejected();\n        });\n\n        it('properly invalidates file caches on settings update.', async () => {\n            const data = await resolveData('/tpch/0_01/parquet/lineitem.parquet');\n            await putTestFileToS3('file_cache_invalidation_test', 'parquet', data);\n            await setAwsConfig(conn!);\n            const results_correct = await conn!.query(\n                `select l_partkey from \"s3://${BUCKET_NAME}/file_cache_invalidation_test.parquet\" limit 1;`,\n            );\n            expect(results_correct.getChildAt(0)?.get(0)).toEqual(1552);\n            await setAwsConfig(conn!, AWSConfigType.INVALID);\n            await expectAsync(\n                conn!.query(`select avg(l_partkey) from \"s3://${BUCKET_NAME}/lineitem.parquet\";`),\n            ).toBeRejected();\n        });\n\n        it('write after read throws incorrect flag error without dropping files', async () => {\n            await setAwsConfig(conn!);\n            await conn!.query(\n                `COPY (SELECT * FROM range(1000,1010) tbl(i)) TO 's3://${BUCKET_NAME}/test_written.csv' (FORMAT 'csv');`,\n            );\n            const result = await conn!.query(`SELECT * FROM \"s3://${BUCKET_NAME}/test_written.csv\";`);\n            expect(Number((result.getChildAt(0)?.get(6)))).toEqual(Number(1006));\n            await expectAsync(\n                conn!.query(\n                    `COPY (SELECT * FROM range(2000,2010) tbl(i)) TO 's3://${BUCKET_NAME}/test_written.csv' (FORMAT 'csv');`,\n                ),\n            ).toBeRejectedWithError('Invalid Error: File is not opened in write mode');\n        });\n    });\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\nimport { DuckDBAccessMode, DuckDBDataProtocol } from '../src/';\n\nexport function testBindings(db: () => duckdb.DuckDBBindings, baseURL: string): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(() => {\n        conn = db().connect();\n    });\n\n    afterEach(() => {\n        conn.close();\n        db().flushFiles();\n        db().dropFiles();\n    });\n\n    describe('DuckDBBindings', () => {\n        describe('error handling', () => {\n            it('INVALID SQL', async () => {\n                let error: Error | null = null;\n                try {\n                    await conn.send('INVALID');\n                } catch (e: any) {\n                    error = e;\n                }\n                expect(error).not.toBe(null);\n            });\n        });\n\n        describe('Check version', () => {\n            it('Version check', async () => {\n                await db().reset();\n                conn = db().connect();\n                const version = conn.query<{ name: arrow.Utf8 }>(\n                    \"select * from (select version()) where version() != 'v0.0.1-dev0';\",\n                );\n                const rows = version.toArray();\n                expect(rows.length).toEqual(1);\n                await db().reset();\n            });\n        });\n\n        describe('Check platform', () => {\n            it('Platform check', async () => {\n                await db().reset();\n                conn = db().connect();\n                const version = conn.query<{ name: arrow.Utf8 }>(\n                    \"PRAGMA platform;\",\n                );\n                const rows = version.getChildAt(0)?.toArray();\n                expect(rows.length).toEqual(1);\n                expect(rows[0].toString().substr(0,5)).toEqual(\"wasm_\");\n                await db().reset();\n            });\n        });\n\n        //describe('Open', () => {\n        // XXX apparently synchronous XHR on the main thread does not allow for arraybuffer response type?\n        // it('Remote TPCH 0_01', async () => {\n        //     await db().registerFileURL('tpch_0_01.db', `${baseURL}/tpch/0_01/duckdb/db`);\n        //     db().open('tpch_0_01.db');\n        // });\n        //});\n\n        describe('Reset', () => {\n            it('table must disappear', async () => {\n                await db().reset();\n                conn = db().connect();\n                conn.query('CREATE TABLE foo (a int)');\n                let table = conn.query<{ name: arrow.Utf8 }>('PRAGMA show_tables;');\n                let rows = table.toArray();\n                expect(rows.length).toEqual(1);\n                expect(rows[0]?.name).toEqual('foo');\n                await db().reset();\n                conn = db().connect();\n                table = conn.query<{ name: arrow.Utf8 }>('PRAGMA show_tables;');\n                rows = table.toArray();\n                expect(rows.length).toEqual(0);\n            });\n        });\n\n        describe('Prepared Statement', () => {\n            it('Materialized', async () => {\n                const stmt = conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\n                const result = stmt.query(234);\n                expect(result.numRows).toBe(10001);\n                stmt.close();\n            });\n\n            it('Streaming', async () => {\n                const stmt = conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\n                const stream = stmt.send(234);\n                let size = 0;\n                for (const batch of stream) {\n                    size += batch.numRows;\n                }\n                expect(size).toBe(10001);\n                conn.close();\n            });\n            it('Typecheck', async () => {\n                conn.query(`CREATE TABLE typecheck (\n                    a BOOLEAN DEFAULT NULL,\n                    b TINYINT DEFAULT NULL,\n                    c SMALLINT DEFAULT NULL,\n                    d INTEGER DEFAULT NULL,\n                    e BIGINT DEFAULT NULL,\n                    f FLOAT DEFAULT NULL,\n                    g DOUBLE DEFAULT NULL,\n                    h CHAR(11) DEFAULT NULL,\n                    i VARCHAR(11) DEFAULT NULL\n                )`);\n\n                const stmt = conn.prepare('INSERT INTO typecheck VALUES(?,?,?,?,?,?,?,?,?)');\n                expect(() =>\n                    stmt.query(true, 100, 10_000, 1_000_000, 5_000_000_000, 0.5, Math.PI, 'hello world', 'hi'),\n                ).not.toThrow();\n                expect(() =>\n                    stmt.query(\n                        'test', // varchar for bool\n                        100,\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                expect(() =>\n                    stmt.query(\n                        true,\n                        10_000, // smallint for tinyint\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                expect(() =>\n                    stmt.query(\n                        true,\n                        100,\n                        1_000_000, // int for smallint\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                expect(() =>\n                    stmt.query(\n                        true,\n                        100,\n                        10_000,\n                        5_000_000_000, // bigint for int\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    ),\n                ).toThrow();\n                conn.close();\n            });\n        });\n    });\n}\n\nexport function testAsyncBindings(\n    adb: () => duckdb.AsyncDuckDB,\n    baseURL: string,\n    baseDirProto: DuckDBDataProtocol,\n): void {\n    beforeEach(async () => {});\n\n    afterEach(async () => {\n        await adb().flushFiles();\n        await adb().dropFiles();\n        await adb().open({\n            path: ':memory:',\n        });\n    });\n\n    describe('Bindings', () => {\n        describe('Open', () => {\n            it('Remote TPCH 0_01', async () => {\n                await adb().registerFileURL('tpch_0_01.db', `${baseURL}/tpch/0_01/duckdb/db`, baseDirProto, false);\n                await adb().open({\n                    path: 'tpch_0_01.db',\n                });\n                // FIXME: Add this back\n                //const conn = await adb().connect();\n                //const table = await conn.query<{\n                //    a: arrow.Int;\n                //}>('select count(*)::INTEGER as a from lineitem');\n                //const rows = table.toArray();\n                //expect(rows.length).toEqual(1);\n                //expect(rows[0]?.a).toEqual(60175);\n            });\n        });\n\n        describe('Patching', () => {\n            it('Count(*) Default', async () => {\n                await adb().open({\n                    path: ':memory:',\n                    query: {\n                        castBigIntToDouble: false,\n                    },\n                });\n                const conn = await adb().connect();\n                const table = await conn.query('select 1::BIGINT');\n                expect(table.schema.fields.length).toEqual(1);\n                expect(table.schema.fields[0].typeId).toEqual(arrow.Type.Int);\n            });\n\n            it('Count(*) No BigInt', async () => {\n                await adb().open({\n                    path: ':memory:',\n                    query: {\n                        castBigIntToDouble: true,\n                    },\n                });\n                const conn = await adb().connect();\n                const table = await conn.query('select 1::BIGINT');\n                expect(table.schema.fields.length).toEqual(1);\n                expect(table.schema.fields[0].typeId).toEqual(arrow.Type.Float);\n            });\n        });\n\n        describe('Prepared Statement', () => {\n            it('Materialized', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare('SELECT v + ? FROM generate_series(0, 10000) as t(v);');\n                const result = await stmt.query(234);\n                expect(result.numRows).toBe(10001);\n                await stmt.close();\n            });\n\n            it('Streaming', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare('SELECT v::INTEGER + ? AS v FROM generate_series(0, 10000) as t(v);');\n                const stream = await stmt.send(234);\n                let size = 0;\n                for await (const batch of stream) {\n                    size += batch.numRows;\n                }\n                expect(size).toBe(10001);\n                await conn.close();\n            });\n            it('Typecheck', async () => {\n                const conn = await adb().connect();\n                await conn.query(`CREATE TABLE typecheck (\n                    a BOOLEAN DEFAULT NULL,\n                    b TINYINT DEFAULT NULL,\n                    c SMALLINT DEFAULT NULL,\n                    d INTEGER DEFAULT NULL,\n                    e BIGINT DEFAULT NULL,\n                    f FLOAT DEFAULT NULL,\n                    g DOUBLE DEFAULT NULL,\n                    h CHAR(11) DEFAULT NULL,\n                    i VARCHAR(11) DEFAULT NULL\n                )`);\n\n                const stmt = await conn.prepare('INSERT INTO typecheck VALUES(?,?,?,?,?,?,?,?,?)');\n\n                const expectToThrow = async (fn: () => Promise<void>) => {\n                    let throwed = false;\n                    try {\n                        await fn();\n                    } catch (e) {\n                        throwed = true;\n                    }\n                    expect(throwed).toBe(true);\n                };\n                expectToThrow(async () => {\n                    await stmt.query(\n                        'test', // varchar for bool\n                        100,\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                expectToThrow(async () => {\n                    await stmt.query(\n                        true,\n                        10_000, // smallint for tinyint\n                        10_000,\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                expectToThrow(async () => {\n                    await stmt.query(\n                        true,\n                        100,\n                        1_000_000, // int for smallint\n                        1_000_000,\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                expectToThrow(async () => {\n                    await stmt.query(\n                        true,\n                        100,\n                        10_000,\n                        5_000_000_000, // bigint for int\n                        5_000_000_000,\n                        0.5,\n                        Math.PI,\n                        'hello world',\n                        'hi',\n                    );\n                });\n                await conn.close();\n            });\n        });\n\n        describe('AccessMode', () => {\n            it('READ_ONLY', async () => {\n                await expectAsync(\n                    adb().open({\n                        accessMode: DuckDBAccessMode.READ_ONLY,\n                    }),\n                ).toBeRejectedWithError(/Cannot launch in-memory database in read-only mode/);\n            });\n            it('READ_WRITE', async () => {\n                await expectAsync(\n                    adb().open({\n                        accessMode: DuckDBAccessMode.READ_WRITE,\n                    }),\n                ).toBeResolved();\n            });\n        });\n\n        describe('Cancellation', () => {\n            it('hello cancel', async () => {\n                // Set query polling interval to 0 to poll 1 task at a time\n                await adb().open({\n                    path: ':memory:',\n                    query: {\n                        queryPollingInterval: 0,\n                    },\n                });\n                const conn = await adb().connect();\n                const result = await conn.useUnsafe((db, id) =>\n                    db.startPendingQuery(id, 'SELECT SUM(i) FROM range(1000000) tbl(i);'),\n                );\n                expect(result).toBeNull();\n                const cancelOK = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\n                expect(cancelOK).toBeTrue();\n                let polledHeader = null;\n                let polledError = null;\n                try {\n                    polledHeader = await conn.useUnsafe((db, id) => db.pollPendingQuery(id));\n                } catch (e: any) {\n                    polledError = e;\n                }\n                expect(polledHeader).toBeNull();\n                expect(polledError).not.toBeNull();\n                expect(polledError.toString()).toEqual('Error: query was canceled');\n                const canceledAgain = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\n                expect(canceledAgain).toBeFalse();\n                // Check the connection is destroyed or not when we cancel query\n                const table = await conn.query('select 42::integer;');\n                expect(table.schema.fields.length).toEqual(1);\n            });\n\n            it('noop cancel', async () => {\n                await adb().open({\n                    path: ':memory:',\n                    query: {\n                        queryPollingInterval: 0,\n                    },\n                });\n                const conn = await adb().connect();\n                const result = await conn.useUnsafe((db, id) =>\n                    db.startPendingQuery(id, 'SELECT SUM(i) FROM range(1000000) tbl(i);'),\n                );\n                expect(result).toBeNull();\n                let polledHeader = null;\n                let polledError = null;\n                try {\n                    // We execute 1 task at a time, so this may take multiple polls\n                    while (polledHeader == null) {\n                        polledHeader = await conn.useUnsafe((db, id) => db.pollPendingQuery(id));\n                    }\n                } catch (e: any) {\n                    polledError = e;\n                }\n                expect(polledHeader).not.toBeNull();\n                expect(polledError).toBeNull();\n                const cancelOK = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\n                expect(cancelOK).toBeFalse();\n                const anotherOne = await conn.useUnsafe((db, id) => db.cancelPendingQuery(id));\n                expect(anotherOne).toBeFalse();\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\n\nconst testRows = 10000;\n\nexport function testBatchStream(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(() => {\n        conn = db().connect();\n    });\n\n    afterEach(() => {\n        conn.close();\n        db().flushFiles();\n        db().dropFiles();\n    });\n\n    describe('Arrow Record-Batches Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const result = await conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const result = await conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Record-Batches Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const result = await conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const result = await conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', () => {\n                const table = conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', () => {\n                const table = conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', () => {\n                const table = conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v.valueOf()).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', () => {\n                const table = conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', () => {\n                const table = conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', () => {\n                const table = conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', () => {\n                const table = conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\n\nconst testRows = 10000;\n\nexport function testAsyncBatchStream(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        conn = await db().connect();\n    });\n\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n\n    describe('AsyncDuckDB', () => {\n        it('ping', async () => {\n            await db().ping();\n        });\n    });\n\n    describe('Arrow Record-Batches Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const row of batch) {\n                        expect(row!.v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const result = await conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const result = await conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n\n        describe('scripts', () => {\n            it('test1', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS x, (sin(v) * 100 + 100)::INTEGER AS y FROM generate_series(0, ${testRows}) as t(v)\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(2);\n                    for (const row of batch) {\n                        expect(row!.x).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Record-Batches Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 127);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const result = await conn.send(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++ & 32767);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const result = await conn.send(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(i++);\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const result = await conn.send(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(BigInt(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const result = await conn.send(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for await (const batch of result) {\n                    expect(batch.numCols).toBe(1);\n                    for (const v of batch.getChildAt(0)!) {\n                        expect(v).toBe(String(i++));\n                    }\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Row-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const table = await conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const table = await conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const table = await conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const row of table) {\n                    expect(row?.v.valueOf()).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n\n    describe('Arrow Table Column-Major', () => {\n        describe('single column', () => {\n            it('TINYINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 127)::TINYINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 127);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('SMALLINT', async () => {\n                const table = await conn.query(`\n                    SELECT (v & 32767)::SMALLINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++ & 32767);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('INTEGER', async () => {\n                const table = await conn.query(`\n                    SELECT v::INTEGER AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(i++);\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('BIGINT', async () => {\n                const table = await conn.query(`\n                    SELECT v::BIGINT AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(BigInt(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n\n            it('STRING', async () => {\n                const table = await conn.query(`\n                    SELECT v::VARCHAR AS v FROM generate_series(0, ${testRows}) as t(v);\n                `);\n                let i = 0;\n                for (const v of table.getChildAt(0)!) {\n                    expect(v).toBe(String(i++));\n                }\n                expect(i).toBe(testRows + 1);\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\nimport * as arrow from 'apache-arrow';\n\nconst decoder = new TextDecoder();\n\nexport function testFilesystem(\n    db: () => duckdb.AsyncDuckDB,\n    resolveData: (url: string) => Promise<Uint8Array | null>,\n    baseDir: string,\n    baseDirProto: duckdb.DuckDBDataProtocol,\n): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        conn = await db().connect();\n    });\n\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n\n    describe('File buffer registration', () => {\n        const test = async () => {\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        };\n        it('File buffer used once', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await test();\n        });\n        it('File buffer registered twice', async () => {\n            const students0 = await resolveData('/uni/studenten.parquet');\n            const students1 = await resolveData('/uni/studenten.parquet');\n            expect(students0).not.toBeNull();\n            expect(students1).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students0!);\n            await test();\n            await db().registerFileBuffer('studenten.parquet', students1!);\n            await test();\n        });\n        it('File buffer used twice', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await test();\n            await test();\n        });\n    });\n\n    describe('Parquet Scans', () => {\n        it('single table from buffer', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        });\n\n        it('simple join', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            const hoeren = await resolveData('/uni/hoeren.parquet');\n            const vorlesungen = await resolveData('/uni/vorlesungen.parquet');\n            expect(students).not.toBeNull();\n            expect(hoeren).not.toBeNull();\n            expect(vorlesungen).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerFileBuffer('hoeren.parquet', hoeren!);\n            await db().registerFileBuffer('vorlesungen.parquet', vorlesungen!);\n\n            const result = await conn.send(`\n                    SELECT students.matrnr, vorlesungen.titel\n                    FROM parquet_scan('studenten.parquet') students\n                    INNER JOIN parquet_scan('hoeren.parquet') hoeren ON (students.matrnr = hoeren.matrnr)\n                    INNER JOIN parquet_scan('vorlesungen.parquet') vorlesungen ON (vorlesungen.vorlnr = hoeren.vorlnr);\n                `);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int; titel: arrow.Utf8 }>(batches);\n            expect(table.numCols).toBe(2);\n            const flat = [];\n            for (const row of table) {\n                flat.push({\n                    matrnr: row?.matrnr,\n                    titel: row?.titel?.toString(),\n                });\n            }\n            expect(flat).toEqual([\n                { matrnr: 26120, titel: 'Grundz\u00FCge' },\n                { matrnr: 27550, titel: 'Grundz\u00FCge' },\n                { matrnr: 27550, titel: 'Logik' },\n                { matrnr: 28106, titel: 'Ethik' },\n                { matrnr: 28106, titel: 'Wissenschaftstheorie' },\n                { matrnr: 28106, titel: 'Bioethik' },\n                { matrnr: 28106, titel: 'Der Wiener Kreis' },\n                { matrnr: 29120, titel: 'Grundz\u00FCge' },\n                { matrnr: 29120, titel: 'Ethik' },\n                { matrnr: 29120, titel: 'M\u00E4eutik' },\n                { matrnr: 29555, titel: 'Glaube und Wissen' },\n                { matrnr: 25403, titel: 'Glaube und Wissen' },\n            ]);\n        });\n    });\n\n    describe('Writing', () => {\n        it('Copy To CSV Buffer', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerEmptyFileBuffer('students.csv');\n            await conn.query(`CREATE TABLE students AS SELECT * FROM parquet_scan('studenten.parquet');`);\n            await conn.query(`COPY students TO 'students.csv' WITH (HEADER 1, DELIMITER ';', FORMAT CSV);`);\n            await conn.query(`DROP TABLE IF EXISTS students`);\n            const outBuffer = await db().copyFileToBuffer('students.csv');\n            expect(outBuffer).not.toBeNull();\n            const text = decoder.decode(outBuffer!);\n            expect(text).toBe(`matrnr;name;semester\n24002;Xenokrates;18\n25403;Jonas;12\n26120;Fichte;10\n26830;Aristoxenos;8\n27550;Schopenhauer;6\n28106;Carnap;3\n29120;Theophrastos;2\n29555;Feuerbach;2\n`);\n        });\n\n        it('Copy To Parquet', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerEmptyFileBuffer('students2.parquet');\n            await conn.query(`CREATE TABLE students2 AS SELECT * FROM parquet_scan('studenten.parquet');`);\n            await conn.query(`COPY students2 TO 'students2.parquet' (FORMAT PARQUET);`);\n            const url = await db().copyFileToBuffer('students2.parquet');\n            expect(url).not.toBeNull();\n        });\n\n        it('Copy To Parquet And Load Again', async () => {\n            const students = await resolveData('/uni/studenten.parquet');\n            expect(students).not.toBeNull();\n            await db().registerFileBuffer('studenten.parquet', students!);\n            await db().registerEmptyFileBuffer('students3.parquet');\n            await conn.query(`CREATE TABLE students3 AS SELECT * FROM parquet_scan('studenten.parquet');`);\n            await conn.query(`COPY students3 TO 'students3.parquet' (FORMAT PARQUET);`);\n            const url = await db().copyFileToBuffer('students3.parquet');\n            expect(url).not.toBeNull();\n            await conn.query(`CREATE TABLE students4 AS SELECT * FROM parquet_scan('students3.parquet');`);\n            const result = await conn.send(`SELECT matrnr FROM students4;`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        });\n    });\n\n    describe('File access', () => {\n        it('Small Parquet file', async () => {\n            await db().registerFileURL('studenten.parquet', `${baseDir}/uni/studenten.parquet`, baseDirProto, true);\n            const result = await conn.send(`SELECT matrnr FROM parquet_scan('studenten.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ matrnr: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.toArray()).toEqual(\n                new Int32Array([24002, 25403, 26120, 26830, 27550, 28106, 29120, 29555]),\n            );\n        });\n\n        it('Large Parquet file', async () => {\n            await db().registerFileURL(\n                'lineitem.parquet',\n                `${baseDir}/tpch/0_01/parquet/lineitem.parquet`,\n                baseDirProto,\n                true,\n            );\n            const result = await conn.send(`SELECT count(*)::INTEGER as cnt FROM parquet_scan('lineitem.parquet');`);\n            const batches = [];\n            for await (const batch of result) {\n                batches.push(batch);\n            }\n            const table = await new arrow.Table<{ cnt: arrow.Int }>(batches);\n            expect(table.getChildAt(0)?.get(0)).toBeGreaterThan(60_000);\n        });\n    });\n\n    describe('Export', () => {\n        it('Generate Series as CSV', async () => {\n            await conn.query('CREATE TABLE foo AS SELECT * FROM generate_series(1, 5) t(v)');\n            await conn.query(`EXPORT DATABASE '/tmp/duckdbexportcsv'`);\n\n            const results = await db().globFiles('/tmp/duckdbexportcsv/*');\n            expect(results).not.toEqual([]);\n            expect(results.length).toEqual(3);\n            const filenames = results.map(file => file.fileName).sort();\n            expect(filenames).toEqual([\n                '/tmp/duckdbexportcsv/foo.csv',\n                '/tmp/duckdbexportcsv/load.sql',\n                '/tmp/duckdbexportcsv/schema.sql',\n            ]);\n\n            const csv_buffer_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/foo.csv');\n            const load_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/load.sql');\n            const schema_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportcsv/schema.sql');\n            expect(load_script_utf8.length).not.toEqual(0);\n            expect(schema_script_utf8.length).not.toEqual(0);\n            expect(csv_buffer_utf8.length).not.toEqual(0);\n\n            const load_script = decoder.decode(load_script_utf8);\n            const schema_script = decoder.decode(schema_script_utf8);\n            const csv_buffer = decoder.decode(csv_buffer_utf8);\n            expect(load_script.trim()).toEqual(\n                `COPY foo FROM '/tmp/duckdbexportcsv/foo.csv' (FORMAT 'csv', quote '\"', delimiter ',', header 0);`,\n            );\n            expect(schema_script.trim()).toEqual(`CREATE TABLE foo(v BIGINT);`);\n            expect(csv_buffer.trim()).toEqual(`1\\n2\\n3\\n4\\n5`);\n        });\n\n        it('Generate Series as Parquet', async () => {\n            await conn.query('CREATE TABLE foo AS SELECT * FROM generate_series(1, 5) t(v)');\n            await conn.query(`EXPORT DATABASE '/tmp/duckdbexportparquet' (FORMAT PARQUET)`);\n\n            const results = await db().globFiles('/tmp/duckdbexportparquet/*');\n            expect(results).not.toEqual([]);\n            expect(results.length).toEqual(3);\n            const filenames = results.map(file => file.fileName).sort();\n            expect(filenames).toEqual([\n                '/tmp/duckdbexportparquet/foo.parquet',\n                '/tmp/duckdbexportparquet/load.sql',\n                '/tmp/duckdbexportparquet/schema.sql',\n            ]);\n\n            const parquet_buffer = await db().copyFileToBuffer('/tmp/duckdbexportparquet/foo.parquet');\n            const load_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportparquet/load.sql');\n            const schema_script_utf8 = await db().copyFileToBuffer('/tmp/duckdbexportparquet/schema.sql');\n            expect(load_script_utf8.length).not.toEqual(0);\n            expect(schema_script_utf8.length).not.toEqual(0);\n            expect(parquet_buffer.length).not.toEqual(0);\n\n            const content = await conn.query(\n                `SELECT v::integer FROM parquet_scan('/tmp/duckdbexportparquet/foo.parquet')`,\n            );\n            expect(content.nullCount).toEqual(0);\n            expect(content.numRows).toEqual(5);\n            expect(content.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 3, 4, 5]));\n        });\n    });\n\n    describe('Copy', () => {\n        it('Generate Series as Parquet', async () => {\n            await conn.query(\n                `COPY (SELECT * FROM generate_series(1, 5) t(v)) TO '/tmp/duckdbcopytest.parquet' (FORMAT 'parquet')`,\n            );\n            const results = await db().globFiles('/tmp/duckdbcopytest*');\n            expect(results).not.toEqual([]);\n            expect(results.length).toEqual(1);\n            const filenames = results.map(file => file.fileName).sort();\n            expect(filenames).toEqual(['/tmp/duckdbcopytest.parquet']);\n            const parquet_buffer = await db().copyFileToBuffer('/tmp/duckdbcopytest.parquet');\n            expect(parquet_buffer.length).not.toEqual(0);\n            const content = await conn.query(`SELECT v::integer FROM parquet_scan('/tmp/duckdbcopytest.parquet')`);\n            expect(content.numRows).toEqual(5);\n            expect(content.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 3, 4, 5]));\n        });\n    });\n}\n", "import * as arrow from 'apache-arrow';\n\nexport interface Column {\n    name: string;\n    values: any[];\n}\n\nexport function compareTable(table: arrow.Table, expected: Column[]): void {\n    // Check column count\n    const colCount = expected.length;\n    expect(table.numCols).toEqual(colCount);\n    if (colCount == 0) return;\n\n    // Check columns\n    const rowCount = expected[0].values.length;\n    for (let i = 0; i < colCount; ++i) {\n        expect(expected[i].values.length).toEqual(rowCount);\n        expect(table.getChildAt(i)?.length).toEqual(rowCount);\n        expect(table.schema.fields[i]?.name).toEqual(expected[i].name);\n    }\n\n    // Compare the actual values\n    for (let i = 0; i < colCount; ++i) {\n        const col = table.getChildAt(i)!;\n        const have = [];\n        for (let j = 0; j < rowCount; ++j) {\n            have.push(col.get(j));\n        }\n        expect(Number(have)).toEqual(Number(expected[i].values));\n    }\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\nimport { Column, compareTable } from './table_test';\n\n/// Unfortunately, arrow.Table.from does not build a proper Schema.\n/// When it does, we might want to switch back to arrow.Table here instead\n/// of arrow Schema + ArrowBatch.\ninterface ArrowInsertTest {\n    name: string;\n    schema: arrow.Schema;\n    batches: ArrowBatch[];\n    options: duckdb.ArrowInsertOptions;\n    query: string;\n    expectedColumns: Column[];\n}\n\ninterface ArrowBatch {\n    numRows: number;\n    columns: arrow.Data[];\n}\n\nconst buildUtf8Array = (values: string[]) => {\n    const builder = new arrow.Utf8Builder({\n        type: new arrow.Utf8(),\n    });\n    for (const v of values) {\n        builder.append(v);\n    }\n    builder.finish();\n    return builder.flush();\n};\n\nexport function generateXInt32(n: number, cols: number): number[][] {\n    const columns = [];\n    for (let j = 0; j < cols; ++j) {\n        const column = [];\n        for (let i = 0; i < n; ++i) {\n            column.push(i);\n        }\n        columns.push(column);\n    }\n    return columns;\n}\n\nexport function generateArrowXInt32(n: number, cols: number): [arrow.Schema, arrow.RecordBatch[]] {\n    const columns = generateXInt32(n, cols);\n    const fields = [];\n    for (let j = 0; j < cols; ++j) {\n        fields.push(new arrow.Field(`v${j}`, new arrow.Int32()));\n    }\n    const schema = new arrow.Schema(fields);\n    const batches = [];\n    for (let i = 0; i < n; ) {\n        const rows = Math.min(1000, n - i);\n        const data = arrow.makeData({\n            type: new arrow.Struct(fields),\n            children: columns.map(c =>\n                arrow.makeData({\n                    type: new arrow.Int32(),\n                    data: new Int32Array(c.slice(i, i + rows)),\n                }),\n            ),\n        });\n        batches.push(new arrow.RecordBatch(schema, data));\n        i += rows;\n    }\n    return [schema, batches];\n}\n\nconst ARROW_INSERT_TESTS: ArrowInsertTest[] = [\n    {\n        name: 'integers_1',\n        schema: new arrow.Schema([\n            new arrow.Field('a', new arrow.Int32()),\n            new arrow.Field('b', new arrow.Int32()),\n            new arrow.Field('c', new arrow.Int32()),\n        ]),\n        batches: [\n            {\n                numRows: 3,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([2, 5, 8]) }),\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([3, 6, 9]) }),\n                ],\n            },\n        ],\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'combined_1',\n        schema: new arrow.Schema([\n            new arrow.Field('a', new arrow.Int32()),\n            new arrow.Field('b', new arrow.Int16()),\n            new arrow.Field('c', new arrow.Utf8()),\n        ]),\n        batches: [\n            {\n                numRows: 3,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([2, 5, 8]) }),\n                    buildUtf8Array(['3', '6', '9']),\n                ],\n            },\n        ],\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: ['3', '6', '9'] },\n        ],\n    },\n    {\n        name: 'combined_2',\n        schema: new arrow.Schema([\n            new arrow.Field('a', new arrow.Int32()),\n            new arrow.Field('b', new arrow.Int16()),\n            new arrow.Field('c', new arrow.Utf8()),\n        ]),\n        batches: [\n            {\n                numRows: 3,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([1, 4, 7]) }),\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([2, 5, 8]) }),\n                    buildUtf8Array(['3', '6', '9']),\n                ],\n            },\n            {\n                numRows: 2,\n                columns: [\n                    arrow.makeData({ type: new arrow.Int32(), data: new Int32Array([10, 13]) }),\n                    arrow.makeData({ type: new arrow.Int16(), data: new Int16Array([11, 14]) }),\n                    buildUtf8Array(['12', '15']),\n                ],\n            },\n        ],\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7, 10, 13] },\n            { name: 'b', values: [2, 5, 8, 11, 14] },\n            { name: 'c', values: ['3', '6', '9', '12', '15'] },\n        ],\n    },\n];\n\nexport function testArrowInsert(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(async () => {\n        db().flushFiles();\n        conn = db().connect();\n    });\n    afterEach(async () => {\n        conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('Arrow insert from iterable', () => {\n        for (const test of ARROW_INSERT_TESTS) {\n            it(test.name, () => {\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const batches = test.batches.map(b => {\n                    const data = arrow.makeData({\n                        type: new arrow.Struct(test.schema.fields),\n                        children: b.columns,\n                    });\n                    return new arrow.RecordBatch(test.schema, data);\n                });\n                const table = new arrow.Table(test.schema, batches);\n                conn.insertArrowTable(table, test.options);\n                const results = conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n\nexport function testArrowInsertAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('Arrow async insert from iterable', () => {\n        for (const test of ARROW_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const batches = test.batches.map(b => {\n                    const data = arrow.makeData({\n                        type: new arrow.Struct(test.schema.fields),\n                        children: b.columns,\n                    });\n                    return new arrow.RecordBatch(test.schema, data);\n                });\n                const table = new arrow.Table(test.schema, batches);\n                await conn.insertArrowTable(table, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n    describe('Arrow async insert from table', () => {\n        it('simple integers', async () => {\n            await conn.query(`DROP TABLE IF EXISTS insert_from_table`);\n            const table = new arrow.Table({\n                a: arrow.makeVector(new Int32Array([1, 4, 7])),\n                b: arrow.makeVector(new Int32Array([2, 5, 8])),\n                c: arrow.vectorFromArray<arrow.Utf8>(['3', '6', '9']),\n            });\n            await conn.insertArrowTable(table, {\n                name: 'insert_from_vectors',\n            });\n            const results = await conn.query('select * from insert_from_vectors');\n            compareTable(results, [\n                { name: 'a', values: [1, 4, 7] },\n                { name: 'b', values: [2, 5, 8] },\n                { name: 'c', values: ['3', '6', '9'] },\n            ]);\n        });\n    });\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\nimport { DuckDBDataProtocol } from '../src/';\nimport { Column, compareTable } from './table_test';\n\nfunction describeBrowser(description: string, specDefinitions: () => void): void {\n    if (typeof window !== 'undefined') {\n        describe(description, specDefinitions);\n    }\n}\n\nconst encoder = new TextEncoder();\n\ninterface JSONInsertTest {\n    name: string;\n    input: string;\n    options: duckdb.JSONInsertOptions;\n    query: string;\n    expectedColumns: Column[];\n}\n\nconst JSON_INSERT_TESTS: JSONInsertTest[] = [\n    {\n        name: 'rows_integers',\n        input: `[\n            {\"a\":1, \"b\":2, \"c\":3},\n            {\"a\":4, \"b\":5, \"c\":6},\n            {\"a\":7, \"b\":8, \"c\":9},\n        ]`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'cols_integers',\n        input: `{\n            \"a\": [1, 4, 7],\n            \"b\": [2, 5, 8],\n            \"c\": [3, 6, 9]\n        }`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'options_1',\n        input: `[\n            {\"a\":1, \"b\":2, \"c\":3},\n            {\"a\":4, \"b\":5, \"c\":6},\n            {\"a\":7, \"b\":8, \"c\":9},\n        ]`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n            shape: duckdb.JSONTableShape.ROW_ARRAY,\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.Utf8(),\n            },\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: ['3', '6', '9'] },\n        ],\n    },\n];\n\nconst TEST_FILE = 'TEST';\n\nexport function testJSONInsert(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(async () => {\n        db().flushFiles();\n        conn = db().connect();\n    });\n    afterEach(async () => {\n        conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('JSON Insert Sync', () => {\n        for (const test of JSON_INSERT_TESTS) {\n            it(test.name, () => {\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                db().registerFileBuffer(TEST_FILE, buffer);\n                conn.insertJSONFromPath(TEST_FILE, test.options);\n                const results = conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n\nexport function testJSONInsertAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('JSON Insert Buffer Async', () => {\n        for (const test of JSON_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                await db().registerFileBuffer(TEST_FILE, buffer);\n                await conn.insertJSONFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n\n    describeBrowser('JSON Insert Blob Async', () => {\n        for (const test of JSON_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                const blob = new Blob([buffer]);\n                await db().registerFileHandle(TEST_FILE, blob, DuckDBDataProtocol.BROWSER_FILEREADER, false);\n                await conn.insertJSONFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n", "import * as arrow from 'apache-arrow';\nimport * as duckdb from '../src/';\nimport { DuckDBDataProtocol } from '../src/';\nimport { Column, compareTable } from './table_test';\n\nfunction describeBrowser(description: string, specDefinitions: () => void): void {\n    if (typeof window !== 'undefined') {\n        describe(description, specDefinitions);\n    }\n}\n\nconst encoder = new TextEncoder();\n\ninterface CSVInsertTest {\n    name: string;\n    input: string;\n    options: duckdb.CSVInsertOptions;\n    query: string;\n    expectedColumns: Column[];\n}\n\nconst CSV_INSERT_TESTS: CSVInsertTest[] = [\n    {\n        name: 'integers_auto_1',\n        input: `\"a\",\"b\",\"c\"\n1,2,3\n4,5,6\n7,8,9\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'integers_auto_2',\n        input: `a,b,c\n1,2,3\n4,5,6\n7,8,9\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: [3, 6, 9] },\n        ],\n    },\n    {\n        name: 'integers_auto_3',\n        input: `a,b,c`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'column0', values: ['a'] },\n            { name: 'column1', values: ['b'] },\n            { name: 'column2', values: ['c'] },\n        ],\n    },\n    {\n        name: 'integers_auto_2',\n        input: `a\n1\n4\n7\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [{ name: 'a', values: [1, 4, 7] }],\n    },\n    {\n        name: 'options_1',\n        input: `1,2,3\n4,5,6\n7,8,9\n`,\n        options: {\n            schema: 'main',\n            name: 'foo2',\n            header: false,\n            detect: false,\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.Utf8(),\n            },\n        },\n        query: 'SELECT * FROM main.foo2',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            { name: 'c', values: ['3', '6', '9'] },\n        ],\n    },\n    {\n        name: 'options_2',\n        input: `1|2|01/02/2020\n4|5|01/03/2020\n7|8|01/04/2020\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n            detect: false,\n            header: false,\n            delimiter: '|',\n            dateFormat: '%m/%d/%Y',\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.DateDay(),\n            },\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            {\n                name: 'c',\n                values: [\n                    new Date(Date.UTC(2020, 0, 2)),\n                    new Date(Date.UTC(2020, 0, 3)),\n                    new Date(Date.UTC(2020, 0, 4)),\n                ],\n            },\n        ],\n    },\n    {\n        name: 'options_3',\n        input: `1|2|20:32:45 1992-03-02\n4|5|20:32:50 1992-03-02\n7|8|20:32:55 1992-03-02\n`,\n        options: {\n            schema: 'main',\n            name: 'foo',\n            detect: false,\n            header: false,\n            delimiter: '|',\n            quote: \"'\",\n            timestampFormat: '%H:%M:%S %Y-%m-%d',\n            columns: {\n                a: new arrow.Int16(),\n                b: new arrow.Int32(),\n                c: new arrow.TimestampSecond(),\n            },\n        },\n        query: 'SELECT * FROM main.foo',\n        expectedColumns: [\n            { name: 'a', values: [1, 4, 7] },\n            { name: 'b', values: [2, 5, 8] },\n            {\n                name: 'c',\n                values: [\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 45)).getTime(),\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 50)).getTime(),\n                    new Date(Date.UTC(1992, 2, 2, 20, 32, 55)).getTime(),\n                ],\n            },\n        ],\n    },\n];\n\nconst TEST_FILE = 'TEST';\n\nexport function testCSVInsert(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n\n    beforeEach(async () => {\n        db().flushFiles();\n        conn = db().connect();\n    });\n    afterEach(async () => {\n        conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('CSV Insert Sync', () => {\n        for (const test of CSV_INSERT_TESTS) {\n            it(test.name, () => {\n                conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                db().registerFileBuffer(TEST_FILE, buffer);\n                conn.insertCSVFromPath(TEST_FILE, test.options);\n                const results = conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n\nexport function testCSVInsertAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('CSV Insert Buffer Async', () => {\n        for (const test of CSV_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                await db().registerFileBuffer(TEST_FILE, buffer);\n                await conn.insertCSVFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n\n    describeBrowser('CSV Insert Blob Async', () => {\n        for (const test of CSV_INSERT_TESTS) {\n            it(test.name, async () => {\n                await conn.query(`DROP TABLE IF EXISTS ${test.options.schema || 'main'}.${test.options.name}`);\n                const buffer = encoder.encode(test.input);\n                const blob = new Blob([buffer]);\n                await db().registerFileHandle(TEST_FILE, blob, DuckDBDataProtocol.BROWSER_FILEREADER, false);\n                await conn.insertCSVFromPath(TEST_FILE, test.options);\n                const results = await conn.query(test.query);\n                compareTable(results, test.expectedColumns);\n            });\n        }\n    });\n}\n", "import * as duckdb from '../src/';\n\nexport function testTokenization(db: () => duckdb.DuckDBBindings): void {\n    describe('Tokenizer', () => {\n        it('SELECT 1', async () => {\n            expect(db().tokenize('SELECT 1')).toEqual({\n                offsets: [0, 7],\n                types: [4, 1],\n            });\n        });\n        it('SELECT * FROM region', async () => {\n            expect(db().tokenize('SELECT * FROM region')).toEqual({\n                offsets: [0, 7, 9, 14],\n                types: [4, 3, 4, 0],\n            });\n        });\n    });\n}\n\nexport function testTokenizationAsync(db: () => duckdb.AsyncDuckDB): void {\n    describe('Tokenizer', () => {\n        it('SELECT 1', async () => {\n            expect(await db().tokenize('SELECT 1')).toEqual({\n                offsets: [0, 7],\n                types: [4, 1],\n            });\n        });\n        it('SELECT * FROM region', async () => {\n            expect(await db().tokenize('SELECT * FROM region')).toEqual({\n                offsets: [0, 7, 9, 14],\n                types: [4, 3, 4, 0],\n            });\n        });\n    });\n}\n", "import * as duckdb from '../src/';\n\ninterface TableNameTest {\n    name: string;\n    input: string;\n    tables: string[];\n}\n\nconst TABLENAME_TESTS: TableNameTest[] = [\n    {\n        name: 'standard',\n        input: 'SELECT * FROM my_table',\n        tables: ['my_table'],\n    },\n    {\n        name: 'fetch_specific',\n        input: 'SELECT col_a FROM my_table',\n        tables: ['my_table'],\n    },\n    {\n        name: 'multiple_tables',\n        input: 'SELECT * FROM my_table1, my_table2, my_table3',\n        tables: ['my_table1', 'my_table2', 'my_table3'],\n    },\n    {\n        name: 'same_table_multiple_times',\n        input: 'SELECT col_a FROM my_table, my_table m2, my_table m3',\n        tables: ['my_table'],\n    },\n    {\n        name: 'subqueries',\n        input: 'SELECT * FROM (SELECT * FROM (SELECT * FROM my_table) bla) bla3',\n        tables: ['my_table'],\n    },\n    {\n        name: 'join',\n        input: 'SELECT col_a FROM my_table JOIN my_table2 ON (my_table.col_b=my_table2.col_d)',\n        tables: ['my_table', 'my_table2'],\n    },\n    {\n        name: 'scalar_subquery',\n        input: 'SELECT (SELECT COUNT(*) FROM my_table)',\n        tables: ['my_table'],\n    },\n    {\n        name: 'set_operations',\n        input: 'SELECT * FROM my_table UNION ALL SELECT * FROM my_table2 INTERSECT SELECT * FROM my_table3',\n        tables: ['my_table', 'my_table2', 'my_table3'],\n    },\n    {\n        name: 'window_functions',\n        input: 'SELECT row_number() OVER (ORDER BY (SELECT i+j FROM my_table2)) FROM my_table',\n        tables: ['my_table', 'my_table2'],\n    },\n];\n\nexport function testTableNames(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n    beforeEach(() => {\n        conn = db().connect();\n    });\n    afterEach(() => {\n        conn.close();\n    });\n    describe('TableNames', () => {\n        for (const test of TABLENAME_TESTS) {\n            it(test.name, () => {\n                const tables = conn.getTableNames(test.input);\n                expect(tables).toEqual(test.tables);\n            });\n        }\n    });\n}\n\nexport function testTableNamesAsync(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n    beforeEach(async () => {\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n    });\n    describe('TableNames Async', () => {\n        for (const test of TABLENAME_TESTS) {\n            it(test.name, async () => {\n                const tables = await conn.getTableNames(test.input);\n                expect(tables).toEqual(test.tables);\n            });\n        }\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/332\nexport function test332(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection;\n    beforeEach(async () => {\n        await db().flushFiles();\n        conn = await db().connect();\n    });\n    afterEach(async () => {\n        await conn.close();\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('332', async () => {\n            await db().registerFileText(\n                'Products.csv',\n                `ProductGroup,Product,Year,Quarter,Revenue,Units,Count,Product Key,Reseller,Product Info,QuarterAsNumber\nElectronics,Phone,2018,Q1,103,7,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2018,Q1,102,4,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2019,Q1,98,12,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2018,Q1,104,3,1,2018-Q1,Samsung,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2019,Q1,83,7,1,2019-Q1,Google,Format=XML; <Properties>\u2026,1\nMedia,Theater,2018,Q1,17,4,1,2018-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Theater,2019,Q1,20,7,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Movies,2018,Q1,25,12,1,2018-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nMedia,Movies,2019,Q1,26,13,1,2019-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2018,Q2,105,5,1,2018-Q2,Samsung,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2019,Q2,82,15,1,2019-Q2,LG,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2018,Q2,99,4,1,2018-Q2,LG,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2019,Q2,84,20,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Theater,2018,Q2,17,4,1,2018-Q2,Microsoft,Format=XML; <Properties>\u2026,2\nMedia,Theater,2019,Q2,22,5,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Movies,2018,Q2,25,12,1,2018-Q2,Samsung,Format=XML; <Properties>\u2026,2\nMedia,Movies,2019,Q2,26,14,1,2019-Q2,Google,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2000,Q1,103,7,1,2000-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2001,Q1,102,4,1,2001-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2002,Q1,98,12,1,2002-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2003,Q1,104,3,1,2003-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Computer,2004,Q1,83,7,1,2004-Q1,Samsung,Format=XML; <Properties>\u2026,1\nMedia,Theater,2005,Q1,17,4,1,2005-Q1,Google,Format=XML; <Properties>\u2026,1\nMedia,Theater,2006,Q1,20,7,1,2006-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Movies,2007,Q1,25,12,1,2007-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Movies,2008,Q1,26,13,1,2008-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2009,Q2,105,5,1,2009-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2010,Q2,82,15,1,2010-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2011,Q2,99,4,1,2011-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2012,Q2,84,20,1,2012-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Theater,2013,Q2,17,4,1,2013-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Theater,2014,Q2,22,5,1,2014-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Movies,2015,Q2,25,12,1,2015-Q2,Sony,Format=XML; <Properties>\u2026,2\nMedia,Movies,2016,Q2,26,14,1,2016-Q2,Samsung,Format=XML; <Properties>\u2026,2\nMedia,Movies,2017,Q1,26,13,1,2017-Q1,Google,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2018,Q2,105,5,1,2018-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2019,Q2,82,15,1,2019-Q2,Sony,Format=XML; <Properties>\u2026,2\nElectronics,Computer,2020,Q2,99,4,1,2020-Q2,Microsoft,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2020,Q1,103,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\nElectronics,Phone,2020,Q2,102,4,1,2020-Q2,Samsung,Format=XML; <Properties>\u2026,2\nElectronics,Phone,2020,Q3,98,12,1,2020-Q3,LG,Format=XML; <Properties>\u2026,3\nElectronics,Computer,2020,Q4,104,3,1,2020-Q4,LG,Format=XML; <Properties>\u2026,4\nElectronics,Computer,2020,Q1,83,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\nMedia,Theater,2020,Q1,17,4,1,2020-Q1,Microsoft,Format=XML; <Properties>\u2026,1\nMedia,Theater,2020,Q1,20,7,1,2020-Q1,Sony,Format=XML; <Properties>\u2026,1\n`,\n            );\n            await conn.query(\"CREATE TABLE products AS SELECT * FROM 'Products.csv'\");\n            const all = await conn.query('SELECT * FROM products');\n            expect(all.schema.fields.length).toBe(11);\n            expect(all.schema.fields[0].name).toBe('ProductGroup');\n            const insensitive = await conn.query<{\n                ProductGroup: arrow.Utf8;\n            }>('SELECT productgroup FROM products GROUP BY productgroup');\n            expect(insensitive.schema.fields.length).toBe(1);\n            expect(insensitive.schema.fields[0].name).toBe('ProductGroup');\n            expect(insensitive.toArray().length).toEqual(2);\n            await conn.query('DROP TABLE products');\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/334\nexport function test334(adb: () => duckdb.AsyncDuckDB): void {\n    describe('GitHub issues', () => {\n        describe('334', () => {\n            it('CSV insert', async () => {\n                await adb().registerFileText(`data.csv`, '1|foo\\n2|bar\\n');\n                const conn = await adb().connect();\n                await conn.insertCSVFromPath('data.csv', {\n                    schema: 'main',\n                    name: 'foo',\n                    detect: false,\n                    header: false,\n                    delimiter: '|',\n                    columns: {\n                        col1: new arrow.Int32(),\n                        col2: new arrow.Utf8(),\n                    },\n                });\n                await conn.query('DROP TABLE IF EXISTS foo');\n                await conn.close();\n                await adb().dropFile('data.csv');\n            });\n            it('JSON row insert', async () => {\n                await adb().registerFileText(\n                    'rows.json',\n                    `[\n                    { \"col1\": 1, \"col2\": \"foo\" },\n                    { \"col1\": 2, \"col2\": \"bar\" },\n                ]`,\n                );\n                const conn = await adb().connect();\n                await conn.insertJSONFromPath('rows.json', { name: 'rows' });\n                await conn.query('DROP TABLE IF EXISTS rows');\n                await conn.close();\n                await adb().dropFile('rows.json');\n            });\n            it('JSON column insert', async () => {\n                await adb().registerFileText(\n                    'columns.json',\n                    `{\n                    \"col1\": [1, 2],\n                    \"col2\": [\"foo\", \"bar\"]\n                }`,\n                );\n                const conn = await adb().connect();\n                await conn.insertJSONFromPath('columns.json', { name: 'columns' });\n                await conn.query('DROP TABLE IF EXISTS columns');\n                await conn.close();\n                await adb().dropFile('columns.json');\n            });\n            it('Query result materialized', async () => {\n                const conn = await adb().connect();\n                await conn.query<{ v: arrow.Int }>(`\n                SELECT * FROM generate_series(1, 100) t(v)\n            `);\n                await conn.close();\n            });\n            it('Query result streamed', async () => {\n                const conn = await adb().connect();\n                for await (const batch of await conn.send<{ v: arrow.Int }>(`\n                SELECT * FROM generate_series(1, 100) t(v)\n            `)) {\n                    expect(batch.numRows).toBeGreaterThan(0);\n                }\n                await conn.close();\n            });\n            it('Prepared statement materialized', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare(`SELECT v + ? FROM generate_series(0, 10000) as t(v);`);\n                await stmt.query(234);\n                await stmt.close();\n                await conn.close();\n            });\n            it('Prepared statement streamed', async () => {\n                const conn = await adb().connect();\n                const stmt = await conn.prepare(`SELECT v + ? FROM generate_series(0, 10000) as t(v);`);\n                for await (const batch of await stmt.send(234)) {\n                    expect(batch.numRows).toBeGreaterThan(0);\n                }\n                await stmt.close();\n                await conn.close();\n            });\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/393\nexport function test393(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('393', async () => {\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castTimestampToDate: false,\n                },\n            });\n            conn = await db().connect();\n            const resultWithoutCast = await conn.query<{\n                ts: arrow.TimestampMillisecond;\n            }>(`SELECT TIMESTAMP '1992-03-22 01:02:03' as ts`);\n            expect(resultWithoutCast.toArray()[0]?.ts).toEqual(new Date(Date.UTC(1992, 2, 22, 1, 2, 3)).getTime());\n\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castTimestampToDate: true,\n                },\n            });\n            conn = await db().connect();\n            const resultWithCast = await conn.query<{\n                ts: arrow.DateMillisecond;\n            }>(`SELECT TIMESTAMP '1992-03-22 01:02:03' as ts`);\n            expect(resultWithCast.toArray()[0]?.ts).toEqual(new Date(Date.UTC(1992, 2, 22, 1, 2, 3)));\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/448\nexport function test448(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('448', async () => {\n            conn = await db().connect();\n            await conn.query(`create temp table test448(i integer)`);\n            await conn.query(`insert into test448 values (1),(2),(1)`);\n            let result = await conn.query(`select * from test448`);\n            expect(result.numCols).toBe(1);\n            expect(result.numRows).toBe(3);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([1, 2, 1]));\n            result = await conn.query<{ i: arrow.Map_<arrow.Int32, arrow.Uint64> }>(`select histogram(i) from test448`);\n            expect(result.numCols).toBe(1);\n            expect(result.numRows).toBe(1);\n            const array = result.getChildAt(0)!.toArray();\n            expect(array.length).toEqual(1);\n            expect(array[0].toString()).toEqual('{1: 2, 2: 1}');\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/470\nexport function test470(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('470', async () => {\n            // Baseline without cast: we expect an error to be thrown because of the duration type that is emitted\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castDurationToTime64: false,\n                },\n            });\n            conn = await db().connect();\n            const result1 = await conn.query<{\n                interval: arrow.TimeMicrosecond;\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\n            expect(result1.toArray()[0]?.interval?.toString()).toEqual('0,3');\n\n            // Cast explicitly enabled: Time64 value is returned\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castDurationToTime64: true,\n                },\n            });\n            conn = await db().connect();\n            const resultWithCast = await conn.query<{\n                interval: arrow.TimeMicrosecond;\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\n            expect(resultWithCast.toArray()[0]?.interval?.toString()).toEqual('0,3');\n\n            // Cast should be on by default\n            await db().open({\n                path: ':memory:',\n                query: {},\n            });\n            conn = await db().connect();\n            const resultWithDefault = await conn.query<{\n                interval: arrow.TimeMicrosecond;\n            }>(`SELECT INTERVAL '3' MONTH AS interval`);\n            expect(resultWithDefault.toArray()[0]?.interval?.toString()).toEqual('0,3');\n        });\n    });\n}\n", "import * as duckdb from '../../src';\nimport * as arrow from 'apache-arrow';\n\n// https://github.com/duckdb/duckdb-wasm/issues/477\n// Note that when ArrowJS supports negative decimals, castDecimalToDouble should probably be deprecated.\nexport function test477(db: () => duckdb.AsyncDuckDB): void {\n    let conn: duckdb.AsyncDuckDBConnection | null = null;\n    beforeEach(async () => {\n        await db().flushFiles();\n    });\n    afterEach(async () => {\n        if (conn) {\n            await conn.close();\n            conn = null;\n        }\n        await db().flushFiles();\n        await db().dropFiles();\n    });\n    describe('GitHub issues', () => {\n        it('477', async () => {\n            // Baseline without cast: we expect decimal values to not handle fractional parts correctly\n            await db().open({\n                path: ':memory:',\n                query: {},\n            });\n            conn = await db().connect();\n            const resultWithoutCast = await conn.query(`SELECT (-1.9)::DECIMAL(2,1) as decimal`);\n            expect(resultWithoutCast.schema.fields[0].type.scale).toEqual(1);\n            expect(resultWithoutCast.schema.fields[0].type.precision).toEqual(2);\n            // Arrow JS now handles negative decimals, but not the fractional part.\n            expect(resultWithoutCast.toArray()[0]?.decimal == -19).toBe(true);\n\n            // Using castDecimalToDouble we force decimals to be cast to doubles, note the inevitable imprecision.\n            await db().open({\n                path: ':memory:',\n                query: {\n                    castDecimalToDouble: true,\n                },\n            });\n            conn = await db().connect();\n            const resultWithCast = await conn.query<{\n                decimal: arrow.Float64;\n            }>(`SELECT (-1.9)::DECIMAL(2,1) as decimal`);\n            expect(resultWithCast.toArray()[0]?.decimal).toEqual(-1.9000000000000001);\n        });\n    });\n}\n", "import * as duckdb from '../../src/';\nimport { test332 } from './github_332.test';\nimport { test334 } from './github_334.test';\nimport { test393 } from './github_393.test';\nimport { test448 } from './github_448.test';\nimport { test470 } from './github_470.test';\nimport { test477 } from \"./github_477.test\";\n\nexport function testRegressionAsync(adb: () => duckdb.AsyncDuckDB): void {\n    test332(adb);\n    test334(adb);\n    test393(adb);\n    test448(adb);\n    test470(adb);\n    test477(adb);\n}\n", "import * as duckdb from '../src/';\nimport { Float64, Int32, Utf8 } from 'apache-arrow';\n\nexport function testUDF(db: () => duckdb.DuckDBBindings): void {\n    let conn: duckdb.DuckDBConnection;\n    beforeEach(() => {\n        conn = db().connect();\n    });\n\n    afterEach(() => {\n        conn.close();\n        db().flushFiles();\n        db().dropFiles();\n    });\n\n    describe('UDF', () => {\n        it('simple', async () => {\n            conn.createScalarFunction('jsudf', new Int32(), a => a);\n\n            const result = conn.query(\n                'SELECT max(jsudf(v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([10000]));\n        });\n\n        it('double', async () => {\n            conn.createScalarFunction('jsudf2', new Float64(), a => a);\n\n            const result = conn.query(\n                'SELECT max(jsudf2(v::DOUBLE))::DOUBLE as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Float64Array([10000]));\n        });\n\n        it('2 args', async () => {\n            conn.createScalarFunction('jsudf3', new Int32(), (a, b) => a + b);\n\n            const result = conn.query(\n                'SELECT max(jsudf3(v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([20000]));\n        });\n\n        it('3 args', async () => {\n            conn.createScalarFunction('jsudf3args', new Int32(), (a, b, c) => a + b + c);\n\n            const result = conn.query(\n                'SELECT max(jsudf3args(v::INTEGER, v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([30000]));\n        });\n\n        it('4 args', async () => {\n            conn.createScalarFunction('jsudf4args', new Int32(), (a, b, c, d) => a + b + c + d);\n\n            const result = conn.query(\n                'SELECT max(jsudf4args(v::INTEGER, v::INTEGER, v::INTEGER, v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([40000]));\n        });\n\n        it('noargs', async () => {\n            conn.createScalarFunction('jsudf4', new Int32(), () => 42);\n            const result = conn.query('SELECT max(jsudf4())::INTEGER as foo FROM generate_series(1, 10000) as t(v)');\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([42]));\n        });\n        it('withnulls', async () => {\n            conn.createScalarFunction('jsudf5', new Int32(), a => (a == null ? -100 : a));\n            const result = conn.query(\n                'SELECT min(jsudf5((case when v % 2 = 0 then v else null end)::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\n        });\n\n        it('stringparam', async () => {\n            function jsudf6(s: string) {\n                return s.length;\n            }\n            conn.createScalarFunction('jsudf6', new Int32(), jsudf6);\n            const result = conn.query(\n                \"SELECT max(jsudf6('str_' || v))::INTEGER as foo FROM generate_series(1, 10000) as t(v)\",\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([9]));\n        });\n\n        it('stringparamnulls', async () => {\n            function jsudf7(s: string) {\n                if (s == undefined) {\n                    return 0;\n                } else {\n                    return s.length;\n                }\n            }\n            conn.createScalarFunction('jsudf7', new Int32(), jsudf7);\n            const result = conn.query(\n                \"SELECT max(jsudf7((case when v % 2 = 0 then 'str_' || v else null end)::VARCHAR))::INTEGER as foo FROM generate_series(1, 10000) as t(v)\",\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([9]));\n        });\n\n        it('nullintreturn', async () => {\n            conn.createScalarFunction('jsudf8', new Int32(), a => undefined);\n\n            const result = conn.query(\n                'SELECT max(COALESCE(jsudf8(v::INTEGER), 42))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([42]));\n        });\n\n        it('stringreturn', async () => {\n            conn.createScalarFunction('jsudf9', new Utf8(), a => 'Hello ' + a);\n\n            const result = conn.query(\n                'SELECT max(LENGTH(jsudf9(v::INTEGER)))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([11]));\n        });\n\n        it('nullstringreturn', async () => {\n            conn.createScalarFunction('jsudf10', new Utf8(), a => (a % 2 == 0 ? 'Hello' : undefined));\n\n            const result = conn.query(\n                'SELECT COUNT(jsudf10(v::INTEGER))::INTEGER as foo FROM generate_series(1, 10000) as t(v)',\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([5000]));\n        });\n\n        it('struct', async () => {\n            conn.createScalarFunction('jsudf11', new Int32(), a => (a.x == null ? -100 : a.x));\n            const result = conn.query(\n                `SELECT min(jsudf11({'x': (case when v % 2 = 0 then v else null end)::INTEGER, 'y': 42}))::INTEGER as foo FROM generate_series(1, 10000) as t(v)`,\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\n        });\n\n        it('structnested', async () => {\n            conn.createScalarFunction('jsudf12', new Int32(), a => (a.x.y == null ? -100 : a.x.y));\n            const result = conn.query(\n                `SELECT min(jsudf12({'x': {'y': (case when v % 2 = 0 then v else null end)::INTEGER }, 'z': 42}))::INTEGER as foo FROM generate_series(1, 10000) as t(v)`,\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\n        });\n\n        it('structnestednull', async () => {\n            conn.createScalarFunction('jsudf13', new Int32(), a => (a.x?.y == null ? -100 : a.x!.y));\n            const result = conn.query(\n                `SELECT min(jsudf13({'x': (case when v % 2 = 0 then {'y': v::INTEGER } else null end), 'z': 42}))::INTEGER as foo FROM generate_series(1, 10000) as t(v)`,\n            );\n\n            expect(result.numRows).toEqual(1);\n            expect(result.numCols).toEqual(1);\n            expect(result.getChildAt(0)?.length).toEqual(1);\n            expect(result.getChildAt(0)?.toArray()).toEqual(new Int32Array([-100]));\n        });\n    });\n}\n", "import * as duckdb_blocking from '../src/targets/duckdb-browser-blocking';\nimport * as duckdb from '../src/targets/duckdb';\nimport * as check from 'wasm-feature-detect';\n\n// Configure the worker\nconst DUCKDB_BUNDLES: duckdb.DuckDBBundles = {\n    mvp: {\n        mainModule: new URL('/static/duckdb-mvp.wasm', window.location.href).href,\n        mainWorker: new URL('/static/duckdb-browser-mvp.worker.js', window.location.href).href,\n    },\n    eh: {\n        mainModule: new URL('/static/duckdb-eh.wasm', window.location.href).href,\n        mainWorker: new URL('/static/duckdb-browser-eh.worker.js', window.location.href).href,\n    },\n    coi: {\n        mainModule: new URL('/static/duckdb-coi.wasm', window.location.href).href,\n        mainWorker: new URL('/static/duckdb-browser-coi.worker.js', window.location.href).href,\n        pthreadWorker: new URL('/static/duckdb-browser-coi.pthread.worker.js', window.location.href).href,\n    },\n};\nlet DUCKDB_BUNDLE: duckdb.DuckDBBundle | null = null;\n\ndescribe('wasm check', () => {\n    it('worker and wasm urls', async () => {\n        if (\n            (await duckdb.getPlatformFeatures()).crossOriginIsolated &&\n            (await check.exceptions()) &&\n            (await check.threads())\n        ) {\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.coi!.mainModule);\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.coi!.mainWorker);\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(DUCKDB_BUNDLES.coi!.pthreadWorker);\n        }\n        if ((await check.exceptions()) && !(await check.threads())) {\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.eh!.mainModule);\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.eh!.mainWorker);\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(null);\n        }\n        if (!(await check.exceptions())) {\n            expect(DUCKDB_BUNDLE!.mainModule).toEqual(DUCKDB_BUNDLES.mvp!.mainModule);\n            expect(DUCKDB_BUNDLE!.mainWorker).toEqual(DUCKDB_BUNDLES.mvp!.mainWorker);\n            expect(DUCKDB_BUNDLE!.pthreadWorker).toEqual(null);\n        }\n    });\n});\n\n// Loading debug symbols, especially for WASM take insanely long so we just disable the test timeout\njasmine.DEFAULT_TIMEOUT_INTERVAL = 60000;\n\n// Resolve a buffer by fetching from disk\nconst resolveBuffer = async (url: string) => {\n    const req = await fetch(`/data${url}`);\n    if (!req.ok) return null;\n    return new Uint8Array(await req.arrayBuffer());\n};\n\n// Resolve test data\nconst resolveData = async (url: string) => {\n    switch (url) {\n        case '/uni/all.zip':\n            return await resolveBuffer('/uni/all.zip');\n        case '/uni/assistenten.parquet':\n            return await resolveBuffer('/uni/assistenten.parquet');\n        case '/uni/studenten.parquet':\n            return await resolveBuffer('/uni/studenten.parquet');\n        case '/uni/hoeren.parquet':\n            return await resolveBuffer('/uni/hoeren.parquet');\n        case '/uni/vorlesungen.parquet':\n            return await resolveBuffer('/uni/vorlesungen.parquet');\n        case '/tpch/0_01/parquet/lineitem.parquet':\n            return await resolveBuffer('/tpch/0_01/parquet/lineitem.parquet');\n        default:\n            return null;\n    }\n};\n\n// Test environment\nlet db: duckdb_blocking.DuckDBBindings | null = null;\nlet adb: duckdb.AsyncDuckDB | null = null;\nlet worker: Worker | null = null;\n\nbeforeAll(async () => {\n    const logger = new duckdb_blocking.VoidLogger();\n    db = await duckdb_blocking.createDuckDB(DUCKDB_BUNDLES, logger, duckdb_blocking.BROWSER_RUNTIME);\n    await db.instantiate(_ => {});\n\n    DUCKDB_BUNDLE = await duckdb.selectBundle(DUCKDB_BUNDLES);\n    worker = await duckdb.createWorker(DUCKDB_BUNDLE!.mainWorker!);\n    adb = new duckdb.AsyncDuckDB(logger, worker);\n    await adb.instantiate(DUCKDB_BUNDLE!.mainModule, DUCKDB_BUNDLE!.pthreadWorker);\n});\n\nafterAll(async () => {\n    if (worker) worker.terminate();\n});\n\nimport { testAllTypes, testAllTypesAsync } from './all_types.test';\nimport { testHTTPFS, testHTTPFSAsync } from './httpfs_test';\nimport { testBindings, testAsyncBindings } from './bindings.test';\nimport { testBatchStream } from './batch_stream.test';\nimport { testAsyncBatchStream } from './batch_stream_async.test';\nimport { testFilesystem } from './filesystem.test';\nimport { testArrowInsert, testArrowInsertAsync } from './insert_arrow.test';\nimport { testJSONInsert, testJSONInsertAsync } from './insert_json.test';\nimport { testCSVInsert, testCSVInsertAsync } from './insert_csv.test';\nimport { testTokenization, testTokenizationAsync } from './tokenizer.test';\nimport { testTableNames, testTableNamesAsync } from './tablenames.test';\nimport { testRegressionAsync } from './regression';\nimport { testUDF } from './udf.test';\n//import { testEXCEL } from './excel.test';\n//import { testJSON } from './json.test';\n\nconst baseURL = window.location.origin;\nconst dataURL = `${baseURL}/data`;\n\ntestHTTPFS(() => db!);\ntestHTTPFSAsync(() => adb!, resolveData, dataURL);\ntestUDF(() => db!);\ntestTableNames(() => db!);\ntestTableNamesAsync(() => adb!);\ntestRegressionAsync(() => adb!);\ntestAllTypes(() => db!);\ntestAllTypesAsync(() => adb!);\ntestBindings(() => db!, dataURL);\ntestAsyncBindings(() => adb!, dataURL, duckdb.DuckDBDataProtocol.HTTP);\ntestBatchStream(() => db!);\ntestAsyncBatchStream(() => adb!);\ntestFilesystem(() => adb!, resolveData, dataURL, duckdb.DuckDBDataProtocol.HTTP);\ntestArrowInsert(() => db!);\ntestArrowInsertAsync(() => adb!);\ntestJSONInsert(() => db!);\ntestJSONInsertAsync(() => adb!);\ntestCSVInsert(() => db!);\ntestCSVInsertAsync(() => adb!);\ntestTokenization(() => db!);\ntestTokenizationAsync(() => adb!);\n//testEXCEL(() => db!);\n//testJSON(() => db!);\n"],
  "mappings": "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",
  "names": ["is224", "method", "blocks", "exports", "module", "DuckDB", "err", "instance", "fd", "tmp", "Module", "out", "family", "type", "proto", "addr", "port", "ai", "sum", "date", "ret", "wasmExports", "exports", "module", "DuckDB", "err", "instance", "fd", "tmp", "Module", "out", "family", "type", "proto", "addr", "port", "ai", "sum", "date", "ret", "wasmExports", "exports", "module", "v", "it", "source", "pump", "it", "events", "err", "MetadataVersion", "UnionMode", "Precision", "DateUnit", "TimeUnit", "IntervalUnit", "MessageHeader", "Type", "BufferType", "x", "_a", "instance", "instance", "_a", "instance", "getBool", "setBool", "sum", "byteLength", "nullBitmap", "length", "getBool", "instance", "instance", "instance", "_a", "_b", "_d", "_c", "instance", "begin", "end", "newData", "_a", "size", "_a", "_b", "_c", "_d", "Encoding", "Builder", "MetadataVersion", "Endianness", "DictionaryKind", "Binary", "Bool", "DateUnit", "Date", "DateUnit", "Decimal", "TimeUnit", "FixedSizeBinary", "FixedSizeList", "Precision", "Precision", "IntervalUnit", "IntervalUnit", "List", "Map", "Null", "TimeUnit", "TimeUnit", "UnionMode", "UnionMode", "Utf8", "Type", "Type", "MetadataVersion", "Schema", "Field", "Builder", "ByteBuffer", "Schema", "db", "_d", "_e", "_f", "_a", "_c", "Int64", "Uint64", "sum", "Field", "Int64", "Field", "Field", "Field", "Field", "Field", "instance", "instance", "instance", "type", "Field", "_a", "Schema", "schema", "Field", "batches", "_c", "_b", "instance", "data", "indices", "oldToNew", "_a", "Schema", "Field", "instance", "_b", "_a", "BodyCompressionMethod", "CompressionType", "method", "Buffer", "RecordBatch", "Buffer", "RecordBatch", "MessageHeader", "MetadataVersion", "MessageHeader", "Null", "Binary", "Bool", "Utf8", "Decimal", "Date", "List", "FixedSizeBinary", "FixedSizeList", "Map", "instance", "Schema", "RecordBatch", "DictionaryBatch", "Field", "FieldNode", "sum", "Builder", "ByteBuffer", "Message", "Schema", "RecordBatch", "DictionaryBatch", "FieldNode", "Field", "Type", "Decimal", "Date", "FixedSizeBinary", "FixedSizeList", "Map", "instance", "Buffer", "Message", "_a", "_d", "_e", "_f", "_c", "self", "FieldNode", "Message", "RecordBatch", "DictionaryBatch", "_a", "_b", "_d", "it", "_a", "reader", "tmp", "decoder", "f64", "blocks", "TEXT_ENCODER", "worker", "TEXT_ENCODER", "e", "method", "xhr", "result", "response", "DuckDBWasm", "DuckDB", "DuckDBWasm", "DuckDB", "db", "TEXT_ENCODER", "worker", "_p", "Worker", "db", "module", "adb", "resolveData", "db", "baseURL", "adb", "db", "testRows", "db", "decoder", "db", "resolveData", "Schema", "Field", "db", "encoder", "db", "describeBrowser", "encoder", "TEST_FILE", "db", "db", "db", "db", "adb", "db", "db", "db", "db", "adb", "db"]
}

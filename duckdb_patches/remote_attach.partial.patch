diff --git a/src/execution/operator/schema/physical_attach.cpp b/src/execution/operator/schema/physical_attach.cpp
index 2c2b76a0fc..2d835441c2 100644
--- a/src/execution/operator/schema/physical_attach.cpp
+++ b/src/execution/operator/schema/physical_attach.cpp
@@ -96,6 +96,25 @@ SourceResultType PhysicalAttach::GetData(ExecutionContext &context, DataChunk &c
 		}
 	}
 
+	string extension = "";
+	if (FileSystem::IsRemoteFile(path, extension)) {
+		if (!ExtensionHelper::TryAutoLoadExtension(context.client, extension)) {
+			throw MissingExtensionException("Attaching path '%s' requires extension '%s' to be loaded", path,
+			                                extension);
+		}
+		if (access_mode == AccessMode::AUTOMATIC) {
+			// Attaching of remote files gets bumped to READ_ONLY
+			// This is due to the fact that on most (all?) remote files writes to DB are not available
+			// and having this raised later is not super helpful
+			access_mode = AccessMode::READ_ONLY;
+		}
+		if (access_mode == AccessMode::READ_WRITE) {
+			auto attached_mode = EnumUtil::ToString(access_mode);
+			throw BinderException("Remote database \"%s\" can't be attached in %s mode",
+			                     name, attached_mode);
+		}
+	}
+
 	// get the database type and attach the database
 	db_manager.GetDatabaseType(context.client, db_type, *info, config, unrecognized_option);
 	auto attached_db = db_manager.AttachDatabase(context.client, *info, db_type, access_mode);

name: 'Benchmarks'
on:
    workflow_dispatch:
        inputs:
            pkg_version:
                default: 'next'
                description: 'The npm package version'
                required: true
                type: string

jobs:
    tpchgen:
        name: TPCH Generator
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: 'recursive'

            - name: Cache generator
              uses: actions/cache@v2
              id: cache-generator
              with:
                  path: ./submodules/tpch-dbgen/dbgen/dbgen
                  key: ${{ runner.os }}-tpch-dben

            - name: Build generator
              if: steps.cache-generator.outputs.cache-hit != 'true'
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      make -C ./submodules/tpch-dbgen/dbgen/ dbgen

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: tpch-dbgen
                  path: |
                      ./submodules/tpch-dbgen/dbgen/dbgen
                  retention-days: 1

    dataprep:
        name: Dataprep
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: 'recursive'

            - name: Cache rust build
              uses: actions/cache@v2
              with:
                  path: |
                      ./.cargo/bin/
                      ./.cargo/registry/index/
                      ./.cargo/registry/cache/
                      ./.cargo/git/db/
                      ./target
                  key: ${{ runner.os }}-dataprep-${{ hashFiles('./Cargo.lock') }}-${{ hashFiles('./tools/dataprep/src/*.rs') }}
                  restore-keys: |
                      ${{ runner.os }}-dataprep-

            - name: Build generator
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      cargo build --manifest-path=./Cargo.toml --release -p dataprep

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: dataprep
                  path: |
                      ./target/release/dataprep
                  retention-days: 1

    duckdb_shell:
        name: DuckDB Shell
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: 'recursive'

            - name: Git submodule status
              run: |
                  git submodule status ./submodules/duckdb > git_submodule_status.txt

            - name: Cache ccache
              uses: actions/cache@v2
              with:
                  path: |
                      ./.ccache
                  key: ${{ runner.os }}-duckdb-${{ hashFiles('git_submodule_status.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-duckdb-

            - name: Build DuckDB shell
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      ccache -z
                      ./scripts/build_duckdb_shell.sh
                      ccache -s

            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: duckdb-shell
                  path: ./submodules/duckdb/build/Release/duckdb
                  retention-days: 1

    bench_tpch_0_01:
        name: Benchmark TPCH @ 0.01
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - tpchgen
            - duckdb_shell
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: 'recursive'
                  fetch-depth: 0

            - uses: actions/download-artifact@v2
              with:
                  name: dataprep
                  path: ./target/release/

            - uses: actions/download-artifact@v2
              with:
                  name: tpch-dbgen
                  path: ./submodules/tpch-dbgen/dbgen/

            - uses: actions/download-artifact@v2
              with:
                  name: duckdb-shell
                  path: ./submodules/duckdb/build/Release/

            - name: Cache node_modules
              uses: actions/cache@v2
              with:
                  path: |
                      ./node_modules
                      ./packages/benchmarks/node_modules
                      ./packages/duckdb-wasm/node_modules
                      ./packages/duckdb-wasm-shell/node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Prepare repository
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      yarn install --frozen-lockfile
                      ./scripts/generate_tpch_tbl.sh 0.01
                      ./scripts/generate_tpch_arrow.sh 0.01
                      ./scripts/generate_tpch_duckdb.sh 0.01
                      ./scripts/generate_tpch_sqlite.sh 0.01

            - name: Restore NPM release
              run: |
                  ./scripts/npm_restore.sh ${{ github.event.inputs.pkg_version }}

            - name: Build @duckdb/benchmarks
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      yarn workspace @duckdb/benchmarks build

            - name: Benchmark DuckDB
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      yarn workspace @duckdb/benchmarks bench:system:tpch:duckdb 0.01

            - name: Benchmark SQL.js
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      yarn workspace @duckdb/benchmarks bench:system:tpch:sqljs 0.01

            - name: Benchmark Arquero
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      yarn workspace @duckdb/benchmarks bench:system:tpch:arquero 0.01

            - name: Benchmark Lovefield
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      yarn workspace @duckdb/benchmarks bench:system:tpch:lovefield 0.01

            - name: Upload report
              uses: actions/upload-artifact@v2
              with:
                  name: benchmark_system_tpch_001
                  path: ./reports/benchmark_system_tpch_001.json
                  retention-days: 1

    merge_benchmarks:
        name: Merge benchmark reports
        runs-on: ubuntu-latest
        needs:
            - dataprep
            - bench_tpch_0_01
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: bench_tpch_0_01
                  path: ./reports/

            - name: Merge benchmark reports
              uses: duckdb/duckdb-wasm-ci-env@v0.5
              with:
                  script: |-
                      ./target/release/dataprep merge-benchmarks -r ./reports/

#            - name: Deploy Web Shell
#              if: github.ref == 'refs/heads/master'
#              run: |
#                  git config --global user.name 'github-actions[bot]'
#                  git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
#                  git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
#                  git fetch origin gh-pages
#                  ./scripts/deploy_benchmarks.sh
